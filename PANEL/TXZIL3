)ATTR
 Â¬ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW) HILITE(REVERSE)
 @ TYPE(TEXT) INTENS(HIGH) COLOR(PINK)
 # TYPE(TEXT) INTENS(LOW)  COLOR(TURQ)
 \ TYPE(TEXT) INTENS(HIGH) COLOR(YELLOW)
 ! TYPE(TEXT) INTENS(HIGH) COLOR(RED)
 $ TYPE(TEXT) INTENS(LOW)  COLOR(GREEN)
)BODY EXPAND(``)
%TUTORIAL -`-`- ZIL - RUN THE INTERPRETER -`-`- TUTORIAL
%SELECTION ===>_ZCMD                                                           +
+
 This option runs the ZIL@interpreter. +The interpreter is the part of a LISP
 system with which most users are familiar.  You can run functions without
 compiling them, and enter LISP expressions to be evaluated, to see whether
 they work in the manner that you intended.  If you desire the increased speed
 and efficiency of compiled code, you may compile your functions and run them
 under the interpreter as well.

 You may specify the name of an@INIT file+which you have created to start up
 your interpretive LISP environment;  this must be a sequential data set or a
 member of a PDS containing LISP source code, which is run interpretively.

#The following topics will be presented only if selected by number:

 \1%-$Loading compiled code from subroutine libraries
 \2%-$Loading interpretive function and macro definitions
 \3%-$Specifying session output recording ("dribble" feature)
 \4%-$Run-time options
 \5%-$How to run the ZIL interpreter in batch
)INIT
)PROC
 &ZSEL = TRANS(&ZCMD
                    1,*TXZILS
                    2,*TXZILF
                    3,*TXZILO
                    4,*TXZILR
                    5,*TXZILJ
                    *,?
              )
)END
