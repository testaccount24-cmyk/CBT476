         TITLE 'ZILBOOL - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*
* ZILBOOL TAKES 3 INTEGER ARGUMENTS. CURRENTLY THEY MUST BE FIXNUMS.
*
***********************************************************************
ZILBOOL  #ZBEG MINARGS=3,MAXARGS=3,NAME='ZILBOOL'
         #ZPDS 3*4+12+0 (= 24)     DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         LM    #5,#7,0(#11)        LOAD ARGUMENTS
         CLI   ##TYPE(#5),##FIXNUM FIRST ARGUMENT MUST BE A FIXNUM
         BNE   ERROR1
         CLI   ##TYPE(#6),##FIXNUM SECOND ARGUMENT MUST BE A FIXNUM
         BNE   ERROR2
         CLI   ##TYPE(#7),##FIXNUM THIRD ARGUMENT MUST BE A FIXNUM
         BNE   ERROR3
         ICM   #14,15,##CDR(#5)    GET VALUE OF ARG1
         BM    ERROR1              IF LESS THAN ZERO, ERROR
         CH    #14,=H'15'          IF GREATER THAN 15, ERROR
         BH    ERROR1
         SLA   #14,2               CONVERT TO BRANCH INDEX
         B     GO(#14)
GO       DS    0H
         B     BOOLE0
         B     BOOLE1
         B     BOOLE2
         B     BOOLE3
         B     BOOLE4
         B     BOOLE5
         B     BOOLE6
         B     BOOLE7
         B     BOOLE8
         B     BOOLE9
         B     BOOLE10
         B     BOOLE11
         B     BOOLE12
         B     BOOLE13
         B     BOOLE14
         B     BOOLE15
         EJECT
BOOLE0   DS    0H                  (BOOLE 0 X Y) = 0
         SPACE 1
         LA    #15,#SFT0            RETURN CONSTANT FIXNUM ZERO
         B     RETURN
         SPACE 1
BOOLE1   DS    0H                  (BOOLE 1 X Y) = (LOGAND X Y)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         N     #2,##CDR(,#7)       DO LOGICAL AND WITH VALUE 2
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE2   DS    0H                  (BOOLE 2 X Y) =
*                                   (LOGAND (LOGNOT X) Y)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         X     #2,NOT              DO LOGICAL NOT OF VALUE 1
         N     #2,##CDR(,#7)       DO LOGICAL AND WITH VALUE 2
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE3   DS    0H                  (BOOLE 3 X Y) = Y
         SPACE 1
         LR    #15,#7              GET ARG 2
         B     RETURN
         SPACE 1
BOOLE4   DS    0H                  (BOOLE 4 X Y) =
*                                   (LOGAND X (LOGNOT Y))
         SPACE 1
         L     #2,##CDR(,#7)       GET VALUE 2
         X     #2,NOT              DO LOGICAL NOT OF VALUE 2
         N     #2,##CDR(,#6)       DO LOGICAL AND WITH VALUE 1
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE5   DS    0H                  (BOOLE 5 X Y) = X
         SPACE 1
         LR    #15,#6              GET ARG 1
         B     RETURN
         SPACE 1
BOOLE6   DS    0H                  (BOOLE 6 X Y) = (LOGXOR X Y)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         X     #2,##CDR(,#7)       DO LOGICAL XOR WITH VALUE 2
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE7   DS    0H                  (BOOLE 7 X Y) = (LOGIOR X Y)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         O     #2,##CDR(,#7)       DO LOGICAL OR WITH VALUE 2
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE8   DS    0H                  (BOOLE 8 X Y) =
*                                   (LOGNOT (LOGIOR X Y))
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         O     #2,##CDR(,#7)       DO LOGICAL OR WITH VALUE 2
         X     #2,NOT              DO LOGICAL NOT
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE9   DS    0H                  (BOOLE 9 X Y) =
*                                   (LOGNOT (LOGXOR X Y))
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         X     #2,##CDR(,#7)       DO LOGICAL XOR WITH VALUE 2
         X     #2,NOT              DO LOGICAL NOT
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE10  DS    0H                  (BOOLE 10 X Y) = (LOGNOT X)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         X     #2,NOT              DO LOGICAL NOT
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE11  DS    0H                  (BOOLE 11 X Y) =
*                                   (LOGIOR (LOGNOT X) Y)
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         X     #2,NOT              DO LOGICAL NOT OF VALUE 1
         O     #2,##CDR(,#7)       DO LOGICAL OR WITH VALUE 2
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE12  DS    0H                  (BOOLE 12 X Y) = (LOGNOT Y)
         SPACE 1
         L     #2,##CDR(,#7)       GET VALUE 2
         X     #2,NOT              DO LOGICAL NOT
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE13  DS    0H                  (BOOLE 13 X Y) =
*                                   (LOGIOR X (LOGNOT Y))
         SPACE 1
         L     #2,##CDR(,#7)       GET VALUE 2
         X     #2,NOT              DO LOGICAL NOT
         O     #2,##CDR(,#6)       DO LOGICAL OR WITH VALUE 1
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE14  DS    0H                  (BOOLE 14 X Y) =
*                                   (LOGNOT (LOGAND X Y))
         SPACE 1
         L     #2,##CDR(,#6)       GET VALUE 1
         N     #2,##CDR(,#7)       DO LOGICAL AND WITH VALUE 2
         X     #2,NOT              DO LOGICAL NOT
         B     MAKEIT              GO MAKE A FIXNUM
         SPACE 1
BOOLE15  DS    0H                  (BOOLE 15 X Y) = -1
         SPACE 1
         LA    #15,#SFTM1          RETURN CONSTANT FIXNUM -1
         B     RETURN
         SPACE 1
         EJECT
MAKEIT   DS    0H                  OK, #2 CONTAINS RESULT TO RETURN
         SPACE 1
         LA    #0,24(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FIXED               MAKE A FIXNUM
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,
         SPACE 1
NOT      EQU   #SFWM1              HEX FFFFFFFF
         SPACE 1
ERROR1   #ERR  'Argument 1 to ZILBOOL not a fixnum between 0 and 15 - 'X
               ,(#5)
ERROR2   #ERR  'Argument 2 to ZILBOOL not a fixnum - ',(#6)
ERROR3   #ERR  'Argument 3 to ZILBOOL not a fixnum - ',(#7)
         SPACE 1
         LTORG
         END
