         TITLE 'ZILXLFY - ZIL 1.3 LISTIFY PROCESSOR FOR COMPILED CODE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS MODULE IS INVOKED FROM COMPILED CODE TO IMPLEMENT THE         *
*  "LISTIFY" SPECIAL FORM.                                            *
*                                                                     *
*  ON ENTRY TO THIS FUNCTION:                                         *
*                                                                     *
*  #0 = THE CURRENT TOP-OF-STACK POINTER FOR CONS                     *
*  #1 = THE ARG TO LISTIFY (MUST BE NIL OR A FIXNUM)                  *
*                                                                     *
*  THIS FUNCTION RETURNS A LIST MADE UP OF ARGS FROM THE STACK THAT   *
*  WERE PASSED TO THE CALLING LEXPR.                                  *
*                                                                     *
*  ARG = NIL - CONS UP ALL THE LEXPR ARGS ON THE STACK.               *
*  ARG > 0   - CONS UP THE FIRST (ARG) ARGS ON THE STACK.             *
*  ARG < 0   - CONS UP THE LAST (ARG) ARGS ON THE STACK.              *
*  ARG = 0   - NIL (OF COURSE!).                                      *
*                                                                     *
***********************************************************************
         SPACE 1
ZILXLFY  #ZBEG NAME='ZILXLFY'
         SPACE 1
         ST    #12,SAVE12          SAVE REGISTERS
         ST    #14,SAVE14
         LR    #12,#15
         DROP  #15
         USING ZILXLFY,#12
         SPACE 1
         OI    ZLCGCFLG,ZLCGCBLD   TELL GC OUR #0 IS GOOD
         SPACE 1
         LR    #4,#11              GET CURRENT STACK PTR (END OF ARGS)
         L     #3,0(,#11)          GET POINTER TO BOTTOM OF LEXPR STACK
         LA    #3,4(,#3)           POINT PAST LEXPR ARG TO STACK ARGS
         SPACE 1
         CR    #1,#10              IF ARG TO LISTIFY IS NIL
         BE    PROCESS             THEN GO CONS UP ALL THE ARGS
         CLI   ##TYPE(#1),##FIXNUM ELSE ARG MUST BE A FIXNUM
         BNE   ERROR               IN WHICH CASE
         L     #1,##CDR(,#1)       GET ITS NUMERIC VALUE
         SPACE 1
         LR    #15,#4              GET LENGTH OF STACK AREA WITH ARGS
         SR    #15,#3
         SRL   #15,#2              GET THE # OF ARGS PASSED TO LEXPR
         LTR   #1,#1               CHECK SIGN OF ARG
         BM    NEG                 IF NEGATIVE, PROCESS NEGATIVE
         BP    POS                 IF POSITIVE, PROCESS POSITIVE
         LR    #15,#10             ELSE (LISTIFY 0) ==> NULL LIST
         B     RETURN              AND RETURN WITH NIL
         SPACE 1
POS      DS    0H                  (LISTIFY N), N > 0
         SPACE 1
         CR    #1,#15              IF ARG GREATER THAN TRUE # OF ARGS
         BNH   *+6                 THEN
         LR    #1,#15               RESET ARG TO MAX # OF ARGS
*                                  #3 REMAINS THE SAME.
         SLL   #1,2                CONVERT TO SIZE OF STACK SLOT
         LA    #4,0(#1,#3)         SET NEW POINTER TO END OF ARGS
         B     PROCESS             GO CONS 'EM UP
         SPACE 1
NEG      DS    0H                  (LISTIFY N), N < 0
         SPACE 1
         LPR   #1,#1               CONVERT TO POSITIVE VALUE
         CR    #1,#15              IF ARG GREATER THAN TRUE # OF ARGS
         BNH   *+6                 THEN
         LR    #1,#15               RESET ARG TO MAX # OF ARGS
*                                  #4 REMAINS THE SAME.
         SLL   #1,2                CONVERT TO SIZE OF STACK SLOT
         LR    #3,#4               SET NEW POINTER TO START OF ARGS
         SR    #3,#1
******** B     PROCESS             GO CONS 'EM UP
         SPACE 1
PROCESS  DS    0H                  OK, DO IT
         SPACE 1
*                                  #3 --> START OF ARGS TO CONS UP
*                                  #4 --> END OF ARGS TO CONS UP
         LR    #6,#4               INITIALIZE PTR INTO STACK FOR ARGS
         LR    #15,#10             INITIALIZE RETURNED LIST TO NIL
LOOP     DS    0H
         SH    #6,=H'4'            LOOP DOWN UNTIL NO MORE ARGS
         CR    #6,#3                AT WHICH POINT
         BL    RETURN                RETURN WITH WHAT WE'VE GOT
         L     #1,0(,#6)           ARG 1 TO CONS = ARG FROM STACK
         LR    #2,#15              ARG 2 TO CONS = LIST SO FAR
         L     #15,ZLCCONS         GET ADDRESS OF ZILCONS
         #BASR #14,#15             CALL CONS TO ADD ARG TO LIST
         B     LOOP                CONTINUE LOOPING
         SPACE 1
RETURN   DS    0H                  RETURN VALUE IS IN #15
         SPACE 1
         NI    ZLCGCFLG,255-ZLCGCBLD RESTORE GC FLAG
         SPACE 1
         L     #14,SAVE14
         L     #12,SAVE12          RESTORE REGISTERS
         BR    #14                 RETURN
         SPACE 1
ERROR    DS    0H                  INVALID ARG
         LR    #2,#1
         #ERR  'Argument to LISTIFY not a fixnum or NIL - ',(#2)
         SPACE 1
SAVE12   DS    A
SAVE14   DS    A
         SPACE 1
         LTORG
         END
