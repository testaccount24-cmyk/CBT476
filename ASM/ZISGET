         TITLE 'ZISGET - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* (ZISGET 'foo) or (ZISGET "foo") returns the value of the ISPF       *
* dialog variable FOO.  It uses the same variable search as the       *
* VCOPY service, which it invokes.  The value is returned as a        *
* LISP string.                                                        *
*                                                                     *
***********************************************************************
         SPACE
ZISGET   #ZBEG MINARGS=1,MAXARGS=1,NAME='ZISGET'
         #ZPDS 1*4+12+0 = 16       DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE 1
         L     #2,0(,#11)          Get arg 1
         CLI   ##TYPE(#2),##STRING OK if string
         BE    A1TYPOK
         CLI   ##TYPE(#2),##SYMBOL If symbol,
         BNE   ERROR1               then use print name
         L     #2,##PNAME(,#2)
A1TYPOK  DS    0H
         XR    #3,#3
         ICM   #3,B'0111',1(#2)    Get string length
         BZ    ERROR1              If null string, invalid variable nm
         CH    #3,=H'8'            If longer than 8 characters,
         BH    ERROR1              then invalid variable name
         MVC   VARNAME,=CL8' '
         BCTR  #3,0
         EX    #3,MVCVAR           Move variable name, folding to up.c.
*
* Get ISPLINK
*
         ICM   #15,15,@ISPLINK     Get address of ISPLINK
         BNZ   LOADED              If not loaded, then
         LOAD  EPLOC==CL8'ISPLINK',ERRET=NOSPF
         ST    #0,@ISPLINK         Save entry point
         LR    #15,#0              Get entry point
LOADED   DS    0H
*
* INVOKE THE DIALOG SERVICE VIA ISPEX
*
         ST    #9,ZLCISV09         Save #9 in case of interrupt
         LA    #1,PARMS            POINT TO PARAMETER LIST FOR ISPLINK
         OI    ZLCIFLGS,ZLCISYS    Indicate non-ZIL code running
         #BASR #14,#15             Call ISPLINK
         TM    ZLCIFLGS,ZLCIATTN   If attention interrupt occurred
         BOR   #13                 then go to handle it
         NI    ZLCIFLGS,255-ZLCISYS Indicate ZIL code running again
*
* If CONTROL ERRORS RETURN is in effect, and the return code is higher
* than 8, then we assume variable-not-found condition.
* We should really handle this better - like set ZERRMSG???
*
         CH    #15,=H'20'
         BE    VERROR
         LTR   #15,#15
         BNZ   NOTFOUND
         SPACE 1
         L     #5,LENGTHS          Get length of returned value
         L     #6,VALUES           Get address of returned value
         LR    #2,#5               Set length of string to create
         XR    #1,#1               Entry code 0 = allocate new space
         L     #15,ZLCVSS          Get address of string space service
         LA    #0,16(,#11)         Set current stack pointer
         #BASR #14,#15             Call ZILVSS to build string
         LTR   #4,#4               If ZILVSS failed,
         BZ    NOROOM              then error
         LR    #7,#5               Else get length of value
         MVCL  #4,#6               Move value into string data
         B     RETURN              Return with string ptr in #15
         SPACE 1
NOTFOUND DS    0H                  Variable requested not found
         SPACE 1
         LA    #15,NULLSTR         Return a null string
******** B     RETURN
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,
         SPACE 1
MVCVAR   OC    VARNAME(*-*),##VECDAT(#2)
         SPACE 1
@ISPLINK DC    A(0)                Address of ISPLINK
         SPACE 1
PARMS    DS    0A
PARM1    DC    A($VCOPY)           Address of 'VCOPY'
PARM2    DC    A(NAMELIST)         Address of variable name list
PARM3    DC    A(LENGTHS)          Address of length(s)
PARM4    DC    A(VALUES)           Address of value(s)
PARM5    DC    A($LOCATE+X'80000000') Addr of 'LOCATE' parm
         SPACE 1
$VCOPY   DC    CL8'VCOPY'          Dialog service name
$LOCATE  DC    C'LOCATE '          Dialog service parameter
NAMELIST DC    C'('                Start of name list
VARNAME  DC    CL8' '              Variable name
         DC    C')'                End of name list
LENGTHS  DS    F                   Length of returned value
VALUES   DS    A                   Address of returned value
         SPACE 1
NULLSTR  DC    YL1(##STRING),AL3(0),XL4'00'  String ""
         SPACE 1
ERROR1   #ERR  'Argument to ZISGET not a valid ISPF variable name - ', X
               0(#11)
NOSPF    #ERR  'ZISGET failed, ISPF dialog services not available.'
VERROR   #ERR  'ZISGET failed, ISPF dialog error doing VCOPY.'
NOROOM   #ERR  'ZISGET failed, not enough vector/string space to returnX
                variable value.'
         SPACE 1
         LTORG
         END
