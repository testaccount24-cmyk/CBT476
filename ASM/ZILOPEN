         TITLE 'ZILOPEN - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ZILOPEN TAKES TWO ARGUMENTS - (1) DATA SET NAME, (2) TYPE.          *
*                                                                     *
***********************************************************************
         SPACE
ZILOPEN  #ZBEG MINARGS=1,MAXARGS=2,NAME='ZILOPEN'
         #ZPDS 2*4+12              DEFINE STACK SIZE
         #ZSAV ARGS=2              SAVE REGISTERS
         SPACE 1
         NI    FLAGS,255-PROBEFLG-APPFLAG INITIALIZE FLAGS
         LM    #1,#2,0(#11)        LOAD ARGUMENTS
*                           Assume arg 2 is fixnum and check mode bits.
         TM    ##CDR+##MODEB3(#2),##PROBE
         BO    SETPROBE            PROBE mode, don't open, just probe
         TM    ##CDR+##MODEB3(#2),##APPEND
         BO    SETAPP              APPEND mode, open for append
         TM    ##CDR+##MODEB3(#2),##OUTPUT
         BO    SETOUT              OUTPUT mode, open for output
******** B     SETIN               Open for input
SETIN    DS    0H                  INDICATE INPUT MODE
         MVI   DDCHAR,C'I'         SET FILE NAME TO ZILI....
         MVI   STATUS99,X'08'      SET SVC 99 DISP = SHR
         MVI   DISP99,X'08'        SET SVC 99 DISP = KEEP
         B     MODESET
SETOUT   DS    0H                  INDICATE OUTPUT MODE
         MVI   DDCHAR,C'O'         SET FILE NAME TO ZILO....
         MVI   STATUS99,X'01'      SET SVC 99 DISP = OLD
         MVI   DISP99,X'08'        SET SVC 99 DISP = KEEP
         B     MODESET
SETAPP   DS    0H                  INDICATE OUTPUT MODE
         OI    FLAGS,APPFLAG       SET APPEND FLAG
         MVI   DDCHAR,C'O'         SET FILE NAME TO ZILO....
         MVI   STATUS99,X'02'      SET SVC 99 DISP = MOD
         MVI   DISP99,X'02'        SET SVC 99 DISP = CATLG
         B     MODESET
SETPROBE DS    0H                  INDICATE OUTPUT MODE
         OI    FLAGS,PROBEFLG      SET NO FILE NAME, JUST PROBE
         MVI   DDCHAR,C'I'         TREAT AS IF INPUT FILE
         MVI   STATUS99,X'08'      SET SVC 99 DISP = SHR
         MVI   DISP99,X'08'        SET SVC 99 DISP = KEEP
******** B     MODESET
         SPACE 1
MODESET  DS    0H
         NI    FLAGS,255-ALFLAG    INITIALIZE ALLOCATION FLAG
*
* SET THE FILE NAME WE WILL BE USING FOR THIS OPEN.
*
         LH    #3,ZLCFILNO         GET CURRENT FILE NUMBER
         LA    #3,1(,#3)           ADD 1
         STH   #3,ZLCFILNO         UPDATE FILE NUMBER
         CVD   #3,ZLCDBL           CONVERT TO DECIMAL
         UNPK  FILENAME(4),ZLCDBL
         OI    FILENAME+3,X'F0'    MAKE IT PRINTABLE
*
* EXTRACT ARG 1 = DSNAME. #1 ALREADY CONTAINS ATOM TO BE DUMPED.
*
         CLI   ##TYPE(#1),##STRING IF ARG1 IS ALREADY A STRING
         BE    GOODARG1            THEN JUST USE IT.  ELSE...
         CLI   ##TYPE(#1),##SYMBOL IF ARG1 IS A SYMBOL
         BNE   BADARG1             THEN...
         L     #1,##PNAME(,#1)      GET THE PRINT NAME
GOODARG1 DS    0H                  (ELSE ERROR - BAD DSNAME ARG)
         XR    #6,#6
         ICM   #6,7,1(#1)          GET LENGTH OF ATOM (DSNAME)
         LA    #1,##VECDAT(,#1)    POINT TO TEXT OF DSNAME
*
* PARSE DSNAME AND INSERT IN SVC99 FIELDS.
* NOTE #1 POINTS TO DSNAME.
*
         NI    FLAGS,255-MEMFLAG-FREEFLAG  INITIALIZE FLAGS
         LA    #15,TUPLALLC        SET TEXT UNIT PTRS FOR ALLOCATION
         ST    #15,S99TXTPP        STORE ADDR OF TEXT UNIT POINTERS
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION
         MVI   DALMEMBR+1,X'00'    INITIALLY DON'T ALLOCATE MEMBER
         MVI   DALTRK+1,X'00'       AND
         MVI   DALPRIME+1,X'00'      NO
         MVI   DALSECND+1,X'00'       SPACE
         MVI   DALDIR+1,X'00'          SPECIFICATIONS
         XC    MEMLEN99,MEMLEN99   SET MEMBER LENGTH TO ZERO
         MVI   MEMBER99,C' '       SET MEMBER NAME TO BLANKS
         MVC   MEMBER99+1(7),MEMBER99
         XC    DSLEN99,DSLEN99     SET DSNAME LENGTH TO ZERO
         MVI   DSNAME99,C' '       SET DSNAME TO BLANKS
         MVC   DSNAME99+1(43),DSNAME99
         XC    DSNSLEN,DSNSLEN     CLEAR FAKE STRING LENGTHS
         XC    MEMSLEN,MEMSLEN     CLEAR FAKE STRING LENGTHS
         LA    #7,DSNAME           POINT TO WHERE TO MOVE DSNAME
         LA    #4,0(#1,#6)         POINT TO END OF DUMPED NAME
         BCTR  #4,0                POINT TO LAST CHARACTER IN NAME
         CLI   0(#1),C''''         SEE IF NAME IS QUOTED
         BNE   NOQUOTE             IF IT STARTS WITH A QUOTE, THEN...
         LA    #5,1(,#1)           POINT TO START OF TRUE DSNAME
         BCTR  #6,0                TAKE 1 FROM LENGTH 4 INITIAL QUOTE
         CLI   0(#4),C''''         IF IT DOES NOT END WITH A QUOTE
         BNE   AFTQUOTE            AND IF THE LAST CHARACTER =  QUOTE
         BCTR  #6,0                THEN MINUS 1 TO ALLOW FOR THAT ONE
         B     AFTQUOTE            (THAT'S HOW LAST QUOTE IS OPTIONAL)
NOQUOTE  DS    0H                  ELSE IF DSNAME HAS NO QUOTES
         LR    #5,#1               POINT TO START OF TRUE DSNAME
         L     #15,540             GET TCB ADDRESS
         L     #15,X'B4'(,#15)     JSCB ADDRESS
         L     #15,X'15C'(,#15)    CURRENT JSCB ADDRESS
         L     #15,X'108'(,#15)    PSCB ADDRESS
         LTR   #15,#15             IF NO PSCB
         BZ    AFTQUOTE            THEN NO TSO ENV, ASSUME NO PREFIX
         USING PSCB,#15
         L     #15,PSCBUPT         UPT ADDRESS
         DROP  #15
         USING UPT,#15
         XR    #14,#14             CLEAR INSERT REG
         ICM   #14,1,UPTPREFL      GET LENGTH OF TSO PREFIX
         BZ    AFTQUOTE            IF NONZERO, THEN...
         BCTR  #14,0                REDUCE LENGTH
         EX    #14,MVCPREF          MOVE PREFIX TO SVC99 DSNAME AREA
         DROP  #15
         LA    #7,DSNAME+1(#14)     POINT TO WHERE TO MOVE REST OF NAME
         MVI   0(#7),C'.'           MOVE IN A PERIOD
         LA    #7,1(,#7)            POINT TO WHERE TO MOVE DSNAME
AFTQUOTE DS    0H
*
* NOW #5 --> DSNAME WITHOUT QUOTES
*     #6 IS ITS LENGTH             (POSSIBLE (MEMBER) INCLUDED)
*     #7 IS WHERE TO MOVE THE NAME (IN "DSNAME")
*
         LTR   #6,#6               IF LENGTH OF DSNAME IS ZERO
         BNP   BADARG1             THEN SYNTAX ERROR
         CH    #6,=H'56'           IF TOO LONG
         BH    BADARG1             THEN SYNTAX ERROR
         BCTR  #6,0                ELSE REDUCE FOR EXECUTE
         EX    #6,MVCNAME          MOVE IT, MEMBER NAME & ALL
         EX    #6,TRNAME           TRANSLATE TO UPPER CASE
         LA    #4,0(#7,#6)         POINT TO LAST CHARACTER OF DSNAME
         CLI   0(#4),C')'          IF DSNAME ENDS IN RIGHT PARENTHESIS
         BE    EXTRACTM            THEN EXTRACT MEMBER NAME
         LA    #4,1(,#4)           ELSE POINT TO TRUE END
         NI    FLAGS,255-MEMFLAG   SHOW NO MEMBER REQUESTED
         B     SETDSN
         SPACE 1
EXTRACTM DS    0H                  GET MEMBER: #7 -> START OF DSNAME
         LA    #2,0(,#4)           POINT TO ) TERMINATING MEMBER NAME
MEMLOOP  CR    #4,#7               IF NO ( FOUND, OR 1ST CHAR IS (,
         BNH   BADARG1             THEN SYNTAX ERROR IN DSNAME
         CLI   0(#4),C'('          SEARCH FOR LEFT PARENTHESIS
         BE    GOTMEM
         BCT   #4,MEMLOOP
GOTMEM   DS    0H                  GOT MEMBER NAME, #4 --> (
         LA    #6,1(,#4)           POINT TO MEMBER NAME ITSELF
         SR    #2,#6               GET LENGTH OF MEMBER NAME
         BNP   BADARG1             IF ZERO, SYNTAX ERROR
         CH    #2,=H'8'            IF TOO LONG, SYNTAX ERROR
         BH    BADARG1
         STH   #2,MEMLEN99         ELSE SET MEMBER NAME LENGTH
         STCM  #2,B'0111',MEMSLEN  STORE MEMBER LENGTH FOR FAKE STRING
         BCTR  #2,0                ELSE REDUCE FOR EXECUTE
         EX    #2,MVCMEM           MOVE MEMBER NAME TO S99 AREA
         MVC   MEMSTXT(8),MEMBER99 MOVE MEMBER NAME TO FAKE STRING
         OI    FLAGS,MEMFLAG       SHOW A MEMBER IS BEING REQUESTED
         CLI   DDCHAR,C'O'         IF THIS IS AN OUTPUT REQUEST
         BNE   NOMEMAL             THEN...
         TM    FLAGS,APPFLAG        IF THIS IS AN APPEND REQUEST
         BO    BADAPP               THEN WE CAN'T HONOR IT
         MVI   DALMEMBR+1,X'03'     SET UP TO ALLOCATE THE MEMBER
NOMEMAL  DS    0H                  ELSE ALLOCATE WITHOUT MEMBER FIRST
         SPACE 1
SETDSN   DS    0H
         LA    #0,DSNAME
         SR    #4,#0               #4 = LENGTH OF ACTUAL DSNAME
         BNP   BADARG1
         CH    #4,=H'44'
         BH    BADARG1
         STCM  #4,B'0111',DSNSLEN  STORE DSNAME LENGTH FOR FAKE STRING
         BCTR  #4,0                REDUCE FOR EXECUTE
         EX    #4,MVCDSN           MOVE TO SVC99 DSNAME AREA
         LA    #4,1(,#4)           MAKE IT THE ACTUAL LENGTH
         STH   #4,DSLEN99          SET DSNAME LENGTH
         EJECT
*
* PERFORM DYNAMIC ALLOCATION.
*
TRYIT    DS    0H
         SPACE 1
         LA    #1,S99RBP           POINT TO SVC 99 PARAMETER LIST
         DYNALLOC ,                DYNAMICALLY ALLOCATE THE DATASET
         SPACE 1
         LTR   #15,#15             IF ALLOCATION FAILED,
         BZ    CHKDSORG            THEN
*
* ALLOCATION FAILURE...
*  IF OUTPUT REQUEST AND NOT-CATALOGED, TRY AS NEW DATASET.
*   IF FILE IN USE, FREE FILE AND RETRY REQUEST.
*   OTHERWISE REPORT ERROR.
*
         ST    #15,DRETCODE         STORE SVC 99 RETURN CODE
         MVC   DERROR,S99ERROR      STORE SVC 99 ERROR CODE
         MVC   DINFO,S99INFO        STORE SVC 99 INFO CODE
         CLC   DRETCODE(6),ERNOTCAT  IF ERROR = DATA SET NOT CATALOGED
         BE    DFNOTCAT              THEN HANDLE IT
         CLC   DRETCODE(8),ERBADDSN  IF ERROR = SYNTAX ERROR IN DSNAME
         BE    DFBADDSN              THEN HANDLE IT
         CLC   DRETCODE(8),ERBADMEM  IF ERROR = SYNTAX ERROR IN MEMBER
         BE    DFBADMEM              THEN HANDLE IT
         CLC   DRETCODE(6),ERFINUSE  IF ERROR = FILE NAME IN USE
         BE    DFFINUSE              THEN HANDLE IT
         B     TRUERROR             ELSE TRUE ERROR - CALL DAIRFAIL
         SPACE 1
DFNOTCAT DS    0H                  DATA SET NOT CATALOGED
         TM    FLAGS,PROBEFLG      IF PROBE ONLY
         BO    RETNIL              THEN RETURN NIL FROM THIS FUNCTION
         CLI   DDCHAR,C'O'         IF TYPE IS NOT OUTPUT,
         BNE   TRUERROR            THEN IT'S A TRUE ERROR
         MVI   STATUS99,X'04'      ELSE RESET STATUS AND DISPOSITION
         MVI   DISP99,X'02'         TO DISP=(NEW,CATLG)
         MVI   DALTRK+1,X'07'        AND
         MVI   DALPRIME+1,X'0A'       DEFINE
         MVI   DALSECND+1,X'0B'        SPACE
         MVI   DALDIR+1,X'00'           SPECIFICATIONS
         TM    FLAGS,MEMFLAG       IF A MEMBER NAME WAS SPECIFIED
         BZ    TRYIT               THEN...
         MVI   DALDIR+1,X'0C'       SET NUMBER OF DIRECTORY BLOCKS
         B     TRYIT               AND TRY DYNAMIC ALLOCATION AGAIN
         SPACE 1
DFFINUSE DS    0H                  FILE NAME ALREADY IS USE
*
* RESET THE FILE NAME WE WILL BE USING FOR THIS OPEN.
*
         LH    #1,ZLCFILNO         GET CURRENT FILE NUMBER
         LA    #1,1(,#1)           ADD 1
         STH   #1,ZLCFILNO         UPDATE FILE NUMBER
         CVD   #1,ZLCDBL           CONVERT TO DECIMAL
         UNPK  FILENAME(4),ZLCDBL
         OI    FILENAME+3,X'F0'    MAKE IT PRINTABLE
         B     TRYIT               AND TRY THE NEXT FILE NUMBER
         EJECT
TRUERROR DS    0H
         LA    #1,DFPARMS           POINT TO DAIRFAIL PARAMETER LIST
         LINK  EP=IKJEFF18          CALL DAIRFAIL
         LTR   #0,#15               CHECK RETURN CODE
         BNZ   ERROR14              IF OK, SHOW MESSAGE
DFOK     DS    0H
         L     #15,X'224'          ASCB ADDRESS
         ICM   #15,15,X'3C'(#15)   TSB ADDRESS
         BZ    NOTTSO              IF NO TSB, NOT UNDER TSO
* ON TSO, SEND MESSAGE TO TERMINAL REGARDLESS OF OUTPUT DEST.
         LA    #1,DFBUF1+4
         LH    #2,DFBUF1+0
         SH    #2,=H'4'
         LR    #0,#2
         #TPUT *,(1),(0)            USE TPUT TO DISPLAY 1ST MESSAGE
         OC    DFBUF2(2),DFBUF2     IF THERE IS A SECOND MESSAGE
         BZ    ERROR12              THEN
         LA    #1,DFBUF2+4
         LH    #2,DFBUF2+0
         SH    #2,=H'4'
         LR    #0,#2
         #TPUT *,(1),(0)            USE TPUT TO DISPLAY 2ND MESSAGE
         B     ERROR12
         SPACE 1
NOTTSO   DS    0H                  ELSE...
*
* IN BATCH, ISSUE WRITE-TO-PROGRAMMER MESSAGE.
*
         WTO   MF=(E,DFBUF1),ROUTCDE=11 SHOW MESSAGE 1
         OC    DFBUF2(2),DFBUF2     IF THERE IS A SECOND MESSAGE
         BZ    ERROR12              THEN
         WTO   MF=(E,DFBUF2),ROUTCDE=11 SHOW IT
         B     ERROR12              THEN
         EJECT
CHKDSORG DS    0H                  ALLOC OK, NOW CHECK DSORG
         TM    FLAGS,FREEFLAG      IF THIS WAS A FREE REQUEST
         BZ    SETALLCD            THEN
         NI    FLAGS,255-ALFLAG     INDICATE DATASET UNALLOCATED
         B     AFTALLCD            ELSE
SETALLCD OI    FLAGS,ALFLAG         INDICATE DATASET ALLOCATED
AFTALLCD DS    0H
*
* IF DSORG = PS THEN IF MEMBER WAS SPECIFIED, ERROR
* IF DSORG - PO THEN IF MEMBER WAS OMITTED, ERROR
* ELSE, FOR INPUT FILE, CHECK THAT MEMBER REALLY EXISTS
*
         TM    FLAGS,FREEFLAG      IF THIS WAS AN UNALLOCATION
         BO    FREEDONE            THEN PROCEED.
         TM    DSORG99,X'40'       IF DSORG = PS (SEQUENTIAL)
         BO    DSORGPS             THEN HANDLE IT
         TM    DSORG99,X'02'       IF DSORG = PO (PARTITIONED)
         BO    DSORGPO             THEN HANDLE IT
         CLI   DDCHAR,C'I'         IF THIS IS AN INPUT REQUEST
         BE    ERROR20             THEN ERROR - INVALID DSORG
         OC    DSORG99,DSORG99     IF THIS IS AN OUTPUT REQUEST
         BNZ   ERROR20             THEN ERROR IF DSORG IS NOT NULL
DSORGPS  DS    0H                  ELSE ASSUME PS (AT LEAST NOT PO)
         TM    FLAGS,MEMFLAG       IF A MEMBER NAME WAS SPECIFIED
         BO    ERROR16             THEN ERROR - MEMBER BUT NOT PDS
         B     OK                  ELSE FINISHED CHECKING DSORG
         SPACE 1
DSORGPO  DS    0H
         CLI   DDCHAR,C'O'         IF THIS IS AN OUTPUT REQUEST
         BE    POOUT               THEN HANDLE IT
         CLI   DALMEMBR+1,X'00'    IF WE ALREADY ALLOCATED THE MEMBER
         BNE   OK                  THEN WE'VE CHECKED ALREADY - OK
         TM    FLAGS,MEMFLAG       IF A MEMBER NAME WAS NOT SPECIFIED
         BZ    ERROR17             THEN ERROR - MEMBER REQUIRED
         MVC   PODCB+X'28'(8),DDNAME ELSE MOVE DDNAME TO OUR DCB
         OPEN  PODCB               OPEN IT
         TM    PODCB+X'30',X'10'   IF OPEN FAILED
         BZ    ERROR19             THEN REPORT ERROR
         MVC   BLDLMEM,MEMBER99    SET UP BLDL LIST TO CHECK MEMBER
         BLDL  PODCB,BLDLLIST      SEE IF MEMBER NAME EXISTS
         LR    #2,#15              SAVE RETURN CODE
         CLOSE PODCB               CLOSE DATA SET
         LTR   #2,#2               IF BLDL FAILED
         BNZ   ERROR18             THEN ASSUME MEMBER NOT FOUND
         LA    #1,TUPLUNAL         SET TEXT UNIT POINTERS FOR
         ST    #1,S99TXTPP          UNALLOCATION
         MVI   S99VERB,S99VRBUN    INDICATE UNALLOCATION
         MVC   UNDDNAME,DDNAME     MOVE DDNAME TO TEXT UNIT FIELDS
         OI    FLAGS,FREEFLAG      INDICATE WE'RE DOING AN UNALLOCATION
         B     TRYIT               GO TO DO THE FREE
         SPACE 1
POOUT    DS    0H                  PDS ALLOCATED FOR OUTPUT
         SPACE 1
         TM    FLAGS,MEMFLAG       IF A MEMBER NAME WAS NOT SPECIFIED
         BZ    ERROR17             THEN ERROR - MEMBER REQUIRED
         B     OK                  ELSE PROCEED
         SPACE 1
FREEDONE DS    0H                  FINISHED FREE, NOW REALLOC W/MEMBER
         SPACE 1
         TM    FLAGS,PROBEFLG      IF THIS WAS A PROBE
         BO    OPENED              THEN PROCEED.
         NI    FLAGS,255-FREEFLAG  INDICATE ALLOCATION THIS TIME
         LA    #1,TUPLALLC         SET TEXT UNIT POINTERS FOR
         ST    #1,S99TXTPP          ALLOCATION
         MVI   S99VERB,S99VRBAL    INDICATE ALLOCATION
         MVI   DALMEMBR+1,X'03'    SET UP TO ALLOCATE THE MEMBER
         B     TRYIT               AND RE-ALLOCATE THE DATA SET
         EJECT
OK       DS    0H
         TM    FLAGS,PROBEFLG      IF THIS WAS A PROBE
         BO    OPENED              THEN PROCEED.
*
* MAKE AN ATOM OUT OF THE FILE NAME
*
         LA    #0,4                SET LENGTH OF 4-CHARACTER FILENAME
         LA    #1,FILENAME         POINT TO ZIL FILE NAME FOR ATOM
         LR    #2,#8               INTERN IT
         LR    #3,#10              KEEP IT A SYMBOL
         LA    #4,20(,#11)         SET CURRENT STACK POINTER FOR CONS
         L     #15,ZLCABLD         CALL ZILABLD TO MAKE AN ATOM FROM IT
         #BASR #14,#15             (RETURNS ATOM IN #15)
         ST    #15,0(,#11)         STORE INTO STACK FOR #_FIL MACRO
*
* ALLOCATE THE REQUESTED DATA SET TO THE FILE
*
         CLI   DDCHAR,C'I'
         BNE   OPENOUT
         #IFIL 1                   CALL ZILFGET TO OPEN INPUT FILE
         B     OPENED
OPENOUT  DS    0H
         #OFIL 1                   CALL ZILFGET TO OPEN OUTPUT FILE
         SPACE 1
OPENED   DS    0H                  FILE IS NOW OPEN
*
* RETURN WITH FILE ATOM IN REG 15
*
* IF PROBE, THIS WILL STILL CONTAIN THE INPUT ARG 1.
*
         TM    FLAGS,PROBEFLG+ALFLAG IF PROBE AND DATASET ALLOCATED
         BNO   RETTNA              THEN
         #BAS  #14,PFREE            FREE THE PROBED DATASET
RETTNA   DS    0H
         L     #15,0(,#11)         PICK UP FILE ATOM WE STORED
         B     RETURN
         SPACE 1
RETNIL   DS    0H                  HERE IF PROBE AND FILE NOT FOUND
         SPACE 1
         TM    FLAGS,ALFLAG        IF DATASET STILL ALLOCATED
         BZ    RETNILNA            THEN
         #BAS  #14,PFREE            FREE THE PROBED DATASET
RETNILNA DS    0H
         LR    #15,#10             RETURN NIL
******** B     RETURN
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         EJECT
BADARG1  DS    0H                  ELSE...
         SPACE 1
         TM    FLAGS,PROBEFLG      IF PROBE
         BO    RETNIL              THEN TREAT AS FILE NOT FOUND
         SPACE 1
         #ERR  'ZIL0010 OPEN: Invalid data set name - ',0(#11),        X
               PREFIX=NO
         SPACE 1
BADAPP   DS    0H                  ELSE...
         SPACE 1
         #ERR  'ZIL0015 OPEN: Cannot process partitioned data set ',   x
               0(#11),' in APPEND mode.',PREFIX=NO
         SPACE 1
BADDSN   DS    0H                  DSNAME SYNTAX ERROR
         SPACE 1
         TM    FLAGS,PROBEFLG      IF PROBE
         BO    RETNIL              THEN TREAT AS FILE NOT FOUND
         SPACE 1
         #ERR  'ZIL0013 OPEN: Syntax error in data set name ',DSNSTR,  X
               PREFIX=NO
         SPACE 1
BADMEM   DS    0H                  MEMBER NAME SYNTAX ERROR
         SPACE 1
         TM    FLAGS,PROBEFLG      IF PROBE
         BO    RETNIL              THEN TREAT AS FILE NOT FOUND
         SPACE 1
         #ERR  'ZIL0013 OPEN: Syntax error in member name ',           X
               DSNSTR,'(',MEMSTR,')',PREFIX=NO
         SPACE 1
DFBADDSN EQU   BADDSN              SYNTAX ERROR IN DATA SET NAME
         SPACE 1
DFBADMEM EQU   BADMEM              SYNTAX ERROR IN MEMBER NAME
         SPACE 1
ERROR14  DS    0H                  REPORT HORRIBLE DISASTER
         SPACE 1
         #ERR  3,'ZIL0014 IKJEFF18 (DAIRFAIL) error - unable to displayX
                allocation failure message.',SIGNAL=NO,PREFIX=NO
******** B     ERROR12
         SPACE 1
ERROR12  DS    0H                  ALLOCATION FAILED
         SPACE 1
         #ERR  'ZIL0012 OPEN: Allocation failed for ',DSNSTR,          X
               PREFIX=NO
         SPACE 1
ERROR16  DS    0H                  ERROR INSIDE OS STUFF
         SPACE 1
         #BAS  #14,PFREE           FREE DATASET IF ALLOCATED
         SPACE 1
         TM    FLAGS,PROBEFLG      IF PROBE
         BO    RETNIL              THEN TREAT AS FILE NOT FOUND
         SPACE 1
         #ERR  'ZIL0016 OPEN: Member ',MEMSTR,                         X
               ' specified but data set ',                             X
               DSNSTR,' not partitioned.',PREFIX=NO
         SPACE 1
ERROR17  DS    0H                  ERROR INSIDE OS STUFF
         SPACE 1
         #BAS  #14,PFREE           FREE DATASET IF ALLOCATED
         SPACE 1
         #ERR  'ZIL0017 OPEN: A member name must be specified for data X
               set ',DSNSTR,PREFIX=NO
         SPACE 1
ERROR18  DS    0H                  ERROR INSIDE OS STUFF
         SPACE 1
         TM    FLAGS,PROBEFLG      IF PROBE
         BO    RETNIL              THEN TREAT AS FILE NOT FOUND
         SPACE 1
         #BAS  #14,PFREE           FREE DATASET IF ALLOCATED
         SPACE 1
         #ERR  'ZIL0018 OPEN: Member ',MEMSTR,                         X
               ' not found in data set ',DSNSTR,PREFIX=NO
         SPACE 1
ERROR19  DS    0H                  ERROR INSIDE OS STUFF
         SPACE 1
         #BAS  #14,PFREE           FREE DATASET IF ALLOCATED
         SPACE 1
         #ERR  'ZIL0019 OPEN: Unable to open ',DSNSTR,' to verify membeX
               r ',MEMSTR,PREFIX=NO
         SPACE 1
ERROR20  DS    0H                  ERROR INSIDE OS STUFF
         SPACE 1
         #BAS  #14,PFREE           FREE DATASET IF ALLOCATED
         SPACE 1
         #ERR  'ZIL0020 OPEN: Data set ',DSNSTR,' not sequential or parX
               titioned, or is empty.',PREFIX=NO
         EJECT
PFREE    DS    0H                   FREE PROBED DATASET
         SPACE 1
         LA    #1,TUPLUNAL          SET TEXT UNIT POINTERS FOR
         ST    #1,S99TXTPP           UNALLOCATION
         MVI   S99VERB,S99VRBUN     INDICATE UNALLOCATION
         MVC   UNDDNAME,DDNAME      MOVE DDNAME TO TEXT UNIT FIELDS
         LA    #1,S99RBP           POINT TO SVC 99 PARAMETER LIST
         DYNALLOC ,                DYNAMICALLY UNALLOCATE THE DATASET
*                                  (IGNORE FREE ERRORS FOR NOW)
         BR    #14
         EJECT
*
* EXECUTED INSTRUCTIONS
*
MVCNAME  MVC   0(*-*,#7),0(#5)     MOVE ATOM TO DSNAME AREA
TRNAME   TR    0(*-*,#7),TRTBL     FOLD DSNAME TO UPPER CASE
         USING UPT,#15
MVCPREF  MVC   0(*-*,#7),UPTPREFX  MOVE TSO PREFIX TO DSNAME AREA
         DROP  #15
MVCDSN   MVC   DSNAME99(*-*),DSNAME MOVE DSNAME TO SVC 99 AREA
MVCMEM   MVC   MEMBER99(*-*),0(#6)  MOVE MEMBER TO SVC 99 AREA
         EJECT
*
* CONSTANTS FOR COMPARING DYNAMIC ALLOCATION ERRORS.
*
ERNOTCAT DC    FL4'04',X'1708'         DATA SET NOT CATALOGED
ERBADDSN DC    FL4'12',X'035C',X'0002' SYNTAX ERROR IN DATA SET NAME
ERBADMEM DC    FL4'12',X'035C',X'0003' SYNTAX ERROR IN MEMBER NAME
ERFINUSE DC    FL4'04',X'0410'         FILE NAME IN USE
         EJECT
*
* CHARACTER WORK AREAS
*
         DS    0H,XL1              Align to non-halfword boundary
DSNSTR   DC    YL1(##STRING)       String header
DSNSLEN  DC    AL3(0)              String length
DSNAME   DC    CL64' '             String text
         DS    0H,XL1              Align to non-halfword boundary
MEMSTR   DC    YL1(##STRING)       String header
MEMSLEN  DC    AL3(0)              String length
MEMSTXT  DC    CL8' '              String text
         EJECT
***********************************************************************
* DYNAMIC ALLOCATION CONTROL BLOCKS                                   *
***********************************************************************
         SPACE 1
***********************************************************************
* *** COPIED FROM 'SYS1.MACLIB(IEFZB4D0)' *************************** *
***********************************************************************
         SPACE 1
***********************************************************************
*                SVC 99 INPUT REQUEST BLOCK
***********************************************************************
         SPACE 1
S99RBP   DS    0D
S99RBPTR DC    A(S99RB+X'80000000')    REQUEST BLOCK POINTER
S99RB    DS    0D                      REQUEST BLOCK
S99RBLN  DC    YL1(20)                 LENGTH OF REQUEST BLOCK
S99VERB  DC    YL1(S99VRBAL)           VERB CODE = ALLOCATION
*              YL1(S99VRBUN)           VERB CODE = ALLOCATION
S99VRBAL EQU   X'01'                    ALLOCATION
S99VRBUN EQU   X'02'                    UNALLOCATION
S99FLAG1 DS    0CL2                    FLAGS
S99FLG11 DC    XL1'00'                 FIRST FLAGS BYTE
S99FLG12 DC    XL1'00'                 SECOND BYTE OF FLAGS
S99RSC   DS    0CL4                    REASON CODE FIELDS
S99ERROR DC    XL2'0000'               ERROR REASON CODE
S99INFO  DC    XL2'0000'               INFORMATION REASON CODE
S99TXTPP DC    A(TUPLALLC)             ->LIST OF ALLOC TEXT UNIT PTRS
*              A(TUPLUNAL)             ->LIST OF UNALC TEXT UNIT PTRS
*              A(TUPLALLP)             ->LIST OF PROBE TEXT UNIT PTRS
S99RSV01 DC    F'0'                    RESERVED
S99FLAG2 DS    0CL4                    FLAGS FOR AUTHORIZED FUNCTIONS
S99FLG21 DC    XL1'00'                 FIRST BYTE OF FLAGS
S99FLG22 DC    XL1'00'                 SECOND BYTE OF FLAGS
S99FLG23 DC    XL1'00'                 THIRD BYTE OF FLAGS
S99FLG24 DC    XL1'00'                 FOURTH BYTE OF FLAGS
S99RBEND EQU    *                      END MARKER
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT POINTER LIST FOR ALLOCATION FUNCTIONS
***********************************************************************
         SPACE 1
TUPLALLC DS    0F                      TEXT UNIT POINTER LIST FOR OPEN
         DC    A(DALDDNAM)             DDNAME
         DC    A(DALDSNAM)             DSNAME
         DC    A(DALMEMBR)             MEMBER NAME
         DC    A(DALSTATS)             STATUS
         DC    A(DALNDISP)             NORMAL DISPOSITION
         DC    A(DALTRK)               ALLOCATION IN TRACKS
         DC    A(DALPRIME)             PRIMARY SPACE QUANTITY
         DC    A(DALSECND)             SECONDARY SPACE QUANTITY
         DC    A(DALDIR)               NUMBER OF DIRECTORY BLOCKS
         DC    A(DALRTORG+X'80000000') RETURN DSORG
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT POINTER LIST FOR UNALLOCATION FUNCTIONS
***********************************************************************
         SPACE 1
TUPLUNAL DS    0F                      TEXT UNIT POINTER LIST
         DC    A(DUNDDNAM+X'80000000') DDNAME
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR ALLOCATION OF A DDNAME FOR DSNAME
***********************************************************************
         SPACE 1
DALDDNAM DS    0H                      TEXT UNIT
         DC    XL2'0001'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0008'               LENGTH OF DDNAME
DDNAME   DC    CL8'ZIL     '
         ORG   DDNAME
         DS    CL3
DDCHAR   DC    C' '                I OR O
FILENAME DS    CL4
         ORG
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR ALLOCATION BY DSNAME
***********************************************************************
         SPACE 1
DALDSNAM DS    0H                      TEXT UNIT
         DC    XL2'0002'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
DSLEN99  DC    XL2'0000'               LENGTH OF DSNAME
DSNAME99 DC    CL44' '                 DSNAME
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR ALLOCATION OF MEMBER NAME
***********************************************************************
         SPACE 1
DALMEMBR DS    0H                      TEXT UNIT
         DC    XL2'0003'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
MEMLEN99 DC    XL2'0000'               LENGTH OF MEMBER NAME
MEMBER99 DC    CL8' '                  MEMBER NAME
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR DATA SET STATUS
***********************************************************************
         SPACE 1
DALSTATS DS    0H                      TEXT UNIT
         DC    XL2'0004'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0001'               LENGTH OF STATUS
STATUS99 DC    X'08'                   STATUS = SHR
*              X'04'                   STATUS = NEW
*              X'02'                   STATUS = MOD
*              X'01'                   STATUS = OLD
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR NORMAL DISPOSITION
***********************************************************************
         SPACE 1
DALNDISP DS    0H                      TEXT UNIT
         DC    XL2'0005'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0001'               LENGTH OF NORMAL DISPOSITION
DISP99   DC    X'08'                   DISP = KEEP
*              X'04'                   STATUS = DELETE
*              X'02'                   STATUS = CATALOG
*              X'01'                   STATUS = UNCATALOG
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR ALLOCATION IN TRACKS
***********************************************************************
         SPACE 1
DALTRK   DS    0H                      TEXT UNIT
         DC    XL2'0007'               KEY
         DC    XL2'0000'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0000'               LENGTH
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR PRIMARY SPACE ALLOCATION
***********************************************************************
         SPACE 1
DALPRIME DS    0H                      TEXT UNIT
         DC    XL2'000A'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0003'               LENGTH
         DC    AL3(10)                 DEFAULT PRIMARY # OF TRACKS
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR SECONDARY SPACE ALLOCATION
***********************************************************************
         SPACE 1
DALSECND DS    0H                      TEXT UNIT
         DC    XL2'000B'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0003'               LENGTH
         DC    AL3(10)                 DEFAULT SECONDARY # OF TRACKS
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR NUMBER OF DIRECTORY BLOCKS
***********************************************************************
         SPACE 1
DALDIR   DS    0H                      TEXT UNIT
         DC    XL2'000C'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0003'               LENGTH
         DC    AL3(35)                 DEFAULT # OF DIRECTORY BLOCKS
*                                  (NOTE: NOT THE SAME AS IBM DEFAULT)
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR RETURN DSORG
***********************************************************************
         SPACE 1
DALRTORG DS    0H                      TEXT UNIT
         DC    XL2'0057'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0002'               LENGTH OF DSORG
DSORG99  DS    XL2                     DSORG
         SPACE 1
***********************************************************************
* SVC 99 TEXT UNIT FOR UNALLOCATION OF A DDNAME
***********************************************************************
         SPACE 1
DUNDDNAM DS    0H                      TEXT UNIT
         DC    XL2'0001'               KEY
         DC    XL2'0001'               # OF LENGTH+PARAMETER ENTRIES
         DC    XL2'0008'               LENGTH OF DDNAME
UNDDNAME DS    CL8
         EJECT
***********************************************************************
* DAIRFAIL (IKJEFF18) PARAMETER LIST                                  *
***********************************************************************
         SPACE 1
DFPARMS  DS    0A
         SPACE 1
DFS99RBP DC    A(S99RB)            ADDRESS OF SVC 99 REQUEST BLOCK
DFRCP    DC    A(DRETCODE)         ADDRESS OF SVC 99 RETURN CODE
DFJEFF02 DC    A(ZEROES)           ADDRESS OF EP OF IKJEFF02 OR ZEROES
DFIDP    DC    A(DFID)             ADDRESS OF 2-BYTE ID AREA
DFCPPLP  DC    A(0)                ADDRESS OF CPPL NOT NEEDED
DFBUFP   DC    A(DFBUFS)           ADDRESS OF BUFFER FOR MSG EXTRACTION
         SPACE 1
DFBUFS   DS    0A                  AREA FOR EXTRACTED MESSAGE
DFBUF1   DS    2H,CL251            FIRST LEVEL MESSAGE AREA
DFBUF2   DS    2H,CL251            SECOND LEVEL MESSAGE AREA
         EJECT
*
* OTHER FIELDS
*
         DS    0A
DRETCODE DS    XL4                 RETURN CODE FROM SVC99
DERROR   DS    XL2                 COPY OF S99ERROR
DINFO    DS    XL2                 COPY OF S99INFO
ZEROES   DC    F'0'
DFID     DC    B'01000000',X'32'   EXTRACT MSG ONLY, CALLER = SVC99
         SPACE 1
BLDLLIST DC    Y(1,12)             BLDL LIST TO CHECK ONE MEMBER
BLDLMEM  DS    CL8
         DS    CL4
         SPACE 1
FLAGS    DS    X
MEMFLAG  EQU   B'10000000'         1 = A MEMBER WAS REQUSTED
FREEFLAG EQU   B'01000000'         1 = UNALLOCATION TO BE DONE
PROBEFLG EQU   B'00100000'         1 = JUST PROBING
ALFLAG   EQU   B'00010000'         1 = DATASET IS ALLOCATED
APPFLAG  EQU   B'00001000'         1 = APPEND SPECIFIED
         EJECT
TRTBL    DC    256YL1(*-TRTBL)     TABLE TO FOLD TO UPPER CASE
         ORG   TRTBL+X'81'
         DC    C'ABCDEFGHI'
         ORG   TRTBL+X'91'
         DC    C'JKLMNOPQR'
         ORG   TRTBL+X'A2'
         DC    C'STUVWXYZ'
         ORG
         EJECT
PODCB    DCB   DDNAME=X,DSORG=PO,MACRF=R
         EJECT
         LTORG
         EJECT
         #ZMODES ,                 Define OPEN/CLOSE file modes
         EJECT
         IKJPSCB
         EJECT
         IKJUPT
         END
