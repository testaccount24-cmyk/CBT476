         TITLE 'INDEX - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* (INDEX ARG1 ARG2 &OPTIONAL ARG3)...                                 *
*                                                                     *
*  ARG1 IS A STRING          - THE STRING TO SEARCH WITHIN            *
*  ARG2 IS A STRING          - THE VALUE TO SEARCH FOR                *
*  ARG3 IS A FIXNUM OR NIL   - THE STARTING OFFSET FOR THE SEARCH     *
*                                                                     *
***********************************************************************
INDEX    #ZBEG MINARGS=2,MAXARGS=3,NAME='STRING-INDEX'
         #ZPDS 24                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         LM    #5,#7,0(#11)        LOAD ARGS
         CLI   ##TYPE(#5),##STRING IF ARGUMENT IS A STRING
         BE    ARG1OK              THEN OK
         CLI   ##TYPE(#5),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR1              THEN
         L     #5,##PNAME(,#5)      TAKE THE PRINT NAME, ELSE ERROR
ARG1OK   DS    0H                  CHECK ARG 2
         CLI   ##TYPE(#6),##STRING IF ARGUMENT IS A STRING
         BE    ARG2OK              THEN OK
         CLI   ##TYPE(#6),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR2              THEN
         L     #6,##PNAME(,#6)      TAKE THE PRINT NAME, ELSE ERROR
ARG2OK   DS    0H
         LA    #2,1                DEFAULT STARTING OFFSET IS 1
         CR    #7,#10              IF ARG 3 IS NIL
         BE    ARGSOK              THEN IT'S OK (OMITTED)
         CR    #7,#13              IF ARG 3 IS NOT SUPPLIED
         BE    ARGSOK              THEN IT'S OK (OMITTED)
         CLI   ##TYPE(#7),##FIXNUM IF ARG 3 IS NOT A FIXNUM
         BNE   ERROR3              THEN ERROR
         ICM   #2,15,##CDR(#7)     IF ARG3 PROVIDED, USE ITS VALUE
         BNP   ERROR3
ARGSOK   DS    0H                  #2 HAS 1-BASED START
         XR    #4,#4
         XR    #3,#3
         ICM   #4,7,1(#6)          #4 = LENGTH OF STRING ARG 2
         BZ    RETZERO             IF ARG2 IS NULL STRING, RETURN 0
         ICM   #3,7,1(#5)          #3 = LENGTH OF STRING ARG 1
         BZ    RETNIL              IF ARG1 IS NULL STRING, RETURN NIL
         CH    #4,=H'256'          IF ARG 2 LENGTH TOO LONG FOR CLC
         BH    DOCLCL              THEN USE CLCL TO SEARCH
*                                  ELSE ... CLC LOOP
         LA    #1,##VECDAT-2(#2,#5) POINT TO STARTING LOC IN ARG1 - 1
         LA    #14,1               SET BXLE INCREMENT REGISTER
         LA    #15,##VECDAT(#3,#5) POINT TO END OF STRING ARG 1
         SR    #15,#4              MINUS LENGTH OF ARG 2
         BCTR  #4,0                ADJUST ARG2 LENGTH FOR EXECUTE
CLCLOOP  DS    0H
         BXH   #1,#14,RETNIL       INCREMENT TO 1ST LOC...
         EX    #4,CLC              IF SUBSTRING MATCHES...
         BE    GOTIT               THEN WE HAVE THE OFFSET
         LA    #2,1(,#2)           ELSE INCREMENT INDEX
         B     CLCLOOP             AND LOOP UNTIL PAST END OF STRING
         SPACE 1
CLC      CLC   0(*-*,#1),##VECDAT(#6)  COMPARE ARG1 SUBTEXT WITH ARG2
         SPACE 1
DOCLCL   DS    0H
         LA    #1,##VECDAT-1(#2,#5) POINT TO STARTING LOC IN ARG1
         LA    #0,##VECDAT(#3,#5)  POINT TO END OF STRING ARG 1
         SR    #0,#4               MINUS LENGTH OF ARG 2
         LR    #7,#4               SAVE LENGTH OF ARG
CLCLLOOP DS    0H
         CR    #1,#0               IF PAST END OF SEARCHABLE STRING
         BH    RETNIL              THEN FAILED - RETURN NIL
         LR    #4,#1               SUBTEXT OF ARG1
         LA    #14,##VECDAT(,#6)   TEXT OF ARG2
         LR    #15,#7              LENGTH OF ARG2
         LR    #5,#7               TO COMPARE
         CLCL  #4,#14              IF IT MATCHES
         BE    GOTIT               THEN WE GOT IT
         LA    #2,1(,#2)           ELSE INCREMENT INDEX
         LA    #1,1(,#1)           AND INCREMENT SUBTEXT POINTER
         B     CLCLLOOP            AND LOOP UNTIL PAST END OF STRING
GOTIT    DS    0H                  #2 CONTAINS INDEX OF SUBSTRING
         LA    #0,24(,#11)         PASS CURRENT STACK POINTER TO CONS
         #MKAT FIXED               MAKE A FIXNUM OUT OF IT
         B     RETURN
RETZERO  DS    0H                  (INDEX "FOOBAR" "") ===> 0
         LA    #15,#SFT0           RETURN FIXNUM 0
         B     RETURN
RETNIL   DS    0H                  SUBSCRIPT OUT OF BOUNDS
         LR    #15,#10             RETURN NIL
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 3
ERROR1   #ERR  'Argument 1 to STRING-INDEX not a string - ',(#5)
ERROR2   #ERR  'Argument 2 to STRING-INDEX not a string - ',(#6)
ERROR3   #ERR  'Argument 3 to STRING-INDEX not a positive fixnum - ',  X
               (#7)
         SPACE 1
         LTORG
         END
