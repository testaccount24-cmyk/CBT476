         TITLE 'ZDPRINT - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ZDPRINT is the ZIL "default printer", called by PRINC, PRIN1,       *
*    CTERPRI, TERPRI and TYO.                                         *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* Updated 11/02/88 to handle ZGETFPO, ZPUTFPO and CLRSCRN requests.   *
*                                                                     *
*---------------------------------------------------------------------*
*                                                                     *
* ZDPRINT takes 3 arguments:                                          *
*                                                                     *
* arg 1 = the object to be printed, if applicable.                    *
* arg 2 = the file to print it on.                                    *
* arg 3 = a fixnum built from the following boolean values:           *
*                                                                     *
*    ....00  =  print a character object (TYO)                        *
*    ....01  =  print a LISP object (PRINC/PRIN1)                     *
*    ....10  =  control, not print (CTERPRI/TERPRI)                   *
*    ...x..  =  0 = don't slashify, 1 = slashify                      *
*    ..x...  =  0 = unconditional, 1 = conditional                    *
*    .1....  =  CHARPOS request (ZGETFPO/ZPUTFPO)                     *
*    1.....  =  CLRSCRN request                                       *
*                                                                     *
* EXAMPLE CALLING SEQUENCES: (NOT the ones really used)               *
*                                                                     *
*  (DEFUN TYO     (X &OPTIONAL F) (ZDPRINT X   F #b000000))   0       *
*  (DEFUN PRINC   (X &OPTIONAL F) (ZDPRINT X   F #b000001))   1       *
*  (DEFUN PRIN1   (X &OPTIONAL F) (ZDPRINT X   F #b000101))   5       *
*  (DEFUN TERPRI    (&OPTIONAL F) (ZDPRINT NIL F #b000010))   2       *
*  (DEFUN CTERPRI   (&OPTIONAL F) (ZDPRINT NIL F #b001010))  10       *
*  (DEFUN ZGETFPO   (&OPTIONAL F) (ZDPRINT NIL F #b010000))  16       *
*  (DEFUN ZPUTFPO (X &OPTIONAL F) (ZDPRINT X   F #b010000))  16       *
*  (DEFUN CLRSCRN ()              (ZDPRINT NIL T #b101010))  42       *
*                                                                     *
* Note that a CLRSCRN request acts like a CTERPRI for a file which is *
* not the terminal.                                                   *
*                                                                     *
***********************************************************************
         SPACE 1
MODEB3   EQU   ##CDR+3
BPRINC   EQU   B'00000001'         1 = PRINx, 0 = TYO
BTERPRI  EQU   B'00000010'         1 = TERPRI, 0 = PRINx/TYO
BSLASHFY EQU   B'00000100'         1 = SLASHIFY, 0 = DON'T
BCONDNEW EQU   B'00001000'         1 = CONDITIONAL FOR NEWLINE
BCHARPOS EQU   B'00010000'         1 = CHARPOS request
BCLRSCRN EQU   B'00100000'         1 = CLRSCRN request
         SPACE 1
ZDPRINT  #ZBEG MINARGS=3,MAXARGS=3,NAME='ZDPRINT',SUBRS=ZILSUBR
         #ZPDS 3*4+12+12 = 36
         #ZSAV ,
*
* If arg 2 is a symbol, then assume that it is an output file and
* process it accordingly.  Otherwise, assume that it is a "stream"
* (in whatever format that may be) and pass control to ZCPEXEC to
* handle the stream operation.
*
         L     #7,4(,#11)          Get arg 2
         CLI   ##TYPE(#7),##SYMBOL If file argument is not a symbol
         BNE   ZDSTREAM            then must be a stream, process so
*                                  Else must be an output file...
*                                  This sets #7 based on 4(,#11)
         #OFIL 2                   Arg 2 = output file spec
         SPACE 1
         L     #2,8(,#11)          Get arg 3
         TM    MODEB3(#2),BTERPRI  If TERPRI bit is 1,
         BO    ZDTERPRI            then go to process (C)TERPRI/CLRSCRN
         TM    MODEB3(#2),BCHARPOS If CHARPOS bit is 1,
         BO    ZDCHARPO            then go to process CHARPOS
*                                  Else either TYO or PRINx...
         TM    MODEB3(#2),BPRINC   If PRINx bit is 0,
         BZ    ZDTYO               then go to process TYO
*                                  Else this is a PRINC/PRIN1
         NI    ZLCPFLGS,255-ZLCPSLSH Initialize slashification bit
         TM    MODEB3(#2),BSLASHFY If slashification required
         BE    *+8                 then
         OI    ZLCPFLGS,ZLCPSLSH    set slashify bit on
         L     #15,ZLCPRIN         Get address of ZILPRIN
         L     #4,0(,#11)          Get argument 1
         #BASR #14,#15             Call printing routine
         L     #15,0(,#11)         Set return value to arg1
         B     RETURN              Return
         SPACE 1
ZDTERPRI DS    0H                  Process CTERPRI / TERPRI / CLRSCRN
         SPACE 1
         TM    MODEB3(#2),BCLRSCRN If CLRSCRN bit is 1,
         BZ    ZDTERPNC             and
         TM    ZLFFLAG1,ZLFTERM      this is a terminal file,
         BO    ZDCLRSCR               then go to do screen clear
ZDTERPNC DS    0H                  Else non-screen-clearing (C)TERPRI
         LR    #15,#10             Preset return value to NIL, but...
         TM    MODEB3(#2),BCONDNEW If TERPRI request (non-conditional)
         BZ    JUSTTERP             or
         TM    ZLFFLAG1,ZLFNEWLN     data already on current line
         BZ    RETURN                 then
JUSTTERP DS    0H                      do it...
         L     #15,ZLCTERP          Get address of ZILTERP
         #BASR #14,#15              Call ZILTERP
         LR    #15,#8               Return T
         B     RETURN
         SPACE 1
ZDTYO    DS    0H                  Process TYO
         SPACE 1
         L     #1,0(,#11)          Get arg 1
         CLI   ##TYPE(#1),##FIXNUM Must be character
         BNE   TYOERROR
         L     #2,##CDR(,#1)       Get fixnum value
         CL    #2,#SFW255          Must be between 0 and 255
         BH    TYOERROR
         STC   #2,FAKECHAR         Store character in fake string
         NI    ZLCPFLGS,255-ZLCPSLSH Set no-slashify option
         L     #15,ZLCPRIN         Get address of ZILPRIN
         LA    #4,FAKESTR          Get argument 1
         #BASR #14,#15             Call printing routine
         L     #15,0(,#11)         Set return value to arg1
******** B     RETURN              Return
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   Return to caller
         EJECT
ZDSTREAM DS    0H                  Here if arg1 not a "file"
         SPACE 1
         LM    #14,#0,0(#11)        Args 1-3
         STM   #14,#0,24(#11)       Store on stack
         ICM   #15,15,@ZCPEXEC     Get address of ZCPEXEC
         BZ    LOADZCP             If zero, not loaded yet
         LA    #1,24(,#11)         Point to args
         #BASR #14,#15             Call whatever you put in #15
         B     RETURN              and return with its result value(s)
         SPACE 1
LOADZCP  DS    0H                  Here when ZCPEXEC isn't loaded yet
         SPACE 1
         LA    #1,SZCPEXEC         Address of "ZCPEXEC" name
         ST    #1,24(,#11)         Store on stack
         L     #15,@ZILLOAD        Get address of ZILLOAD
         LA    #1,24(,#11)         Point to args
         #BASR #14,#15             Call ZILLOAD to load ZCPEXEC
         XR    #1,#1               Clear insert register
         CR    #15,#10             If module could not be loaded
         BE    ERRLOAD             then error - load failure
         ICM   #1,7,##CAR+1(#15)   Else get address of compiled code
         ST    #1,@ZCPEXEC         Store it into our address constant
         B     ZDSTREAM            Go to retry
         SPACE 1
ERRLOAD  DS    0H
         #ERR  PREFIX=NO,                                              X
               'ZIL1016 Unable to load ZCPEXEC, stream operations imposX
               sible.'
         SPACE 1
SZCPEXEC DC    YL1(##STRING),AL3(8),CL8'ZCPEXEC '    String "ZCPEXEC"
         SPACE 1
*
* The adcon for ZCPEXEC is not within the ZILSUBRS area because it
* is loaded on demand, not resolved at linkedit time.
*
@ZCPEXEC DC    A(0)                ADDRESS OF ZCPEXEC
         SPACE 1
ZILSUBRS DS    0A                  EXTERNAL SUBROUTINES
@ZILLOAD DC    V(ZILLOAD)          ADDRESS OF ZILLOAD
         DC    CL8'ZILLOAD'
ZILSUBRE DS    0A                  END OF SUBROUTINES
         EJECT
ZDCHARPO DS    0H                  Process CHARPOS request
         SPACE 1
         L     #15,0(,#11)         Get argument 1
         CR    #15,#10             If argument 1 is NIL
         BE    ZDGETFPO            then process ZGETFPO
         SPACE 1
ZDPUTFPO DS    0H                  Process ZPUTFPO request
         SPACE 1
***********************************************************************
*                                                                     *
* THIS FUNCTION UPDATES THE CURRENT CHARACTER POSITION OF THE         *
* SPECIFIED OUTPUT FILE FROM A FIXNUM ATOM, AND RETURNS THAT VALUE.   *
*                                                                     *
***********************************************************************
         SPACE 1
         CLI   ##TYPE(#15),##FIXNUM IF NOT A FIXNUM
         BNE   ZDPERROR            THEN ERROR
         ICM   #14,15,##CDR(#15)   GET FIXNUM VALUE
         BM    ZDPERROR            IF NEGATIVE, ERROR
         ST    #14,ZLFCHAR         SET CURRENT CHARACTER POINTER
         B     RETURN              Return
         SPACE 1
ZDGETFPO DS    0H                  Process ZGETFPO request
         SPACE 1
***********************************************************************
*                                                                     *
* THIS FUNCTION RETURNS THE CURRENT CHARACTER POSITION OF THE         *
* SPECIFIED OUTPUT FILE AS A FIXNUM ATOM.                             *
*                                                                     *
***********************************************************************
         SPACE
         L     #2,ZLFCHAR          GET CURRENT CHARACTER POINTER
         CL    #2,ZLCSFTHI         IF WITHIN SMALL FIXNUM RANGE
         BNH   SMALLFIX            THEN GO TO RETURN FIXNUM FROM TABLE
         LA    #0,24(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FIXED               MAKE A FIXED ATOM OUT OF IT
         B     RETURN
SMALLFIX DS    0H
         SLA   #2,3                CONVERT TO INDEX INTO FIXNUM TABLE
         LA    #15,#SFT(#2)        RETURN SMALL FIXNUM FROM TABLE
         B     RETURN              Return
         SPACE 1
ZDCLRSCR DS    0H                  Process CLRSCRN request
         SPACE 1
         STFSMODE INITIAL=YES      SET FULL SCREEN MODE FOR VTAM
         SPACE 1
         LTR   #15,#15             IF NOT A VTAM TERMINAL
         BNZ   TCAMCLR             THEN DO A TCAM SCREEN CLEAR
         SPACE 1
******** STLINENO LINE=1           ELSE DO A VTAM SCREEN CLEAR
         TPUT  CLR,L'CLR,FULLSCR,,HOLD
         SPACE 1
         STLINENO LINE=1           INSURE LINE MODE OUTPUT GOES TO TOP
         SPACE 1
         STFSMODE OFF              SET FULL SCREEN MODE OFF
         SPACE 1
         TCLEARQ INPUT
         SPACE 1
         LR    #15,#10             RETURN NIL
         B     RETURN
         SPACE 1
TCAMCLR  DS    0H                  NOT VTAM - DO TCAM SCREEN CLEAR
         SPACE 1
         TPUT  FSON,L'FSON,FULLSCR,,HOLD
         TPUT  FSOFF,L'FSOFF,FULLSCR,,HOLD
         SPACE 1
         LR    #15,#10             RETURN NIL
         B     RETURN
         SPACE 1
FAKESTR  DC    YL1(##STRING),AL3(1) String header
FAKECHAR DC    XL4'00'             Place to insert character
CLR      DC    X'401140403C40400013'
FSON     DC    X'40115D7F1140403C40400013'
FSOFF    DC    X'40115D7E1140403C40400013'
         SPACE 1
TYOERROR #ERR  'Argument 1 to TYO not a character fixnum - ',0(#11)
ZDPERROR #ERR  'Argument 1 to ZPUTFPO not a non-negative fixnum - ',   X
               0(#11)
*LRERROR #ERR  'Argument 1 to ZPUTFPO exceeds output file length - ',  X
               0(#11)
         SPACE
         LTORG
         SPACE
         END
