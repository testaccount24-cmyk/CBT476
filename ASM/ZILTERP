         TITLE 'ZILTERP - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS MODULE PROCESSES TERPRI REQUESTS, I.E. IT FORCES OUTPUT.       *
*                                                                     *
* ON ENTRY:                                                           *
*                                                                     *
*  #7 = FILE POINTER                                                  *
*                                                                     *
* THIS ROUTINE DESTROYS REGISTERS 14,15,0,1,2,3.                      *
*                                                                     *
* REGISTERS 4,5,6,AND 7 (OF COURSE) ARE UNCHANGED                     *
* (DON'T WORRY,ZILTPUT SAVES ALL THE REGISTERS).                      *
*                                                                     *
***********************************************************************
         GBLB  &ZILXA
         #ZSYS
         EJECT
ZILTERP  #ZBEG NAME='ZILTERP'
         SPACE 1
         ST    #12,SAVE12          SAVE CALLER'S BASE REGISTER
         LR    #3,#14              SAVE CALLER'S RETURN REGISTER
         LR    #12,#15             SET UP OWR BASE REGISTER
         DROP  #15
         USING ZILTERP,#12
         USING ZLFILBLK,#7         ASSUME #7 CONTAINS FILE POINTER
         SPACE 1
         TM    ZLFFLAG,ZLFTERM     IF OUTPUT FILE ALLOCATED TO TERMINAL
         BZ    NOTTERM             THEN
         L     #1,ZLFCARD           GET ADDRESS OF OUTPUT AREA
         LH    #2,ZLFLRECL          GET LENGTH OF OUTPUT AREA
* NOTE - SINCE WE'RE GONNA STICK A NEWLINE ONTO THE END OF THIS LINE,
*        REG 2 CONTAINS LENGTH MINUS 1 - SUITABLE FOR EXECUTE
         L     #14,ZLCTRMTR         GET TERMINAL OUTPUT TRANSLATE TABLE
         EX    #2,TRANS             TRANSLATE THE LINE
         LA    #14,0(#2,#1)         POINT TO CHARACTER FOLLOWING OUTPUT
         MVI   0(#14),X'15'         MOVE IN A NEWLINE CHARACTER
         LR    #15,#14              POINT TO CHAR FOLLOWING LAST CHAR
         BCTR  #15,0                POINT TO LAST CHARACTER
         CLI   0(#15),C' '          IF LAST CHARACTER IS NOT A BLANK
         BNE   BNEND                THEN SKIP TRAILING-BLANK CONVERSION
         BCTR  #15,0                POINT TO LAST CHARACTER BUT 1
BNLOOP   DS    0H
         CR    #15,#1               LOOP BACKWARDS UNTIL START OF LINE
         BL    BNEND
         CLI   0(#15),C' '          REPLACE TRAILING BLANKS WITH NULLS
         BNE   BNEND                SO THAT ONLY ONE TRAILING BLANK IS
         MVI   1(#15),X'00'           LEFT FOLLOWING LAST NONBLANK
         BCT   #15,BNLOOP
BNEND    DS    0H
         LA    #0,1(,#2)            SET LENGTH INCLUDING NEWLINE
         #TPUT *,(1),(0),ASIS       DO TPUT
         B     AFTOUT
         SPACE 1
TRANS    TR    0(*-*,#1),0(#14)    TRANSLATE LINE TO DECENT CHARACTERS
         SPACE 1
NOTTERM  DS    0H                  ELSE
         TM    ZLFFLAG2,ZLFRECV    IF THIS IS A RECFM=V FILE,
         BZ    NOTVB               THEN...
         L     #1,ZLFCARD           GET ADDRESS OF START OF RECORD
         SH    #1,=H'4'             BUMP BACK TO RDW
         L     #2,ZLFCHAR           GET CURRENT CHARACTER POINTER
         LA    #2,4-1(,#2)          ADJUST BY 1, ADD 4 TO INCLUDE RDW
         TM    ZLFDCB+36,X'04'      IF RECFM = V.A
         BZ    NOTTRCVA             THEN...
         LA    #2,1(,#2)             ADJUST FOR PRINT CONTROL CHAR
         BCTR  #1,0                  BUMP BACK FOR PRINT CONTROL CHAR
NOTTRCVA DS    0H
         SLL   #2,16                SHIFT LENGTH INTO LEFT HALF
         ST    #2,0(,#1)            STORE THE RDW
NOTVB    DS    0H
         AIF   (NOT &ZILXA).SKIP1
*---------------------------------SWITCH FROM CURRENT AMODE TO AMODE 24
         LA    #1,CODE24           ADDRESS OF THIS CODE
         LA    #2,CODE24E          RETURN ADDRESS
         BSM   #2,#1
CODE24   DS    0H
*---------------------------------THE AMODE IS NOW 24
.SKIP1   ANOP
         ST    #9,ZLCISV09         SAVE ZIL REGS
         OI    ZLCIFLGS,ZLCISYS    INDICATE NON-ZIL-CODE RUNNING
         LA    #1,ZLFDCB           POINT TO DCB
         PUT   (1)                 DO PUT LOCATE
         NI    ZLCIFLGS,255-ZLCISYS INDICATE ZIL CODE RUNNING AGAIN
         AIF   (NOT &ZILXA).SKIP2
*---------------------------------SWITCH FROM AMODE 24 TO CURRENT AMODE
         BSM   0,#2
CODE24E  DS    0H
*---------------------------------THE AMODE IS NOW SAME AS ON ENTRY
.SKIP2   ANOP
         TM    ZLCIFLGS,ZLCIATTN    IF ATTENTION INTERRUPT OCCURRED
         BOR   #13                  THEN GO TO HANDLE IT
         LH    #0,ZLFDCB+82        GET DCB LRECL
         TM    ZLFFLAG2,ZLFRECV    IF THIS IS A RECFM=V FILE
         BZ    NOTRECFV            THEN...
         TM    ZLFDCB+36,X'04'      IF RECFM = V.A
         BZ    NOTRECVA             THEN...
         MVC   0(5,#1),NULLRDWA      SET THIS RECORD'S RDW
         LA    #1,5(,#1)             BUMP PAST RDW
         SH    #0,=H'5'             ADJUST LENGTH OF ACTUAL RECORD TEXT
         B     NOTRECFA
NOTRECVA DS    0H                  ELSE RECFM = V(B), NO A
         MVC   0(4,#1),NULLRDW       SET THIS RECORD'S RDW
         LA    #1,4(,#1)             BUMP PAST RDW
         SH    #0,=H'4'             ADJUST LENGTH OF ACTUAL RECORD TEXT
         B     NOTRECFA
NOTRECFV DS    0H                  ELSE
         TM    ZLFDCB+36,X'04'     IF RECFM = F.A
         BZ    NOTRECFA            THEN...
         MVI   0(#1),C' '           INITIALIZE PRINT CONTROL CHAR
         LA    #1,1(,#1)            BUMP POINTER PAST CONTROL CHAR
         BCTR  #0,0                 SUBTRACT 1 FOR PRINT CONTROL CHAR
NOTRECFA DS    0H
         ST    #1,ZLFCARD          STORE CURRENT RECORD ADDRESS
         STH   #0,ZLFLRECL         STORE RECORD LENGTH
         ALR   #1,#0               ADDRESS + LENGTH GIVES...
         ST    #1,ZLFEND           NEW END-OF-RECORD POSITION
AFTOUT   DS    0H
         LA    #0,1                SET CHARACTER POSITION
         ST    #0,ZLFCHAR          TO ONE
         NI    ZLFFLAG1,255-ZLFNEWLN CLEAR NEW LINE INDICATION
         LA    #15,X'40'           SOURCE LENGTH = 0
         SLL   #15,24              FILL = BLANK
         XR    #14,#14             SOURCE = NULL
         LH    #1,ZLFLRECL         LENGTH = LENGTH OF OUTPUT AREA
         L     #0,ZLFCARD          TARGET = OUTPUT AREA
         MVCL  #0,#14              CLEAR OUTPUT AREA TO BLANKS
         SPACE 1
         L     #12,SAVE12          RELOAD CALLER'S BASE REGISTER
         BR    #3                  RETURN TO CALLER
         SPACE 1
SAVE12   DS    A
NULLRDW  DC    Y(4,0)
NULLRDWA DC    Y(5,0),C' '
         SPACE 1
         LTORG
         END
