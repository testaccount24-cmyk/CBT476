         TITLE 'CURDATE - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*
* CURDATE RETURNS THE CURRENT DATE AS LIST OF 3 INTEGERS, REPRESENTING
* THE DATE AS (YEAR MONTH DAY).
*
***********************************************************************
*
* 04/13/2000 Changed for Y2K.
*
***********************************************************************
CURDATE  #ZBEG MINARGS=0,MAXARGS=0,NAME='CURDATE'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ARGS=0              SAVE REGISTERS
         SPACE
         TIME  DEC                 GET CURRENT TIME AND DATE
         ST    #1,DECDATE          STORE DATE IN WORK AREA
         SPACE
         XR    #14,#14
         LH    #15,DECYEAR         GET DECIMAL YEAR
         SLL   #15,4
         LA    #15,X'C'(,#15)
         STM   #14,#15,ZLCDBL
         CVB   #2,ZLCDBL
         LA    #2,1900(,#2)
         ST    #2,YEAR
         SPACE
         XR    #14,#14
         XR    #15,#15
         ICM   #15,B'0011',DECJUL  GET DECIMAL JULIAN DAY
         STM   #14,#15,ZLCDBL
         CVB   #2,ZLCDBL
         ST    #2,JULIAN
         SPACE
*
* COMPUTE MONTH AND DAY FROM JULIAN DAY
*
* DETERMINE IF YEAR IS DIVISIBLE BY 4 (I.E. LEAP YEAR).
* (THIS ALGORITHM WILL FAIL IN THE YEAR 2100, SO BE WARNED)
*
         TM    YEAR+3,B'00000011'  IF THIS YEAR IS A LEAP YEAR
         BNZ   NOTLEAP             THEN
         LA    #0,29                SET MONTHS TO 29
         B     AFTLEAP             ELSE
NOTLEAP  LA    #0,28                SET MONTHS TO 28
AFTLEAP  DS    0H
         ST    #0,MONTHS+4         SET # OF MONTHS IN FEBRUARY
         LA    #15,MONTHS-4        POINT TO ARRAY OF DAYS PER MONTH
         LA    #1,4(,#15)          POINT TO FIRST/NEXT ELEMENT
JULLOOP  DS    0H                  DO WHILE #DAYS EXCEEDS DAYS LEFT
         C     #2,0(,#1)           IF #DAYS > DAYS IN THIS MONTH
         BNH   GOTMONTH            THEN
         S     #2,0(,#1)            DECREASE #DAYS BY DAYS IN THIS MO.
         LA    #1,4(,#1)            POINT TO NEXT MONTH'S DAYS
         B     JULLOOP              AND CONTINUE.
GOTMONTH DS    0H                  WHEN MONTH IS FOUND,
         SR    #1,#15               COMPUTE THE INDEX OF THE
         SRA   #1,2                 DAYS-IN-MONTH ENTRY WE'RE AT
         ST    #1,MONTH             GIVING THE MONTH NUMBER
         ST    #2,DAY               REMAINING # OF DAYS IS DAY NUMBER
DATEDONE DS    0H
         L     #2,DAY
         SLA   #2,3
         LA    #1,#SFT(#2)         FIXNUM DAY
         LR    #2,#10
         LA    #0,16(,#11)
         L     #15,ZLCCONS
         #BASR #14,#15             (CONS DAY NIL)
         ST    #15,12(,#11)
         L     #2,MONTH
         SLA   #2,3
         LA    #1,#SFT(#2)         FIXNUM MONTH
         L     #2,12(,#11)
         LA    #0,16(,#11)
         L     #15,ZLCCONS
         #BASR #14,#15             (CONS MONTH (CONS DAY NIL))
         ST    #15,12(,#11)
         L     #2,YEAR
         LA    #0,16(,#11)
         #MKAT FIXED               Make a new fixnum for the year
         LR    #1,#15              FIXNUM MONTH
         L     #2,12(,#11)
         LA    #0,16(,#11)
         L     #15,ZLCCONS
         #BASR #14,#15             (CONS YEAR (CONS MONTH (CONS DAY ...
         SPACE
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE
YEAR     DS    F
MONTH    DS    F
DAY      DS    F
JULIAN   DS    F
DECDATE  DS    F                   0086123F
DECYEAR  EQU   DECDATE+0,2,C'H'    0086
DECJUL   EQU   DECDATE+2,2,C'P'        123F
         SPACE
MONTHS   DC    F'31,00,31,30,31,30,31,31,30,31,30,31'
         LTORG
         SPACE
         END
