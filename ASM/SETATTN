         TITLE 'SETATTN - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* SETATTN TAKES ONE REQUIRED ARGUMENT - NIL OR NON-NIL.               *
*                                                                     *
* IF THE ARG IS NIL, STAX PROCESSING IS CANCELLED;                    *
* OTHERWISE, STAX PROCESSING IS ENABLED.                              *
*                                                                     *
* THIS FUNCTION TURNS ATTENTION HANDLING ON AND OFF.                  *
*                                                                     *
***********************************************************************
*                                                                     *
* SUMMARY OF REGISTER USAGE FOR THIS MODULE                           *
*                                                                     *
*        USING SETATTN,#12                                            *
*        USING STAXPARM,#4                                            *
*        USING STARETRY,#6                                            *
*        USING STAXEXIT,#7                                            *
*        USING SDWA,#5                                                *
*                                                                     *
***********************************************************************
*                                                                     *
* Change activity:                                                    *
*                                                                     *
* 10/19/88 - Attempts to handle being in full screen mode.            *
*                                                                     *
***********************************************************************
         SPACE 1
SETATTN  #ZBEG MINARGS=1,MAXARGS=1,NAME='SETATTN'
         #ZPDS 16
         #ZSAV ARGS=1
         SPACE 1
         L     #15,0(,#11)         PICK UP ARG 1
         CR    #15,#10             IF ARG IS NIL
         BNE   ATTNON              THEN...
         TM    ZLCEFLGS,ZLCESTAX    IF STAX ENVIRONMENT IS ACTIVE
         BZ    RETURN               THEN
         STAX  ,                    CANCEL STAX
         LTR   #15,#15              IF FAILED
         BNZ   ERROR1               THEN ERROR
         NI    ZLCEFLGS,255-ZLCESTAX INDICATE STAX NOT ACTIVE
         B     RETURN                AND RETURN OK
         SPACE 1
ATTNON   DS    0H                  ELSE...
         TM    ZLCEFLGS,ZLCESTAX   IF STAX ENVIRONMENT IS ACTIVE
         BO    RETURN              THEN DO NOTHING
         STAX  STAXEXIT,               ESTABLISH STAX ENVIRONMENT      X
               USADDR=(#13),                                           X
               REPLACE=YES
         LTR   #15,#15              IF FAILED
         BNZ   ERROR1               THEN ERROR
         OI    ZLCEFLGS,ZLCESTAX    INDICATE STAX ACTIVE
         B     RETURN                AND RETURN OK
         SPACE 1
RETURN   DS    0H
         L     #15,0(,#11)         RETURN WITH ARG AS VALUE
         #ZRET ,
         SPACE 1
ERROR1   DS    0H                  Error - STAX failed
         #ERR  'ZIL0050 SETATTN failed, bad return code from STAX.',   X
               PREFIX=NO
         SPACE 1
         DROP  #12
         SPACE 1
         EJECT
STAXEXIT DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
* STAX EXIT THAT GETS CONTROL IF AN ATTENTION OCCURS INSIDE ZIL.      *
*                                                                     *
*  ON ENTRY TO THIS ROUTINE:                                          *
*                                                                     *
* REGISTER 0, 2-12   = IRRELEVANT                                     *
* REGISTER 1  = THE ADDRESS OF THE ATTENTION EXIT PARAMETER LIST      *
* REGISTER 13 = SAVE AREA ADDRESS                                     *
* REGISTER 14 = RETURN ADDRESS                                        *
* REGISTER 15 = ENTRY POINT ADDRESS OF THE ATTENTION HANDLING ROUTINE *
*                                                                     *
*  THE ATTENTION EXIT PARAMETER LIST POINTED TO BY #1 CONTAINS THE    *
*  ADDRESS OF A TERMINAL ATTENTION INTERRUPTION ELEMENT (TAIE).       *
*                                                                     *
*         +0 ___________    TAIE +0 _______________                   *
*           |           |          |      |TGET|   |                  *
*  #1 --->  | ->TAIE ---|------->  |L'IBUF| RC |(*)|                  *
*         +4|___________|        +4|______|____|___|                  *
*   ATTN    |           |          |               |                  *
*   EXIT    | -> IBUF   |          | INT'D PSW ADR |                  *
*   PARAM +8|___________|        +8|_______________|                  *
*   LIST    |           |          |               |                  *
*           | -> USADDR |          | INT'D GR0-15  |                  *
*           |___________|          |               |                  *
*                                                                     *
*                                                                     *
* (*) TAIE+3 is a flag that is nonzero if a CLIST attention exit is   *
*     in the stack.  This is valid for MVS/SP2.2 only.                *
*                                                                     *
***********************************************************************
         SPACE 1
         PUSH  USING
         DROP  #13
         LR    #7,#15              SAVE ENTRY ADDRESS REGISTER
         USING STAXEXIT,#7
         LR    #6,#14              SAVE RETURN ADDRESS REGISTER
         LM    #2,#4,0(#1)         LOAD VALUES FROM PARAMETER LIST
*                                  #2 --> TAIE
*                                  #3 --> IBUF
*                                  #4 --> USADDR = ZLCOMMON
         USING TAIE,#2
         USING ZLCOMMON,#4
         SPACE 1
         TM    ZLCIFLGS,ZLCIATTN   IF ATTENTION ALREADY IN PROGRESS
         BOR   #6                  THEN IGNORE THIS ATTEMPT
         TM    ZLCIFLGS,ZLCISMC    IF NON-INTERRUPTIBLE PROCESS
         BZ    NOTSMC              THEN...
         TPUT  SMCMSG,L'SMCMSG      WARN USER ABORTS WILL BE DEFERRED
NOTSMC   DS    0H                  ELSE...
         SPACE 1
         TPUT  ATTNOUT,L'ATTNOUT   SEND ATTENTION PROMPT
         TGET  ATTNIN,L'ATTNIN     READ RESPONSE
         OI    ATTNIN,X'40'        FOLD TO UPPER CASE
         LR    #5,#1               SAVE TGET COUNT
         TCLEARQ INPUT             THROW AWAY EXTRA JUNK
         LTR   #5,#5               IF LENGTH IS ZERO
         BZR   #6                  THEN RESUME CURRENT PROCESS
         CLI   ATTNIN,C' '         IF USER ENTERED A BLANK
         BNHR  #6                  THEN RESUME CURRENT PROCESS
         CLI   ATTNIN,C'R'         IF USER ENTERED "R"
         BER   #6                  THEN RESUME CURRENT PROCESS
         CLI   ATTNIN,C'A'         IF USER ENTERED "A"
         BE    ABORT               THEN ABORT
         CLI   ATTNIN,C'T'         IF USER ENTERED "T"
         BE    TIME                THEN SHOW TIME
         CLI   ATTNIN,C'H'         IF USER ENTERED "H"
         BE    HELP                THEN SHOW HELP
         CLI   ATTNIN,C'?'         IF USER ENTERED "?"
         BE    HELP                THEN SHOW HELP
         B     NOTSMC              ELSE REPROMPT.
         SPACE 1
TIME     DS    0H                  TIME - DISPLAY TIME VIA TSO TIME CMD
         SPACE 1
         L     #15,X'21C'          GET TCB ADDRESS
         L     #15,X'B4'(,#15)     GET JSCB ADDRESS
         L     #15,X'15C'(,#15)    GET ACTIVE JSCB ADDRESS
         ICM   #15,15,X'108'(#15)  GET PSCB ADDRESS
         ST    #15,CPPLPSCB
         USING PSCB,#15
         MVC   CPPLUPT,PSCBUPT      SAVE UPT ADDRESS
         L     #15,PSCBRLGB         GET ADDRESS OF RELOGON BUFFER
         USING RLGB,#15
         L     #15,RLGBECT          GET ADDRESS OF ECT
         ST    #15,CPPLECT         ADDRESS ENVIRONMENT CONTROL TABLE
         DROP  #15
         ICM   #15,15,TIMEADDR     GET ADDRESS OF IKJEFT25
         BNZ   CALLTIME
         LOAD  EP=IKJEFT25,ERRET=NOTSMC
         LR    #15,#0
         ST    #15,TIMEADDR
CALLTIME DS    0H
         LA    #1,CPPL
         #BASR #14,#15             CALL TSO TIME COMMAND
         B     NOTSMC
         SPACE 1
HELP     DS    0H                  HELP - GIVE THE USER SOME HELP
         SPACE 1
         LA    #14,HELPMSGS
HELPLOOP DS    0H
         C     #14,=A(HELPMSGE)
         BNL   NOTSMC
         LM    #0,#1,0(#14)
         TPUT  (1),(0),R
         LA    #14,8(,#14)
         B     HELPLOOP
         SPACE 1
ABORT    DS    0H
         OI    ZLCIFLGS,ZLCIATTN   INDICATE ATTENTION IN PROGRESS
         TM    ZLCIFLGS,ZLCISMC    IF NON-INTERRUPTIBLE CODE RUNNING
         BOR   #6                  THEN JUST RETURN, CODE'LL DETECT
         TM    ZLCIFLGS,ZLCISYS    IF NON-ZIL CODE RUNNING NOW
         BOR   #6                  THEN JUST RETURN, CODE'LL DETECT
         C     #4,TAIERSAV+(13*4)  IF REG 13 AT ATTN TIME = ZLCOMMON
         BNE   REGSBAD             THEN WE'RE OK SO FAR, ELSE PROBLEM
         L     #1,TAIEIAD          ELSE GET ADDRESS OF INSTR AT ATTN
         B     ZAPIT               AND GO TO ZAP INSTRUCTION
REGSBAD  DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
*  IF REGISTER 13, AS FOUND IN THE TAIE, DOES NOT MATCH ZIL'S, THEN   *
*  PROBABLY WE GOT INTERRUPTED WHILE WE WERE IN SOME OTHER RB'S CODE  *
*  (AND ZLCISYS WAS NOT SET).  IN SUCH A CASE, WE SHOULD SCAN THE     *
*  RB CHAIN FOR THE CORRECT RB.  WHEN WE FIND IT, WE SHOULD RESTORE   *
*  REGS 8, 9 AND 10 TO THE BEST OF OUR ABILITY AND USE THE PSW FROM   *
*  THAT RB TO STICK IN OUR "BR 13".                                   *
*                                                                     *
***********************************************************************
         SPACE 1
         L     #14,X'21C'          GET CURRENT TCB ADDRESS
         L     #15,0(,#14)         GET CURRENT RB (IRB FOR ATTN EXIT)
RBLOOP   DS    0H
         CL    #15,ZLCZILRB        EXIT LOOP WHEN WE FOUND ZIL'S RB
         BE    RBGOT
         L     #15,X'1C'(,#15)     ELSE GET NEXT RB IN CHAIN
         TM    X'B'(#15),X'80'     IF NO MORE RB'S
         BO    FAILURE             THEN DISASTER
         B     RBLOOP              ELSE KEEP SEARCHING RB CHAIN
RBGOT    DS    0H
         L     #1,X'14'(,#15)      GET RIGHT HALF OF RBOPSW
ZAPIT    DS    0H                  ZAP INSTRUCTION TO FORCE "BR 13"
         ST    #1,ZLCINSTA         SAVE ADDRESS
         LH    #0,0(,#1)           GET INSTRUCTION AT THAT ADDRESS
         STH   #0,ZLCINSTR         SAVE INSTRUCTION
         LH    #0,BR13             GET A "BR 13" INSTRUCTION
         STH   #0,0(,#1)           OVERLAY INSTRUCTION WITH BR 13
         OI    ZLCIFLGS,ZLCIOVER   INDICATE INSTRUCTION OVERLAID
         SPACE 1
         STATUS STOP               STOP ANY SUBTASKS FROM EXECUTING
         SPACE 1
         POST  ZLCECB              POST ECB IF WAITING FOR SUBTASK
         SPACE 1
         BR    #6                  RETURN TO SYSTEM SO ZIL CAN PROCEED
         SPACE 1
FAILURE  DS    0H                  DIDN'T FIND ZIL'S RB
         SPACE 1
         TPUT  NORB,L'NORB
         SPACE 1
         ABEND 0053,DUMP           ABEND
         SPACE 1
BR13     BR    #13                 INSTRUCTION TO ZAP INTO ZIL CODE
         SPACE 1
TIMEADDR DC    A(0)                ADDRESS OF IKJEFT25, TSO TIME CMD
CPPL     DS    0A
CPPLCBUF DC    A(FAKEBUF)      COMMAND BUFFER
CPPLUPT  DS    A        PTR TO UPT
CPPLPSCB DS    A        PTR TO PSCB
CPPLECT  DS    A        PTR TO ECT
         SPACE 1
FAKEBUF  DC    X'0005000040'
         SPACE 1
SMCIBUF  DS    C                   FOR DUMMY TGET
         SPACE 1
HELPMSGS DS    0A
         DC    A(L'HELP1),A(HELP1)
         DC    A(L'HELP2),A(HELP2)
         DC    A(L'HELP3),A(HELP3)
         DC    A(L'HELP4),A(HELP4)
         DC    A(L'HELP5),A(HELP5)
         DC    A(L'HELP6),A(HELP6)
         DC    A(L'HELP7),A(HELP7)
HELPMSGE EQU   *
         SPACE 1
ATTNOUT  DC    C'ZIL0051 ATTENTION INTERRUPT: TYPE A(BORT), R(ESUME), TX
               (IME), H(ELP).'
ATTNIN   DC    CL1' '
SMCMSG   DC    C'ZIL0052 NON-INTERRUPTIBLE PROCESS.  ABORTS WILL BE DEFX
               ERRED UNTIL PROCESS IS COMPLETE.'
NORB     DC    C'ZIL0053 UNABLE TO PROCESS ATTENTION INTERRUPT, ZIL RB X
               NOT FOUND ON RB CHAIN.'
         SPACE 1
HELP1    DC    C'ZIL0055 Type one of the following and press ENTER:'
HELP2    DC    C'          A - abort the current process and return to X
               top level.'
HELP3    DC    C'          R - resume processing as if nothing had happX
               ened.'
HELP4    DC    C'          T - display time used so far.'
HELP5    DC    C'          H - show this information.'
HELP6    DC    C'        Pressing ENTER is equivalent to R (resume).'
HELP7    DC    C'        Pressing PA1 (attention) will terminate the enX
               tire ZIL application.'
         POP   USING
         EJECT
         LTORG
         EJECT
         IKJTAIE ,                 TERMINAL ATTENTION INTERRUPT ELEMENT
         IKJPSCB ,
         IKJUPT  ,
         IKJRLGB ,
         IKJECT ,
         END
