         TITLE 'MKATOM - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
* MKATOM TAKES 3 ARGUMENTS, OF WHICH THE LAST 2 ARE OPTIONAL.         *
* THE FIRST IS A STRING TO BE "READ" INTO A SINGLE ATOM.              *
* THE SECOND SPECIFIES WHETHER (NON-NIL) OR NOT (NIL) TO INTERN THE   *
*  GENERATED ATOM ON THE OBLIST (NOTE THAT DEFAULT IS NOT TO).        *
* THE THIRD SPECIFIES WHETHER (NON-NIL) OR NOT (NIL) TO FORMAT THE    *
*  ATOM AS NUMERIC WHERE POSSIBLE (DEFAULT IS TO ASSUME ALPHA).       *
* THIS ROUTINE IS NOT RECURSIVE AND USES NO EXTRA STACK SPACE.        *
***********************************************************************
         SPACE
MKATOM   #ZBEG MINARGS=1,MAXARGS=3,NAME='MAKE-ATOM'
         #ZPDS 24                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         L     #6,0(,#11)          GET FIRST ARGUMENT
         CLI   ##TYPE(#6),##STRING MUST BE A STRING
         BE    OK                   OR
         CLI   ##TYPE(#6),##SYMBOL   A SYMBOL
         BNE   ERROR1                 (IF NEITHER, ERROR)
         L     #6,##PNAME(,#6)       IF A SYMBOL, TAKE PRINT NAME
OK       DS    0H
         XR    #5,#5               CLEAR REGISTER FOR INSERT
         ICM   #5,7,1(#6)          GET LENGTH OF STRING TEXT
         C     #5,ZLCWALEN         IF LENGTH EXCEEDS CURRENT WORKAREA
         BNH   LENOK               THEN...
         LA    #2,7(,#5)            GET A LARGER WORK AREA
         N     #2,=X'FFFFFFF8'      ROUNDED UP TO MULTIPLE OF 8
         LR    #0,#2                SAVE THE NEW WORK AREA LENGTH
         #GETMAIN RC,LV=(0),LOC=BELOW GET A NEW WORK AREA
         LTR   #15,#15              IF GETMAIN FAILED
         BNZ   ERROR2               THEN ERROR - NOT ENOUGH STORAGE
         LR    #3,#1                SAVE NEW WORKAREA ADDRESS
         ICM   #1,15,ZLCWA          GET ADDRESS OF OLD AREA
         BZ    NOFREE               IF NONE, THEN SKIP MOVE & FREE
         L     #0,ZLCWALEN          GET CURRENT WORK AREA LENGTH
         FREEMAIN R,LV=(0),A=(1)    FREE THE OLD WORK AREA
NOFREE   DS    0H
         ST    #3,ZLCWA             SET NEW ZIL WORKAREA ADDRESS
         ST    #2,ZLCWALEN          SET NEW ZIL WORKAREA LENGTH
         SPACE 1
LENOK    DS    0H                  WORKAREA OK
         LA    #0,##VECDAT(,#6)    SOURCE ADDRESS = STRING TEXT
         LR    #1,#5               SOURCE LENGTH = STRING LENGTH
         L     #14,ZLCWA           DESTINATION ADDRESS = WORKAREA
         LR    #15,#5              DESTINATION LENGTH = SOURCE LENGTH
         MVCL  #14,#0              MOVE STRING TEXT TO WORK AREA
*
         LR    #0,#5               GET LENGTH OF TEXT
         L     #1,ZLCWA            SET POINTER = ADDRESS OF WORKAREA
         LM    #2,#3,4(#11)        SET INTERN FLAG = ARG 2 TO MKATOM
         LA    #4,24(,#11)         SET CURRENT STACK POINTER FOR CONS
*                                  SET FORMAT FLAG = ARG 3 TO MKATOM
         L     #15,ZLCABLD         CALL ZILABLD TO MAKE AN ATOM FROM IT
         #BASR #14,#15             (RETURNS ATOM IN #15)
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
ERROR1   DS    0H
         #ERR  'Argument to MAKE-ATOM not a string - ',0(#11)
         SPACE 1
ERROR2   DS    0H                  ERROR - NOT ENOUGH STORAGE
         XR    #0,#0               CLEAR WORK AREA ADDRESS AND LENGTH
         ST    #0,ZLCWA
         ST    #0,ZLCWALEN
         #ERR  'ZIL2007 MAKE-ATOM: Not enough memory to build symbol.',x
               PREFIX=NO
         SPACE 1
         LTORG
         END
