         TITLE 'FLOAT - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* FLOAT TAKES ONE REQUIRED ARGUMENT, A NUMERIC ATOM, AND ONE          *
* OPTIONAL ARGUMENT, AN OBJECT WHOSE TYPE IS THE TYPE OF FLOAT        *
* TO CONVERT TO.                                                      *
*                                                                     *
***********************************************************************
FLOAT    #ZBEG MINARGS=1,MAXARGS=2,NAME='FLOAT'
         #ZPDS 20                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
***********************************************************************
*                                                                     *
* CONVERSION RULES ARE AS FOLLOWS:                                    *
*                                                                     *
* 1. ARG INTEGER             - CONVERT TO FLOAT AND RETURN.           *
* 2. ARG FLOAT               - RETURN FLONUM ITSELF.                  *
*                                                                     *
* ANY OTHER TYPES CAUSE AN ERROR.                                     *
*                                                                     *
***********************************************************************
         SPACE
         L     #15,0(,#11)         LOAD ARGUMENT
*
* CHECK TYPE OF ARG 1
*
         CLI   ##TYPE(#15),##FIXNUM
         BE    CONVERT             IF FIXP, CONVERT IT AND RETURN
         CLI   ##TYPE(#15),##SFLOAT
         BE    SCONVERT            IF SINGLE-FLOAT, MAYBE CONVERT
         CLI   ##TYPE(#15),##DFLOAT
         BE    DCONVERT            IF DOUBLE-FLOAT, MAYBE CONVERT
         CLI   ##TYPE(#15),##BIGNUM
         BE    BCONVERT            IF BIGP, CONVERT IT AND RETURN
         B     ERROR1
         SPACE 1
CONVERT  DS    0H                  MAKE A FLONUM FROM FIXED OR LOGICAL
         SPACE 1
         L     #1,4(,#11)          Get argument 2
         CR    #1,#13              If arg 2 unsupplied
         BE    CID                 then convert integer to double float
         CR    #1,#10              If arg 2 NIL
         BE    CID                 then convert integer to double float
         CLI   ##TYPE(#1),##SFLOAT If arg 2 single-float
         BE    CIS                 then convert integer to single float
         CLI   ##TYPE(#1),##DFLOAT If arg 2 double-float
         BE    CID                 then convert integer to double float
         B     ERROR2              Else error
         SPACE 1
CIS      DS    0H                  Convert fixnum to single float
         SPACE 1
         L     #0,##CDR(,#15)      GET FIXED VALUE
         #BAS  #14,FIX2FLO         CONVERT FROM FIXED TO FLOAT
         STE   #F0,ZLCWORK         STORE IT
         L     #2,ZLCWORK          PICK IT UP
         LA    #0,20(,#11)         SET STACK LOCATION FOR CONS
         #MKAT FLOAT               MAKE A FLONUM ATOM
         B     RETURN              AND RETURN WITH IT
         SPACE 1
CID      DS    0H                  Convert fixnum to double float
         SPACE 1
         L     #0,##CDR(,#15)      Get fixed value
         #BAS  #14,FIX2FLO         Convert from fixed to float
         LA    #0,20(,#11)         Set stack pointer for CONS
         B     CDFLOAT             Go to cons up a double float
         SPACE 1
SCONVERT DS    0H                  Single-float
         SPACE 1
         L     #1,4(,#11)          Get argument 2
         CR    #1,#13              If arg 2 unsupplied
         BE    RETURN              then return single float as is
         CR    #1,#10              If arg 2 NIL
         BE    RETURN              then return single float as is
         CLI   ##TYPE(#1),##SFLOAT If arg 2 single-float
         BE    RETURN              then return single float as is
         CLI   ##TYPE(#1),##DFLOAT If arg 2 double-float
         BE    CSD                 then convert single to double
         B     ERROR2              Else error
         SPACE 1
DCONVERT DS    0H                  Double-float
         SPACE 1
         L     #1,4(,#11)          Get argument 2
         CR    #1,#13              If arg 2 unsupplied
         BE    RETURN              then return double float as is
         CR    #1,#10              If arg 2 NIL
         BE    RETURN              then return double float as is
         CLI   ##TYPE(#1),##SFLOAT If arg 2 single-float
         BE    CDS                 then convert double to single
         CLI   ##TYPE(#1),##DFLOAT If arg 2 double-float
         BE    RETURN              then return double float as is
         B     ERROR2              Else error
         EJECT
CSD      DS    0H                  Convert single to double
         SPACE 1
         SDR   #F0,#F0             Clear FPR
         LE    #F0,##CDR(,#15)     Load single-float from arg 1
         LA    #0,20(,#11)         Set stack location for CONS
         SPACE 1
CDFLOAT  DS    0H                  #F0 = value, build a double-float
         SPACE 1
         L     #15,ZLCMDF          Get address of ZILMDF
         #BASR #14,#15             Call ZILMDF to build double float
         B     RETURN              Return with double float
         EJECT
CDS      DS    0H                  Convert double to single
         SPACE 1
         LD    #F0,8(,#15)         Load double-float from arg 1
         LRER  #F0,#F0             Convert to single while rounding
         STE   #F0,ZLCWORK         Store in temp area
         L     #2,ZLCWORK          Load into GPR
         #MKAT FLOAT               Cons up a single-float
         B     RETURN              Return with it
         EJECT
BCONVERT DS    0H                  Bignum-to-float conversion
         SPACE 1
         L     #1,4(,#11)          Get argument 2
         CR    #1,#13              If arg 2 unsupplied
         BE    CBD                 then convert integer to double float
         CR    #1,#10              If arg 2 NIL
         BE    CBD                 then convert integer to double float
         CLI   ##TYPE(#1),##SFLOAT If arg 2 single-float
         BE    CBS                 then convert integer to single float
         CLI   ##TYPE(#1),##DFLOAT If arg 2 double-float
         BE    CBD                 then convert integer to double float
         B     ERROR2              Else error
         SPACE 1
CBS      DS    0H                  Convert bignum to single float
         SPACE 1
         LR    #5,#15              Get address of bignum to convert
         L     #15,ZLCCVBF         Get address of ZILCVBF
         #BASR #14,#15             Call ZILCVBF to convert to float
         STE   #F0,ZLCWORK         Store flonum value result
         LA    #0,20(,#11)         SET STACK LOCATION FOR CONS
         L     #2,ZLCWORK          Get flonum value in register
         #MKAT FLOAT               Make a single-precision flonum
         B     RETURN
         SPACE 1
CBD      DS    0H                  Convert bignum to double float
         LCR   #5,#15              Get address of bignum to convert
         L     #15,ZLCCVBF         Get address of ZILCVBF
         #BASR #14,#15             Call ZILCVBF to convert to float
         L     #15,ZLCMDF          Get address of ZILMDF
         LA    #0,20(,#11)         SET STACK LOCATION FOR CONS
         #BASR #14,#15             Call ZILMDF to make a double float
         B     RETURN
         SPACE 1
RETURN   DS    0H                  RETURN WITH NEW ATOM
         SPACE
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         EJECT
         COPY  FIX2FLO             FIXED TO FLOAT CONVERSION ROUTINE
         EJECT
ERROR1   DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument 1 to FLOAT not a number - ',0(#11)
         SPACE 1
ERROR2   DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument 2 to FLOAT not a flonum - ',4(#11)
         SPACE 1
         LTORG
         END
