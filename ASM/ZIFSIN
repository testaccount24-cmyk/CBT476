         TITLE 'ZIFSIN - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* SIN TAKES ONE ARGUMENT, A FLONUM.                                   *
*                                                                     *
***********************************************************************
ZIFSIN   #ZBEG MINARGS=1,MAXARGS=1,NAME='ZIFSIN'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         L     #6,0(,#11)          LOAD ARGUMENT
*
* CHECK TYPE OF ARG 1
*
         CLI   ##TYPE(#6),##SFLOAT
         BE    SFLOAT
         CLI   ##TYPE(#6),##DFLOAT
         BE    DFLOAT
         CLI   ##TYPE(#6),##FIXNUM IF FIXED,
         BNE   TRYBIG              THEN...
         ICM   #1,15,##CDR(#6)      GET FIXNUM VALUE
         LA    #0,X'4E'             PREPARE CHARACTERISTIC
         BNM   FX2FLNN              IF VALUE IS NEGATIVE, THEN...
         LPR   #1,#1                USE ABSOLUTE VALUE
         LA    #0,X'CE'             SET SIGN IN CHARACTERISTIC
FX2FLNN  DS    0H
         SLL   #0,24                GET CHARACTERISTIC INTO POSITION
         SDR   #F0,#F0              MAKE A NORMALIZED ZERO
         STM   #0,#1,ZLCDBL+0       STORE CHARACTERISTIC AND MANTISSA
         AD    #F0,ZLCDBL           ADD UNNORMALIZED FLOAT, NORMALIZING
         B     DOITD               ELSE...
         SPACE 1
TRYBIG   DS    0H                  Not fixed or float...
         SPACE 1
         CLI   ##TYPE(#6),##BIGNUM
         BNE   ERROR1
         BE    ERRORB
         SPACE 1
SFLOAT   DS    0H                  SINGLE FLOAT
         LE    #F0,##CDR(,#6)      LOAD SINGLE FLOAT VALUE 1
******** B     DOIT
         SPACE 1
DOIT     DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
* ARG CHECK TO PREVENT ABEND IN FORTRAN CODE                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LPER  #F2,#F0             Get absolute value of flonum arg
         CE    #F2,MAXARGVL        If |arg| greater than 823549.5625
         BH    ERROR2              then error
         SPACE 1
         STE   #F0,ARGVAL          STORE FLO ARG INTO PARAMETER AREA
*
* AT THIS POINT FP REG 0 CONTAINS THE ARGUMENT
*
*
* FORTRAN INTERFACE INITIALIZATION
*
         #ZIFL SIN                 ADDRESS OF SUBROUTINE SIN IN #15
         SPACE 1
         LA    #1,ARGLIST          POINT TO FORTRAN ARG LIST
         SPACE 1
         ST    #9,ZLCISV09         SAVE ZIL REGS
         OI    ZLCIFLGS,ZLCISYS    INDICATE NON-ZIL CODE RUNNING
         L     #13,ZLCFTCBA        GET ADDRESS OF FTCB = SAVE AREA
*
         #BASR #14,#15             CALL THE FORTRAN SUBROUTINE
*
         L     #13,4(,#13)         RESTORE OUR COMMON AREA POINTER
         NI    ZLCIFLGS,255-ZLCISYS RESET NON-ZIL-CODE FLAG
         TM    ZLCIFLGS,ZLCIATTN   IF ATTENTION INTERRUPT DETECTED
         BOR   #13                 THEN GO HANDLE IT
*
* VALUE RETURNED FROM FORTRAN CODE IN FP REG 0
*
         STE   #F0,ZLCWORK         GET ANSWER FROM FORTRAN ROUTINE
         L     #2,ZLCWORK          GET INTO REG FOR CONSING FLONUM
         LA    #0,16(,#11)         SET STACK LOCATION FOR CONS
         #MKAT FLOAT               MAKE A FLONUM AND RETURN WITH IT
         SPACE 1
RETURN   #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
DFLOAT   DS    0H                  DOUBLE FLOAT
         SPACE 1
         LD    #F0,8(,#6)          LOAD DOUBLE FLOAT VALUE 1
******** B     DOITD
         SPACE 1
DOITD    DS    0H                  DO IT FOR A DOUBLE FLOAT
         SPACE 1
***********************************************************************
*                                                                     *
* ARG CHECK TO PREVENT ABEND IN FORTRAN CODE                          *
*                                                                     *
***********************************************************************
         SPACE 1
         LPDR  #F2,#F0             Get absolute value of flonum arg
         CD    #F2,MAXARGVD        If |arg| greater than max dbl val
         BH    ERROR2D             then error
         SPACE 1
         STD   #F0,ARGVAL          STORE FLO ARG INTO PARAMETER AREA
*
* AT THIS POINT FP REG 0 CONTAINS THE ARGUMENT
*
*
* FORTRAN INTERFACE INITIALIZATION
*
         #ZIFL DSIN                ADDRESS OF SUBROUTINE DSIN IN #15
         SPACE 1
         LA    #1,ARGLIST          POINT TO FORTRAN ARG LIST
         SPACE 1
         ST    #9,ZLCISV09         SAVE ZIL REGS
         OI    ZLCIFLGS,ZLCISYS    INDICATE NON-ZIL CODE RUNNING
         L     #13,ZLCFTCBA        GET ADDRESS OF FTCB = SAVE AREA
*
         #BASR #14,#15             CALL THE FORTRAN SUBROUTINE
*
         L     #13,4(,#13)         RESTORE OUR COMMON AREA POINTER
         NI    ZLCIFLGS,255-ZLCISYS RESET NON-ZIL-CODE FLAG
         TM    ZLCIFLGS,ZLCIATTN   IF ATTENTION INTERRUPT DETECTED
         BOR   #13                 THEN GO HANDLE IT
*
* VALUE RETURNED FROM FORTRAN CODE IN FP REG 0
*
         L     #15,ZLCMDF          GET ADDRESS OF ZILMDF
         LA    #0,16(,#11)         SET STACK LOCATION FOR CONS
         #BASR #14,#15             CALL ZILMDF TO MAKE DOUBLE FLOAT
         B     RETURN              RETURN WITH IT
         SPACE 1
ARGLIST  DS    0A                  ARG LIST FOR FORTRAN SUBROUTINE
         DC    A(ARGVAL+X'80000000')
ARGVAL   DS    D                   STORE THE FLONUM ARG HERE
         SPACE 1
MAXARG   DS    0A                  Maximum flonum arg value possible
         DC    YL1(##SFLOAT),AL3(0)
MAXARGVL DC    X'45C90FD9'         (I found this by trial and error)
         SPACE 1
MAXARGD  DS    0A                  Maximum flonum arg value possible
         DC    YL1(##DFLOAT),AL3(0)
         DC    X'4DC90FDA'
MAXARGVD DC    X'4DC90FDAA22168C2' (I found this by trial and error)
         SPACE 1
ERROR1   #ERR  'Argument to SIN not numeric - ',0(#11)
ERROR2   #ERR  'SIN of ',0(#11),' cannot be computed, absolute value ofX
                argument is greater than ',MAXARG
ERROR2D  #ERR  'SIN of ',0(#11),' cannot be computed, absolute value ofX
                argument is greater than ',MAXARGD
ERRORB   #ERR  'ZIL4100 SIN: Conversion of bignum ',                   X
               0(#11),' to float not supported',PREFIX=NO
         SPACE 1
         LTORG
         SPACE 1
         #ZIF
         SPACE 1
         END
