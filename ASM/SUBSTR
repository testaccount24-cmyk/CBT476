         TITLE 'SUBSTR - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* (SUBSTR ARG1 ARG2 &OPTIONAL ARG3)...                                *
*                                                                     *
*  ARG1 IS A STRING                                                   *
*  ARG2 IS A FIXNUM OR NIL   - THE 1-BASED STARTING INDEX             *
*  ARG3 IS A FIXNUM OR NIL   - THE LENGTH                             *
*                                                                     *
* IF ARG2 IS NEGATIVE, START AT -ARG2 FROM THE END OF THE STRING.     *
*                                                                     *
* ANY OUT-OF-BOUNDS ARGS RESULT IN A NULL STRING.                     *
*                                                                     *
* ARG2 MAY BE NIL (RESULTING IN A NULL STRING).  THIS FACILITATES     *
* THE USE OF SUBSTR IN CONJUNCTION WITH POSITIONING STRING FUNCTIONS  *
* (LIKE INDEX) WHICH MAY RETURN EITHER A FIXNUM OR NIL.               *
*                                                                     *
***********************************************************************
SUBSTR   #ZBEG MINARGS=1,MAXARGS=3,NAME='STRING-SUBSTR'
         #ZPDS 24                  DEFINE STACK SIZE
         #ZSAV ARGS=3              SAVE REGISTERS
         SPACE
         LM    #5,#7,0(#11)        LOAD ARGS
         CLI   ##TYPE(#5),##STRING IF ARGUMENT IS A STRING
         BE    ARG1OK              THEN OK
         CLI   ##TYPE(#5),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR1              THEN
         L     #5,##PNAME(,#5)      TAKE THE PRINT NAME, ELSE ERROR
ARG1OK   DS    0H
         XR    #4,#4
         ST    #5,0(,#11)          STORE BACK ON STACK FOR LATER USE
         CR    #6,#13              IF ARG 2 IS NOT SUPPLIED
         BE    RETNULL             THEN IT'S OK, RETURN NULL STRING
         CR    #6,#10              IF ARG 2 IS NIL
         BE    RETNULL             THEN IT'S OK, RETURN NULL STRING
         CLI   ##TYPE(#6),##FIXNUM IF ARG 2 IS NOT A FIXNUM
         BNE   ERROR2              THEN ERROR
         CR    #7,#13              IF ARG 3 IS NOT SUPPLIED
         BE    ARGSOK              THEN IT'S OK (OMITTED)
         CR    #7,#10              IF ARG 3 IS NIL
         BE    ARGSOK              THEN IT'S OK (OMITTED)
         CLI   ##TYPE(#7),##FIXNUM IF ARG 3 IS NOT A FIXNUM
         BNE   ERROR3              THEN ERROR
ARGSOK   DS    0H
         ICM   #4,7,1(#5)          GET LENGTH OF STRING
         ICM   #6,15,##CDR(#6)     GET FIXNUM VALUE
         BZ    RETNULL             IF ZERO, RETURN NULL STRING
         BP    NORMSUB             IF POSITIVE, NORMAL SUBSTRING
         AR    #6,#4               IF NEGATIVE, TAKE LENGTH MINUS ABS
         BM    RETNULL             (IF ABS GT LENGTH, RETURN NULL)
         LA    #6,1(,#6)           AND ADJUST TO MAKE IT CORRECT...
NORMSUB  DS    0H
         CR    #6,#4               IF VALUE GT STRING LENGTH
         BH    RETNULL             THEN RETURN NULL STRING
         BCTR  #6,0                CONVERT FROM 1-BASED TO 0-BASED
         LR    #3,#4               GET LENGTH OF STRING
         SR    #3,#6               MINUS STARTING = MAX SUBSTR LENGTH
         CR    #7,#13              IF ARG 3 IS NOT SUPPLIED
         BNE   ARG3SUP             THEN
         LR    #7,#3                TAKE MAX SUBSTR LENGTH
         B     GOTLEN3             ELSE
ARG3SUP  CR    #7,#10              IF ARG 3 IS NIL
         BNE   ARG3NNIL            THEN...
         LR    #7,#3                TAKE MAX SUBSTR LENGTH
         B     GOTLEN3
ARG3NNIL DS    0H                  ELSE ARG 3 SUPPLIED...
         ICM   #7,15,##CDR(#7)     GET FIXNUM VALUE
         BM    RETNULL             IF NEGATIVE, RETURN NULL STRING
GOTLEN3  DS    0H                  NOW #7 = LENGTH OF STRING TO EXTRACT
         CR    #7,#3               IF REQUESTED LENGTH EXCEEDS MAX
         BNH   *+6                  THEN...
         LR    #7,#3                 SET IT TO MAX
         LR    #2,#7               GET IT INTO REG FOR ZILVSS
         XR    #1,#1               ENTRY CODE 0 = ALLOCATE NEW SPACE
         L     #15,ZLCVSS          GET ADDRESS OF ZILVSS
         LA    #0,24(,#11)         SET CURRENT STACK POINTER FOR GC
         #BASR #14,#15             CALL ZILVSS TO CREATE A STRING
         LTR   #4,#15              IF STRING BUILD FAILED
         BZ    ERROR4              THEN ERROR
         L     #1,0(,#11)          GET POINTER TO ORIGINAL STRING
         LA    #0,##VECDAT(#6,#1)  POINT TO STRING TEXT + START OFFSET
         LA    #14,##VECDAT(,#4)   POINT TO WHERE TO MOVE STRING TEXT
         LR    #1,#7               GET LENGTH OF STRING TEXT TO MOVE
         LR    #15,#7              DESTINATION LENGTH SAME
         MVCL  #14,#0              MOVE TEXT FROM OLD STRING TO NEW
         LR    #15,#4              POINT TO NEWLY BUILT STRING
         B     RETURN              RETURN THE ATOM IN #15
         SPACE 1
RETNULL  DS    0H                  SUBSCRIPT OUT OF BOUNDS
         LA    #15,NULLSTR         RETURN NULL STRING
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
NULLSTR  DS    0A                  ALIGN NULL STRING TO FULLWORD
         DC    YL1(##STRING),AL3(0),XL4'00'  STRING ""
         SPACE 1
ERROR1   #ERR  'Argument 1 to STRING-SUBSTR not a string - ',0(#11)
ERROR2   #ERR  'Argument 2 to STRING-SUBSTR not a fixnum - ',4(#11)
ERROR3   #ERR  'Argument 3 to STRING-SUBSTR not a fixnum - ',8(#11)
ERROR4   #ERR  'ZIL4010 STRING-SUBSTR: Not enough vector/string space tX
               o build string.',PREFIX=NO
         SPACE 1
         LTORG
         END
