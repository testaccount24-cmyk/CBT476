         TITLE 'SETBRACK - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* SETBRACK takes two required arguments - both must be characters -   *
* and one optional argument.                                          *
*                                                                     *
* This function tells ZIL to use the specified characters as left     *
* and right square brackets whenever writing to a file via PRINC      *
* if tab expansion is active for that file, whether the file is a     *
* dataset or the terminal.                                            *
*                                                                     *
* Argument 1 is the character to be output for left square brackets.  *
* Argument 2 is the character to be output for right square brackets. *
*                                                                     *
* Argument 3, if specified and non-NIL, requests that the change be   *
* made to the terminal output translate table as well.  This will     *
* cause the exact characters specified to be sent to the terminal     *
* as desired.  The default is to let ZIL try to determine the best    *
* way of sending square brackets to the terminal, which may be        *
* invalid for certain kinds of terminal connections.                  *
*                                                                     *
* Use this only when you want to force ZIL to send these characters;  *
* they will end up being used for file output as well!                *
*                                                                     *
* For example, to tell ZIL to send square brackets to a VT220 which   *
* is connected to MVS via a 7171 controller, do:                      *
*                                                                     *
*  (setbrack #XAD #XBD T)  ; send "real" brackets, even to terminal   *
*                                                                     *
* For a 3278 model 4, a 3279, a 3179 or a 3180:                       *
*                                                                     *
*  (setbrack #XAD #XBD NIL); send "real" brackets, let ZIL translate  *
*                          ; to correct terminal code                 *
*                                                                     *
* For a 3278 model 2:                                                 *
*                                                                     *
*  (setbrack #XAD #XBD NIL); send "real" brackets.  There's no way    *
*                          ; to print them on the terminal, so let    *
*                          ; it display as garbage.                   *
*                                                                     *
* To restore default operation, which sends curly braces:             *
*                                                                     *
*  (setbrack #XC0 #XD0 NIL)                                           *
*                                                                     *
* Note: NIL may be omitted where specified in all examples above.     *
*                                                                     *
***********************************************************************
         SPACE
SETBRACK #ZBEG MINARGS=2,MAXARGS=3,NAME='SETBRACK'
         #ZPDS 3*4+12+0 = 24
         #ZSAV ,
         SPACE
         LM    #2,#4,0(#11)        LOAD ARGUMENTS
         CLI   ##TYPE(#2),##FIXNUM
         BNE   ERROR1              ERROR IF ARG1 IS NOT A FIXNUM
         CLI   ##TYPE(#3),##FIXNUM
         BNE   ERROR2              ERROR IF ARG2 IS NOT A FIXNUM
         L     #5,##CDR(,#2)       GET VALUE OF ARG1
         CL    #5,#SFW255          MUST BE 0 <= X <= 255
         BH    ERROR1
         L     #6,##CDR(,#3)       GET VALUE OF ARG2
         CL    #6,#SFW255          MUST BE 0 <= X <= 255
         BH    ERROR2
         STC   #5,ZLCLB            SET LEFT SQUARE BRACKET CHARACTER
         STC   #6,ZLCRB            SET RIGHT SQUARE BRACKET CHARACTER
         CR    #4,#13              IF ARG 3 SPECIFIED
         BE    DEFAULT              AND
         CR    #4,#10                ARG 3 NOT NIL
         BE    DEFAULT                THEN
         L     #14,ZLCTRMTR            GET TERMINAL OUTPUT TRANS TABLE
         STC   #5,X'AD'(,#14)      SET LEFT SQUARE BRACKET CHARACTER
         STC   #6,X'BD'(,#14)      SET RIGHT SQUARE BRACKET CHARACTER
DEFAULT  DS    0H
         LR    #15,#10             RETURN NIL
         #ZRET ,
         SPACE 1
ERROR1   DS    0H
         #ERR  'Argument 1 to SETBRACK not a valid character - ',(#2)
         SPACE 1
ERROR2   DS    0H
         #ERR  'Argument 2 to SETBRACK not a valid character - ',(#3)
         SPACE 1
         LTORG
         END
