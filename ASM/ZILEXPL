         TITLE 'ZILEXPL - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
* ZILEXPL TAKES 3 ARGUMENTS, OF WHICH ONLY THE 1ST IS REQUIRED.       *
* THE FIRST IS THE ATOM TO BE EXPLODED (SPECIFICATION OF A LIST IS    *
*  ERRONEOUS AND WILL BE FLAGGED AS AN ERROR).                        *
* THE SECOND SPECIFIES WHETHER (NON-NIL) OR NOT (NIL) TO INTERN THE   *
*  GENERATED ATOMS ON THE OBJECT LIST (NOTE DEFAULT IS NOT TO).       *
* THE THIRD SPECIFIES WHETHER (NON-NIL) OR NOT (NIL) TO SLASHIFY THE  *
*  OUTPUT AS PRIN1 WOULD.                                             *
*                                                                     *
* THE SECOND ARG MAY BE T, NIL OR A FIXNUM; IF IT IS A FIXNUM, THE    *
* EXPLOSION WILL BE A LIST OF FIXNUMS (CHARACTERS) RATHER THAN        *
* SYMBOLS.  THIS IS TO SUPPORT EXPLODEN.                              *
*                                                                     *
***********************************************************************
         SPACE
ZILEXPL  #ZBEG MINARGS=1,MAXARGS=3,NAME='ZILEXPL'
         #ZPDS 28                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
*
* CHECK INPUT ARGUMENT - MUST BE AN ATOM
*
         L     #2,0(,#11)          GET ATOM (ARG 1 TO ZILEXPL)
         TM    ##TYPE(#2),##ATOM   MUST BE AN ATOM
         BZ    ERROR1              OR ELSE
         TM    ##TYPE(#2),##VEC    MUST NOT BE A VECTOR-TYPE OBJECT
         BO    ERROR1              OR ELSE
*
* CALL ZILADMP TO DUMP THE ENTIRE ATOM INTO OUR WORK AREA.
* NOTE #2 POINTS TO OUR ATOM.
*
         OI    ZLCDFLGS,ZLCDCOPY   FORCE COPY OF TEXT DATA
         L     #15,ZLCADMP         GET ADDRESS OF ZILADMP
         L     #1,8(,#11)          SET SLASHIFY OPTION FROM ARG 3
         #BASR #14,#15             CALL ZILADMP TO DUMP ATOM
*
* FOR EACH CHARACTER IN THE DUMPED TEXT, MAKE AN ATOM OUT OF IT.
* WE GO BACKWARDS TO FACILITATE CONSING THEM TOGETHER TO MAKE A LIST.
*
         LR    #15,#10             INITIALIZE RETURN VALUE TO NIL
         LTR   #4,#0               SAVE LENGTH OF DUMPED ATOM
         BNP   RETURN              IF ZERO, RETURN NIL
         XR    #6,#6
         LR    #7,#1               POINT TO RETURNED ATOM AREA
         BCTR  #6,0                SET BXLE INCREMENT REG = -1
         BCTR  #7,0                SET UP BXLE STOP REG
         AR    #4,#7               POINT TO LAST CHAR OF DUMPED ATOM
         SPACE 1
         L     #3,4(,#11)          GET ARG 2 TO ZILEXPL
         CLI   ##TYPE(#3),##FIXNUM IF ARG 2 IS A FIXNUM
         BNE   LOOPC               THEN THIS IS EXPLODEN, ELSE EXPLODEC
         LA    #0,28(,#11)         PASS CURRENT STACK LOCATION TO CONS
         SPACE 1
LOOPN    DS    0H                  LOOP USING BXLE REGS #4, #6, #7
         XR    #3,#3               CLEAR INSERT REGISTER FOR CHARACTERS
         IC    #3,0(,#4)           GET CHARACTER FROM DUMPED ATOM
         LR    #2,#15              ARG 2 TO CONS = LIST SO FAR
         SLA   #3,3                PREPARE TO MAKE A FIXNUM OUT OF IT
         L     #15,ZLCCONS         GET ADDRESS OF ZILCONS
         LA    #1,#SFT(#3)         ARG 1 TO CONS = CHARACTER FIXNUM
         #BASR #14,#15             CALL CONS TO ADD NEW FIXNUM TO LIST
         BXH   #4,#6,LOOPN         CONTINUE UNTIL HIT START OF ATOM
         B     RETURN              THEN RETURN THE LIST
*
*                                  ELSE EXPLODE(C)
*
LOOPC    DS    0H                  LOOP USING BXLE REGS #4, #6, #7
         LR    #5,#15              SAVE POINTER TO OUTPUT LIST SO FAR
         ST    #15,24(,#11)        PUT LIST PTR ON STACK IN CASE OF GC!
         STM   #4,#7,SAVE47        SAVE VOLATILE REGS
         LA    #0,1                SET LENGTH = 1
         LR    #1,#4               POINT TO CHARACTER TO BE ATOMIZED
         L     #2,4(,#11)          SET INTERN FLAG = ARG 2 TO ZILEXPL
         LR    #3,#10              SET FORMAT FLAG = NIL
         L     #15,ZLCABLD         GET ADDRESS OF ZILABLD
         LA    #4,28(,#11)         SET CURRENT STACK POINTER FOR CONS
         #BASR #14,#15             CALL ZILABLD TO MAKE AN ATOM FROM IT
         LM    #4,#7,SAVE47        RESTORE VOLATILE REGS
         LR    #1,#15              ARG 1 TO CONS = BUILT ATOM
         LR    #2,#5               ARG 2 TO CONS = LIST SO FAR
         L     #15,ZLCCONS         GET ADDRESS OF ZILCONS
         LA    #0,28(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #BASR #14,#15             CALL CONS TO ADD NEW ATOM TO LIST
         BXH   #4,#6,LOOPC         CONTINUE UNTIL HIT START OF ATOM
******** B     RETURN              THEN RETURN THE LIST
         SPACE
RETURN   DS    0H
         SPACE
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 2
ERROR1   DS    0H
         #ERR  'Argument to be exploded by ZILEXPL cannot be a list or X
               vector-type structure - ',(#2)
         SPACE 2
SAVE47   DS    4A                  SAVE AREA
         SPACE 1
         LTORG
         END
