         TITLE 'APPEND2 - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* APPEND2: APPEND FOR EXACTLY TWO ARGUMENTS.                          *
*                                                                     *
* THE COMPILER IMPLEMENTS APPEND AS A MACRO THAT EXPANDS INTO THE     *
* REQUISITE CALLS TO APPEND2.                                         *
*                                                                     *
* UNDER THE INTERPRETER, APPEND IS A FUNCTION THAT TAKES A &REST ARG  *
* AND INVOKES APPEND2.                                                *
*                                                                     *
***********************************************************************
         SPACE 1
APPEND2  #ZBEG MINARGS=2,MAXARGS=2,NAME='APPEND2'
         SPACE 1
         #ZPDS 2*4+12+4
         #ZSAV ,
         SPACE 1
         LM    #3,#4,0(#11)        LOAD THE ARGUMENTS
         SPACE 1
         CR    #3,#10              IF LIST 1 IS NIL,
         BE    ARG1NIL             THEN GO TO RETURN LIST 2
         SPACE 1
ARG1NN   DS    0H
         LR    #6,#10              INITIALIZE RESULT TO NIL
         LA    #0,24(,#11)         SET CURRENT STACK POINTER FOR CONS
         TM    ##TYPE(#3),##ATOM   IF LIST 1 NOT A LIST
         BZ    INLOOP              THEN...
         CR    #4,#10               IF LIST 2 IS NIL,
         BNE   ERROR1               THEN...
         LR    #15,#3                RETURN LIST 1
         B     RETURN               ELSE ERROR
         SPACE 1
LOOP     DS    0H
         TM    ##TYPE(#3),##ATOM   IF (SUB)LIST 1 NOT A LIST
         BO    ERROR1              THEN ERROR
INLOOP   DS    0H
         L     #1,##CAR(,#3)       GET CAR OF (SUB)LIST 1
         LR    #2,#4               GET LIST 2 (in case it's last cons)
         L     #15,ZLCCONS         CALL CONS TO BUILD A PIECE OF THE
         #BASR #14,#15              RESULT LIST
         CR    #6,#10              IF NO RESULT YET,
         BNE   BASHEND             THEN...
         LR    #6,#15               START IT NOW FROM THIS PIECE
         ST    #6,20(,#11)          SAVE ON STACK FOR POSSIBLE GC'ING
         B     AFTBASH             ELSE...
BASHEND  ST    #15,##CDR(,#5)       BASH LAST CONS OF RESULT LIST
AFTBASH  LR    #5,#15              SET POINTER TO LAST CONS IN RESULT
         L     #3,##CDR(,#3)       GO DOWN LIST 1
         CR    #3,#10              IF END NOT REACHED YET
         BNE   LOOP                THEN CONTINUE
******** ST    #4,##CDR(,#5)       WHEN END, list 2 already bashed in
         LR    #15,#6              RETURN THE RESULT LIST
         SPACE 1
RETURN   DS    0H                  #15 CONTAINS RETURN VALUE
         #ZRET ,                   RETURN TO CALLER
         SPACE 1
ARG1NIL  LR    #15,#4              ARG 1 IS NIL:  RETURN LIST 2
         #ZRET ,                   RETURN TO CALLER
         SPACE 3
ERROR1   DS    0H                  ERROR IN ARGUMENT
         #ERR  'Argument 1 to APPEND2 not a proper list - ',0(#11)
         SPACE 1
         LTORG
         END
