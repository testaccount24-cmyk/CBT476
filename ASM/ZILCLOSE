         TITLE 'ZILCLOSE - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ZILCLOSE TAKES TWO ARGUMENTS - (1) FILE NAME, (2) FIXNUM-MODE.      *
*                                                                     *
***********************************************************************
         GBLB  &ZILXA
         #ZSYS
         SPACE 1
ZILCLOSE #ZBEG MINARGS=2,MAXARGS=2,NAME='ZILCLOSE'
         #ZPDS 2*4+12              DEFINE STACK SIZE
         #ZSAV ARGS=2              SAVE REGISTERS
         SPACE 1
         LM    #2,#3,0(#11)        LOAD ARGUMENTS
         TM    ##CDR+##MODEB3(#3),##OUTPUT  If output mode
         BO    SETOUT              then go to close output file
******** BZ    SETIN               else go to close input file
         SPACE 1
SETIN    DS    0H                  INDICATE INPUT MODE
         MVI   DDCHAR,C'I'         SET FILE NAME TO ZILI....
         L     #7,ZLCIFBAD         START SEARCHING INPUT FILE CHAIN
         B     CHKFILE
SETOUT   DS    0H                  INDICATE OUTPUT MODE
         MVI   DDCHAR,C'O'         SET FILE NAME TO ZILO....
         L     #7,ZLCOFBAD         START SEARCHING INPUT FILE CHAIN
******** B     CHKFILE
         EJECT
CHKFILE  DS    0H
*
* GET THE FILE NAME.
*
         CR    #2,#10              IF FILE NAME IS NIL
         BE    NILERROR            THEN ERROR - CANNOT CLOSE NIL
         CR    #2,#8               IF FILE NAME IS T
         BE    NILERROR            THEN ERROR - CANNOT CLOSE T
         SPACE 1
NOTNIL   DS    0H
         CLI   ##TYPE(#2),##SYMBOL IF NOT A SYMBOL
         BNE   INVALID             THEN ERROR - INVALID ARGUMENT
         XR    #4,#4               CLEAR PREVIOUS-FILE-BLOCK POINTER
*
* GET THE FILE BLOCK TO CLOSE (RETURNED IN #7).
*
         USING ZLFILBLK,#7
FILLOOP  DS    0H
         LTR   #7,#7               IF AT END OF FILE BLOCK CHAIN
         BZ    NOTFOUND            THEN FILE DOES NOT EXIST
         C     #2,ZLFATOM          IF FILE ATOMS ARE EQ
         BE    GOTIT               THEN THIS IS THE ONE
         LR    #4,#7               ELSE SAVE ADDR OF PREV FILE BLOCK
         L     #7,ZLFCHAIN         GET NEXT FILE BLOCK
         B     FILLOOP             AND CONTINUE
         SPACE 1
GOTIT    DS    0H                  #7 -> FILE, #4 -> PREV
         EJECT
*
* CLOSE THE FILE.
*
         TM    ZLFFLAG1,ZLFTERM    IF IT'S A TERMINAL FILE
         BO    NOCLOSE             THEN DON'T ISSUE CLOSE
         TM    ZLFFLAG2,ZLFOPEN    IF IT'S NOT OPEN (SOMEHOW?)
         BZ    NOCLOSE             THEN DON'T ISSUE CLOSE
         LA    #1,ZLFDCB           GET ADDRESS OF DCB FOR FILE
         TM    X'30'(#1),X'10'     IF DCB OPEN BIT IS NOT ON
         BZ    NOCLOSE             THEN DON'T ISSUE CLOSE
         ST    #1,CLOSEL           STORE ADDRESS OF DCB
         MVI   CLOSEL,X'80'        IN CLOSE PARAMETER LIST
         SPACE 1
         CLI   DDCHAR,C'O'         IF AN OUTPUT FILE
         BNE   AFTUNPUT            THEN...
*
* IF THERE IS ANY DATA PRINTED TO THE CURRENT LINE THAT HAS NOT BEEN
* SENT TO THE DATA SET BY TERPRI, WRITE OUT THE LINE NOW.
* OTHERWISE BUMP BACK THE DCB POINTER, A LA COBOL, SO THAT A LINE
* OF GARBAGE DOESN'T GET WRITTEN OUT.
*
* NOTE: THIS DOESN'T WORK FOR RECFM=V FILES - AT LEAST I HAVEN'T
* FIGURED OUT HOW TO MAKE IT WORK.  SO WE LET THE LAST RECORD
* (HOPEFULLY A NULL RECORD) GET WRITTEN OUT IN THAT CASE.
*
         TM    ZLFFLAG1,ZLFNEWLN   IF NO UNPROCESSED OUTPUT DATA
         BO    NOUNPUT              AND
         TM    ZLFFLAG2,ZLFRECV      THIS IS A RECFM=F FILE
         BO    AFTUNPUT               THEN
         L     #1,ZLFDCB+76          TAKE CURRENT RECORD POINTER
         SH    #1,ZLFDCB+82          SUBTRACT ONE LRECL
         ST    #1,ZLFDCB+76          RESET CURRENT RECORD POINTER
         B     AFTUNPUT             ELSE
NOUNPUT  DS    0H                  THERE IS UNPROCESSED OUTPUT DATA
         TM    ZLFFLAG2,ZLFRECV    IF THIS IS A RECFM=V FILE
         BZ    AFTUNPUT            THEN
         L     #1,ZLFCARD           GET ADDRESS OF START OF RECORD
         SH    #1,=H'4'             BUMP BACK TO RDW
         L     #2,ZLFCHAR           GET CURRENT CHARACTER POINTER
         LA    #2,4-1(,#2)          ADJUST BY 1, ADD 4 TO INCLUDE RDW
         SLL   #2,16                SHIFT LENGTH INTO LEFT HALF
         ST    #2,0(,#1)            STORE THE RDW
AFTUNPUT DS    0H
         SPACE 1
         AIF   (NOT &ZILXA).SKIP1
*---------------------------------SWITCH FROM CURRENT AMODE TO AMODE 24
         LA    #1,CODE24           ADDRESS OF THIS CODE
         LA    #2,CODE24E          RETURN ADDRESS
         BSM   #2,#1
CODE24   DS    0H
*---------------------------------THE AMODE IS NOW 24
.SKIP1   ANOP
         SPACE 1
         LA    #1,CLOSEL
         CLOSE MF=(E,(1))          CLOSE THE FILE
*
* FOR LIBRARY FILE, INSTEAD OF FREEPOOL FREE THE READ BUFFER.
* THAT IS, WHEN WE HAVE SUPPORT FOR LIBRARY FILES.
*
         LA    #1,ZLFDCB
         FREEPOOL (1)
         SPACE 1
         AIF   (NOT &ZILXA).SKIP2
*---------------------------------SWITCH FROM AMODE 24 TO CURRENT AMODE
         BSM   0,#2
CODE24E  DS    0H
*---------------------------------THE AMODE IS NOW SAME AS ON ENTRY
.SKIP2   ANOP
NOCLOSE  DS    0H
         EJECT
*
* NOW UNCHAIN AND FREE THIS FILE BLOCK
*
         NI    ZLFFLAG2,255-ZLFOPEN MARK FILE NOT OPEN
         ICM   #2,15,ZLFECHO       GET POINTER TO ECHO FILE BLOCK
         BZ    NOECHO              IF THERE IS ONE, THEN...
         LH    #0,ZLFECCNT-ZLFILBLK(,#2)
         BCTR  #0,0                 DECREMENT ITS ECHO REFERENCE COUNT
         STH   #0,ZLFECCNT-ZLFILBLK(,#2)
NOECHO   DS    0H
         ICM   #0,B'0011',ZLFECCNT IF ECHO REFERENCE COUNT NONZERO
         BNZ   NOFREE              THEN DON'T FREE THIS FILE BLOCK
*
* MOVE FILE CHAIN POINTER TO PREVIOUS FILE BLOCK TO CONNECT THEM
*
         L     #2,ZLFCHAIN         GET CURRENT CHAIN POINTER
         LTR   #4,#4               IF THIS WAS 1ST FILE IN CHAIN
         BNZ   RECHAIN             THEN...
         CLI   DDCHAR,C'I'          IF THIS IS AN INPUT FILE
         BNE   CHNOTIN              THEN...
         ST    #2,ZLCIFBAD           UPDATE FILE BLOCK CHAIN HEADER
         L     #4,ZLCSTDIN           POINT TO STANDARD INPUT BLOCK
         L     #6,ZLCIFTRM           POINT TO "TRUE" TERMINAL FILBLK
         B     RECHAIN              ELSE...
CHNOTIN  DS    0H                   (THIS IS AN OUTPUT FILE)...
         ST    #2,ZLCOFBAD           UPDATE FILE BLOCK CHAIN HEADER
         L     #4,ZLCSTDOU           POINT TO STANDARD INPUT BLOCK
         L     #6,ZLCOFTRM           POINT TO "TRUE" TERMINAL FILBLK
RECHAIN  DS    0H
         ST    #2,ZLFCHAIN-ZLFILBLK(,#4) CONNECT NEXT TO PREVIOUS
         LR    #1,#7               GET ADDR OF FILE BLOCK TO BE FREED
         CR    #1,#6               IF THIS IS THE "REAL" TERM FIL BLK
         BE    NOFREE              THEN DON'T FREE IT
         LH    #0,ZLCFBLEN         GET LENGTH OF FILE BLOCK
         FREEMAIN R,LV=(0),A=(1)   FREE THE FILE BLOCK
NOFREE   DS    0H
         SPACE 1
         LR    #15,#10             RETURN NIL
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
NILERROR DS    0H
         SPACE 1
         #ERR  'ZIL0022 CLOSE: File is not closable - ',0(#11),PREFIX=NX
               O
         SPACE 1
INVALID  DS    0H
         SPACE 1
         #ERR  'ZIL0009 CLOSE: File name not a 1-4 character symbol - 'X
               ,0(#11),PREFIX=NO
         SPACE 1
NOTFOUND DS    0H
         SPACE 1
         CLI   DDCHAR,C'I'
         BNE   ERRNOTCI
         LA    #2,$INPUT
         B     ERR23
ERRNOTCI LA    #2,$OUTPUT
ERR23    #ERR  'ZIL0023 CLOSE: Not a currently open ',                 X
               (#2),                                                   X
               ' file - ',                                             X
               0(#11),                                                 X
               PREFIX=NO
         DS    0H,XL1              Align string to non-halfword
$INPUT   #SATM 'input'
         DS    0H,XL1              Align string to non-halfword
$OUTPUT  #SATM 'output'
         EJECT
DDCHAR   DC    C' '                I (FOR INPUT), OR O (FOR OUTPUT)
         SPACE 2
CLOSEL   CLOSE (*-*),MF=L          LIST FORM FOR CLOSE
         EJECT
         LTORG
         EJECT
         #ZMODES ,                 Equate OPEN/CLOSE file modes
         END
