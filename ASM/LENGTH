         TITLE 'LENGTH - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* LENGTH TAKES ONE ARGUMENT - A PROPER LIST                           *
*                                                                     *
* IF THE LIST IS CIRCULAR LENGTH WILL LOOP INDEFINITELY.              *
*                                                                     *
* We assume that a list cannot be longer than 2147483647 elements,    *
* and therefore that fixed-point overflow is impossible.  This        *
* allows us to use BCT to compute the length (clever, eh?).           *
*                                                                     *
***********************************************************************
LENGTH   #ZBEG MINARGS=1,MAXARGS=1,NAME='LENGTH'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ARGS=1              SAVE REGISTERS
         SPACE
         L     #3,0(,#11)          LOAD FIRST (AND ONLY) ARGUMENT
         XR    #2,#2               INITIALIZE (MINUS LENGTH) TO ZERO
         SPACE
LOOP     DS    0H
         CR    #3,#10              WHEN NIL FOUND, EXIT LOOP
         BE    ENDLOOP
         TM    ##TYPE(#3),##ATOM   IF ATOM OR DOTTED PAIR
         BO    ERROR               THEN INVALID LIST
         L     #3,##CDR(,#3)       (SETQ LIST (CDR LIST))
         BCT   #2,LOOP             CONTINUE
ENDLOOP  DS    0H                  #2 contains (minus length)
         LCR   #2,#2               Make length positive
         CL    #2,ZLCSFTHI         If length within small fixnum range
         BNH   SMALLFIX            then go return a small fixnum
*                                  Else must cons up a fixnum
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FIXED               MAKE A FIXNUM
         B     RETURN               and return with it
SMALLFIX DS    0H                  Length is within small fixnum range
         SLA   #2,3                Convert length to index into fixnums
         LA    #15,#SFT(#2)        Get fixnum from table
RETURN   DS    0H                  RETURN WITH NEW ATOM
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
ERROR    DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument to LENGTH not a proper list - ',0(#11)
         SPACE 1
         LTORG
         END
