         TITLE 'ZILTERM - ZIL TERMINATION MODULE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS MODULE IS INVOKED VIA LINK FROM THE MAINLINE MODULE ZILMAIN    *
* WHENEVER A COMPILED LISP MODULE IS FINISHED.  IT FREES THE STORAGE  *
* ALLOCATED BY ZILINIT, CLOSES ALL RELEVANT FILES, AND HANDLES ANY    *
* OTHER CLEANUP FUNCTIONS THAT MAY BE REQUIRED.                       *
*                                                                     *
***********************************************************************
         GBLB  &ZILXA
         #ZSYS
         #ZEQU
ZILTERM  CSECT
         AIF   (NOT &ZILXA).NOMODES
ZILTERM  RMODE 24
ZILTERM  AMODE 31
.NOMODES ANOP
         SAVE  (14,12),,ZILTERM_&SYSDATE._&SYSTIME
         LR    #12,#15             SET UP BASE REGISTER
         L     #1,8(,#13)          CHAIN TO COMMON AREA
         ST    #13,4(,#1)
         LR    #13,#1
         USING ZILTERM,#12
         USING ZLCOMMON,#13
         USING ZLFILBLK,#7
         SPACE 1
         OI    ZLCEFLGS,ZLCETERM   INDICATE TERMINATION IN PROGRESS
*
* CANCEL ESTAE AND/OR STAX ENVIRONMENTS IF ANY.
* (CAN'T CANCEL ESTAE FROM THIS RB, SO DON'T EVEN TRY)
*
*        TM    ZLCEFLGS,ZLCESTAE
*        BZ    NOESTAE
*        ESTAE 0                   CANCEL ABEND HANDLER
*OESTAE  DS    0H
         TM    ZLCEFLGS,ZLCESTAX
         BZ    NOSTAX
         STAX  ,                   CANCEL ATTENTION HANDLER
NOSTAX   DS    0H
*
* FREE FORTRAN INTERFACE IF ANY.
*
         ICM   #1,15,ZLCFTCBA      IF FORTRAN INTERFACE ROUTINE PRESENT
         BZ    NOFTCB              THEN
         ICM   #15,15,ZLCFINT
         BZ    NOFTCB
         XR    #1,#1                SET FLAG TO CLEAN UP
         #BASR #14,#15              CALL ZILFINT TO CLEAN UP INTERFACE
NOFTCB   DS    0H
*
* FREE GC WORK AREA IF ANY.
*
         ICM   #1,15,ZLCGCBVA
         BZ    NOFRGCWA
         L     #0,ZLCGCBVL
         FREEMAIN RU,LV=(0),A=(1)
NOFRGCWA DS    0H
*
* FREE "MASTER VECTOR" OF INLINE COMPILED CODE POINTERS IF ANY
*
         ICM   #1,15,ZLCICPA
         BZ    NOFRICPA
         L     #0,ZLCICPL
         FREEMAIN RU,LV=(0),A=(1)
NOFRICPA DS    0H
*
* FREE ZILADMP WORK AREA IF ANY.
*
         ICM   #1,15,ZLCDWA
         BZ    NOFRDWA
         L     #0,ZLCDWALN
         FREEMAIN R,LV=(0),A=(1)
NOFRDWA  DS    0H
*
* FREE PRINC/REFORMAT WORK AREA IF ANY.
*
         ICM   #1,15,ZLCTWA
         BZ    NOFRTWA
         L     #0,ZLCTWALN
         FREEMAIN R,LV=(0),A=(1)
NOFRTWA  DS    0H
*
* FREE ZIL WORK AREA IF ANY.
*
         ICM   #1,15,ZLCWA
         BZ    NOFRWA
         L     #0,ZLCWALEN
         FREEMAIN R,LV=(0),A=(1)
NOFRWA   DS    0H
*
* DELETE READ TABLE(S) IF ANY.
*
         ICM   #1,15,ZLCRDTBL
         BZ    NOFRDTBL
         LA    #0,256
         FREEMAIN RU,LV=(0),A=(1)
NOFRDTBL DS    0H
*
* FREE TERMINAL OUTPUT TRANSLATE TABLE IF ANY.
*
         ICM   #1,15,ZLCTRMTR
         BZ    NOFREETT
         LA    #0,256
         FREEMAIN RU,LV=(0),A=(1)
NOFREETT DS    0H
*
* CLOSE DRIBBLE FILE IF ALLOCATED.
*
         ICM   #4,15,ZLCDRIBL
         BZ    NODRIB
         TM    X'30'(#4),X'10'
         BZ    NODRIB
         ST    #4,CLOSEL
         MVI   CLOSEL,X'80'
         AIF   (NOT &ZILXA).SKIP1
*---------------------------------SWITCH FROM CURRENT AMODE TO AMODE 24
         LA    #1,DRIB24           ADDRESS OF THIS CODE
         LA    #2,DRIB24E          RETURN ADDRESS
         BSM   #2,#1
DRIB24   DS    0H
*---------------------------------THE AMODE IS NOW 24
.SKIP1   ANOP
         LA    #1,CLOSEL
         CLOSE MF=(E,(1))
         AIF   (NOT &ZILXA).SKIP2
*---------------------------------SWITCH FROM AMODE 24 TO CURRENT AMODE
         BSM   0,#2
DRIB24E  DS    0H
*---------------------------------THE AMODE IS NOW SAME AS ON ENTRY
.SKIP2   ANOP
         LR    #1,#4               GET ADDRESS OF THE DRIBBLE DCB
         LA    #0,96               GET LENGTH OF THE DRIBBLE DCB
         FREEMAIN R,LV=(0),A=(1)   FREE THE DCB
NODRIB   DS    0H
*
* CLOSE ALL OPEN FILES.
*
         L     #5,ZLCSTDIN
         L     #6,ZLCSTDOU
*
* CLOSE ALL OPEN INPUT FILES.
*
CLOSEIN  DS    0H
         LR    #7,#5
CINLOOP  DS    0H
         LTR   #7,#7
         BZ    CLOSEOUT
         TM    ZLFFLAG1,ZLFTERM
         BO    NOCLOSEI
         TM    ZLFFLAG2,ZLFOPEN
         BZ    NOCLOSEI
         LA    #1,ZLFDCB
         TM    X'30'(#1),X'10'
         BZ    NOCLOSEI
         ST    #1,CLOSEL
         MVI   CLOSEL,X'80'
         AIF   (NOT &ZILXA).SKIP3
*---------------------------------SWITCH FROM CURRENT AMODE TO AMODE 24
         LA    #1,CLOSI24          ADDRESS OF THIS CODE
         LA    #2,CLOSI24E         RETURN ADDRESS
         BSM   #2,#1
CLOSI24  DS    0H
*---------------------------------THE AMODE IS NOW 24
.SKIP3   ANOP
         LA    #1,CLOSEL
         CLOSE MF=(E,(1))
*
* FOR LIBRARY FILE, INSTEAD OF FREEPOOL FREE THE READ BUFFER.
* THAT IS, WHEN WE HAVE SUPPORT FOR LIBRARY FILES.
*
         LA    #1,ZLFDCB
         FREEPOOL (1)
         AIF   (NOT &ZILXA).SKIP4
*---------------------------------SWITCH FROM AMODE 24 TO CURRENT AMODE
         BSM   0,#2
CLOSI24E DS    0H
*---------------------------------THE AMODE IS NOW SAME AS ON ENTRY
.SKIP4   ANOP
NOCLOSEI DS    0H
         LR    #1,#7
         L     #7,ZLFCHAIN
         C     #1,ZLCIFTRM         DON'T FREE IF IT'S THE TERM FILBLK
         BE    CINLOOP
         LH    #0,ZLCFBLEN         FREE THE FILE BLOCK
         FREEMAIN R,LV=(0),A=(1)
         B     CINLOOP
*
* CLOSE ALL OPEN OUTPUT FILES.
*
CLOSEOUT DS    0H
         LR    #7,#6
COUTLOOP DS    0H
         LTR   #7,#7
         BZ    FINISHED
         TM    ZLFFLAG1,ZLFTERM
         BO    NOCLOSEO
         TM    ZLFFLAG2,ZLFOPEN
         BZ    NOCLOSEO
         LA    #1,ZLFDCB
         TM    X'30'(#1),X'10'
         BZ    NOCLOSEO
         ST    #1,CLOSEL
         MVI   CLOSEL,X'80'
*
* IF THERE IS ANY DATA PRINTED TO THE CURRENT LINE THAT HAS NOT BEEN
* SENT TO THE DATA SET BY TERPRI, WRITE OUT THE LINE NOW.
* OTHERWISE BUMP BACK THE DCB POINTER, A LA COBOL, SO THAT A LINE
* OF GARBAGE DOESN'T GET WRITTEN OUT.
*
* NOTE: THIS DOESN'T WORK FOR RECFM=V FILES - AT LEAST I HAVEN'T
* FIGURED OUT HOW TO MAKE IT WORK.  SO WE LET THE LAST RECORD
* (HOPEFULLY A NULL RECORD) GET WRITTEN OUT IN THAT CASE.
*
         TM    ZLFFLAG1,ZLFNEWLN   IF NO UNPROCESSED OUTPUT DATA
         BO    NOUNPUT              AND
         TM    ZLFFLAG2,ZLFRECV      THIS IS A RECFM=F FILE
         BO    AFTUNPUT               THEN
         L     #1,ZLFDCB+76          TAKE CURRENT RECORD POINTER
         SH    #1,ZLFDCB+82          SUBTRACT ONE LRECL
         ST    #1,ZLFDCB+76          RESET CURRENT RECORD POINTER
         B     AFTUNPUT             ELSE
NOUNPUT  DS    0H                  THERE IS UNPROCESSED OUTPUT DATA
         TM    ZLFFLAG2,ZLFRECV    IF THIS IS A RECFM=V FILE
         BZ    AFTUNPUT            THEN
         L     #1,ZLFCARD           GET ADDRESS OF START OF RECORD
         SH    #1,=H'4'             BUMP BACK TO RDW
         L     #2,ZLFCHAR           GET CURRENT CHARACTER POINTER
         LA    #2,4-1(,#2)          ADJUST BY 1, ADD 4 TO INCLUDE RDW
         SLL   #2,16                SHIFT LENGTH INTO LEFT HALF
         ST    #2,0(,#1)            STORE THE RDW
AFTUNPUT DS    0H
         AIF   (NOT &ZILXA).SKIP5
*---------------------------------SWITCH FROM CURRENT AMODE TO AMODE 24
         LA    #1,CLOSO24          ADDRESS OF THIS CODE
         LA    #2,CLOSO24E         RETURN ADDRESS
         BSM   #2,#1
CLOSO24  DS    0H
*---------------------------------THE AMODE IS NOW 24
.SKIP5   ANOP
         LA    #1,CLOSEL
         CLOSE MF=(E,(1))
*
* FOR LIBRARY FILE, INSTEAD OF FREEPOOL FREE THE READ BUFFER.
* THAT IS, WHEN WE HAVE SUPPORT FOR LIBRARY FILES.
*
         LA    #1,ZLFDCB
         FREEPOOL (1)
         AIF   (NOT &ZILXA).SKIP6
*---------------------------------SWITCH FROM AMODE 24 TO CURRENT AMODE
         BSM   0,#2
CLOSO24E DS    0H
*---------------------------------THE AMODE IS NOW SAME AS ON ENTRY
.SKIP6   ANOP
NOCLOSEO DS    0H
         LR    #1,#7
         L     #7,ZLFCHAIN
         C     #1,ZLCOFTRM         DON'T FREE IF IT'S THE TERM FILBLK
         BE    COUTLOOP
         LH    #0,ZLCFBLEN
         FREEMAIN R,LV=(0),A=(1)
         B     COUTLOOP
FINISHED DS    0H
*
* IF THERE'S "REAL" TERMINAL INPUT OR OUTPUT FILE BLOCK(S),
* THEN FREE THEM NOW.  WE HAVE TO DO IT HERE BECAUSE MAYBE A
* TERMINAL FILE WAS EXPLICITLY CLOSED, LEAVING THIS STRANDED.
*
         ICM   #1,15,ZLCIFTRM
         BZ    NOFREEIF
         LH    #0,ZLCFBLEN
         FREEMAIN R,LV=(0),A=(1)
NOFREEIF DS    0H
         ICM   #1,15,ZLCOFTRM
         BZ    NOFREEOF
         LH    #0,ZLCFBLEN
         FREEMAIN R,LV=(0),A=(1)
NOFREEOF DS    0H
*
* DELETE LOADED MODULES.
*
         DELETE EP=ZILSUBS         DELETE SUBROUTINE MODULE
*
* NOW WE ARE REALLY FINISHED.
*
         L     #1,ZLC31ADR         GET ADDRESS OF 31-BIT AREA
         L     #0,ZLC31SIZ         GET LENGTH OF 31-BIT AREA
         FREEMAIN RU,LV=(0),A=(1)  FREE IT UP
         SPACE 1
         L     #1,ZLC24ADR         FREE ALL REMAINING 24-BIT STORAGE
         L     #0,ZLC24SIZ
         L     #13,4(,#13)         RESTORE SAVE AREA
         FREEMAIN RU,LV=(0),A=(1)
         SPACE 1
         LM    #14,#12,12(#13)     RESTORE REGISTERS
         XR    #15,#15
         BR    #14                 RETURN TO MAIN LINE CODE
         SPACE
CLOSEL   CLOSE (*-*),MF=L
         SPACE
         LTORG
         SPACE
         #ZCOM ,                   MAP THE COMMON AREA
         END
