         TITLE 'SREVERSE - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* (STRING-REVERSE ARG1)                                               *
*                                                                     *
* THIS FUNCTION REVERSES A STRING.                                    *
*                                                                     *
* STRING-RIGHT-TRIM USES THIS FUNCTION.  OTHERWISE IT'S RATHER DUMB.  *
*                                                                     *
***********************************************************************
         SPACE 1
SREVERSE #ZBEG MINARGS=1,MAXARGS=1,NAME='STRING-REVERSE'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         L     #15,0(,#11)         LOAD ARG1
         CLI   ##TYPE(#15),##STRING IF ARGUMENT IS A STRING
         BE    ARG1OK              THEN OK
         CLI   ##TYPE(#15),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR1              THEN
         L     #15,##PNAME(,#15)    TAKE THE PRINT NAME, ELSE ERROR
ARG1OK   DS    0H
         XR    #2,#2               CLEAR INSERT REGISTER
         ST    #15,0(,#11)         STORE BACK ON STACK FOR LATER USE
         ICM   #2,7,1(#15)         GET LENGTH OF STRING FOR ZILVSS
         BZ    RETURN              IF NULL STRING, RETURN SELF
         CH    #2,=H'1'
         BNH   RETURN              IF STRING LENGTH 1 OR LESS, RET SELF
         XR    #1,#1               ENTRY CODE 0 = ALLOCATE NEW SPACE
         L     #15,ZLCVSS          GET ADDRESS OF ZILVSS
         LA    #0,16(,#11)         SET CURRENT STACK POINTER FOR GC
         #BASR #14,#15             CALL ZILVSS TO CREATE A STRING
         LTR   #15,#15             IF STRING BUILD FAILED
         BZ    ERROR2              THEN ERROR
         L     #5,0(,#11)          GET POINTER TO ORIGINAL STRING
         XR    #2,#2               CLEAR INSERT REGISTER
         LA    #1,##VECDAT(,#5)    POINT TO FIRST CHAR IN OLD STRING
         ICM   #2,7,1(#5)          GET LENGTH OF STRING
         LA    #5,##VECDAT-1(#15,#2) POINT TO LAST CHAR OF NEW STRING
         AR    #2,#1               POINT TO END OF OLD STRING
         LA    #3,##VECDAT(,#15)   POINT TO BEGINNING OF NEW STRING
         LA    #4,1                SET BXLE INCREMENT REGISTER
LOOP     DS    0H
         BCTR  #2,0                BUMP TO PREVIOUS CHAR IN OLD STRING
         MVC   0(1,#3),0(#2)       MOVE OLD CHARACTER TO NEW CHARACTER
         BXLE  #3,#4,LOOP
ENDLOOP  DS    0H
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
ERROR1   #ERR  'Argument to STRING-REVERSE not a string - ',0(#11)
ERROR2   #ERR  'ZIL4010 STRING-REVERSE: Not enough vector/string space X
               to build string',PREFIX=NO
         SPACE 1
         LTORG
         END
