         TITLE 'ABS - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ABS TAKES ONE ARGUMENT - A FIXNUM, FLONUM OR BIGNUM                 *
*                                                                     *
***********************************************************************
ABS      #ZBEG MINARGS=1,MAXARGS=1,NAME='ABS'
         #ZPDS 16
         #ZSAV ,
         SPACE
         L     #15,0(,#11)         GET THE ARG
         CLI   0(#15),##FIXNUM
         BE    ABSFIX
         CLI   0(#15),##SFLOAT
         BE    ABSFLO
         CLI   0(#15),##BIGNUM
         BE    ABSBIG
         CLI   0(#15),##DFLOAT
         BE    ABSDFLO
         B     ERROR
         SPACE 1
ABSFIX   DS    0H                  ABS OF A FIXNUM
         SPACE 1
         ICM   #2,15,##CDR(#15)    GET FIXNUM VALUE
         BNM   RETURN              IF NOT NEGATIVE, RETURN SELF
         LPR   #2,#2               MAKE IT POSITIVE
         BO    FIXOVFLO            IF OVERFLOW, MUST HAVE BEEN -2**31
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FIXED               MAKE A FIXNUM
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RETURN WITH VALUE
         SPACE 1
ABSFLO   DS    0H                  ABS OF A FLONUM
         SPACE 1
         TM    ##CDR(#15),X'80'    IF ALREADY NONNEGATIVE
         BZ    RETURN              THEN RETURN WITH SAME ATOM
         LE    #F2,##CDR(,#15)     GET FLONUM VALUE
         LPER  #F2,#F2             MAKE IT POSITIVE
         STE   #F2,ZLCWORK
         L     #2,ZLCWORK
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FLOAT               MAKE A FLONUM
         B     RETURN              AND RETURN WITH IT
         SPACE 1
ABSBIG   DS    0H                  ABS OF A BIGNUM
         SPACE 1
         TM    ##VECDAT(#15),X'80' IF ALREADY NONNEGATIVE
         BZ    RETURN              THEN RETURN WITH SAME ATOM
         XR    #2,#2               CLEAR INSERT REGISTER
         ICM   #2,7,1(#15)         GET BIGNUM LENGTH
         LA    #2,4(,#2)           PLUS LENGTH OF HEADER
         LR    #3,#2               SAVE THIS LENGTH
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         L     #15,ZLCBIG          GET ADDRESS OF BIGNUM MAKER
         #BASR #14,#15             CALL ZILBIG
         LR    #4,#15              SAVE ADDRESS OF NEW BIGNUM
         LR    #0,#4               DESTINATION ADDRESS
         L     #14,0(,#11)         SOURCE ADDRESS
         LR    #1,#3               DESTINATION LENGTH
         LR    #15,#3              SOURCE LENGTH
         MVCL  #0,#14              MOVE OLD BIGNUM TO NEW BIGNUM
         ST    #0,ZLCVSNXT         UPDATE V/S-SPACE POINTER
         LR    #15,#4              GET ADDRESS OF BIGNUM AGAIN
         NI    ##VECDAT(#15),X'7F' TURN OFF SIGN BIT TO MAKE IT PPLUS
         B     RETURN
         SPACE 1
FIXOVFLO DS    0H
         LA    #15,P2TO31          RETURN BIGNUM +2**31
         B     RETURN
         SPACE 1
ABSDFLO  DS    0H                  ABS OF A DOUBLE-FLOAT
         SPACE 1
         TM    8(#15),X'80'        IF ALREADY NONNEGATIVE
         BZ    RETURN              THEN RETURN WITH SAME ATOM
         LD    #F0,8(,#15)         GET FLONUM VALUE
         LPDR  #F0,#F0             MAKE IT POSITIVE
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         L     #15,ZLCMDF          GET ADDRESS OF ZILMDF
         #BASR #14,#15             CALL ZILMDF TO CONS UP DOUBLE FLOAT
         B     RETURN              RETURN WITH NEW DOUBLE FLONUM OBJECT
         SPACE 1
P2TO31   DS    0A                  ALIGN BIGNUM TO FULLWORD
         DC    YL1(##BIGNUM),AL3(8),F'0,1'   BIGNUM 2**31
ERROR    DS    0H
         #ERR  2,'Argument to ABS not numeric - ',0(#11)
         SPACE 1
         LTORG
         END
