         TITLE 'ZILMDF - ZIL 1.3 DOUBLE FLOAT CONSING ROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* This subroutine conses up a double-float.                           *
* On entry, FPR0 contains the double-float value.                     *
*           GPR0 is set for CONS as usual (stack pointer).            *
* On exit, GPR15 points to the newly consed flonum object.            *
*                                                                     *
* This routine uses and destroys registers 14 thru 4.                 *
*                                                                     *
* Note:  #15 is the base reg throughout, except when an error must    *
*        be signalled for floating-point overflow, or when CONSing.   *
*                                                                     *
***********************************************************************
*                                                                     *
* The format of a double-float is:                                    *
*                                                                     *
*  (assuming a flonum with hex contents 4218ababcdcdefef)             *
*                                                                     *
*  A8000000 4218abab 4218abab cdcdefef                                *
*                                                                     *
* Note that the left half of the flonum is duplicated in the second   *
* word (word 1) of the object.  This enables fast MINUSP/ZEROP hacks. *
* If you ever decide to stop doing that, you'll have to change the    *
* functions like MINUSP that depend on that hack.                     *
*                                                                     *
***********************************************************************
         SPACE 1
         #ZEQU
         #ZCOM
         USING ZLCOMMON,#13
ZILMDF   CSECT
         SPACE 1
         USING ZILMDF,#15
         SPACE 1
FDFRETRY DS    0H
         SPACE 1
         LM    #1,#3,ZLCVSADR      #1 = ADR, #2 = LEN, #3 = NXT
         LA    #4,16(,#3)          Point past end of new object
         AR    #2,#1               Compute address of end of VSS
         CR    #4,#2               If we don't have room
         BH    FDFNORM             then we can't build it just yet
         MVC   0(4,#3),HEADER      Set type bits and zeroes in word 0
         STE   #F0,4(,#3)          Store sign info, etc. in word 1
         STD   #F0,8(,#3)          Store double-float
         LR    #15,#3              Else get pointer to slot
         ST    #4,ZLCVSNXT         Update next-VSS-slot pointer
         BR    #14                 Return with double float
         SPACE 1
         DS    0A
HEADER   DC    YL1(##DFLOAT),AL3(0) Header for double float
         SPACE 1
FDFNORM  DS    0H                  No room to cons up new object yet
         SPACE 1
         LTR   #0,#0               If we already tried to get more room
         BZ    ERRORG              then error
         L     #9,ZLCGCEND         Else force end of "free list"
         LR    #1,#10              Set dummy arg 1 to CONS = NIL
         LR    #2,#10              Set dummy arg 2 to CONS = NIL
         LR    #3,#15              Save base register
         LR    #4,#14              Save return register
         L     #15,ZLCCONS         Get address of ZILCONS
         #BASR #14,#15             Call CONS to force a GC
         LR    #15,#3              Restore base register
         LR    #14,#4              Restore return register
         XR    #0,#0               Clear #0 to prevent another GC
         B     FDFRETRY            and try it again
         SPACE 1
ERRORG   DS    0H                  Not enougn VSS to cons up flo-obj
         SPACE 1
***********************************************************************
*                                                                     *
* For the purposes of this routine (and laziness), we assume that     *
* the only callers thereof will have a "normal" function header       *
* and a function name of reasonable length (i.e. 24 bytes or less).   *
*                                                                     *
***********************************************************************
         SPACE 1
         MVC   Z+4(24),5(#12)      Move caller's name to fake string
         XR    #0,#0
         IC    #0,4(,#12)          Get length of function name
         SH    #0,=H'16'
         STCM  #0,7,Z+1            Store length of function name
         LR    #4,#15
         DROP  #15
         USING ZILMDF,#4
         #ERR  'ZIL4103 ',Z,': Not enough vector/string space to build X
               double-float.',PREFIX=NO
         SPACE 1
         DS    0H,XL1              Align to non-halfword boundary
Z        DC    YL1(##STRING),AL3(0) Place to build function name string
         DS    CL24
         SPACE 1
         LTORG
         SPACE 1
         END
