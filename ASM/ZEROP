         TITLE 'ZEROP - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ZEROP TAKES ONE ARGUMENT - A NUMERIC ATOM                           *
*                                                                     *
***********************************************************************
ZEROP    #ZBEG MINARGS=1,MAXARGS=1,NAME='ZEROP'
         SPACE 1
         L     #2,0(,#1)           LOAD FIRST (AND ONLY) ARGUMENT
         CLI   ##TYPE(#2),##FIXNUM TEST TYPE BITS
         BE    PROCESS             OK IF FIXNUM
         BH    FALSE               ONLY A BIGNUM CAN BE HIGHER IN TYPE
*                                  AND A BIGNUM CAN NEVER BE ZERO
*                                  SO IF IT'S A BIGNUM, RETURN FALSE
         TM    ##TYPE(#2),##FLONUM OK IF FLONUM
         BNO   ERROR               ALL OTHERS: ERROR
PROCESS  DS    0H
*
* THE FOLLOWING TEST WORKS FOR FIXNUMS AND FLONUMS.
* It works for double floats only because ZILMDF duplicates the left
* half of the flonum when it builds one (and so does the compiler).
* If anyone changes that behavior, this code must be changed.
*
         ICM   #1,15,##CDR(#2)     GET FIXNUM OR FLONUM VALUE
         BZ    TRUE                IF NONZERO RETURN NIL
FALSE    LR    #15,#10             IF NONZERO, RETURN NIL
         BR    #14
TRUE     LR    #15,#8              IF ZERO, RETURN T
         BR    #14
         SPACE 1
ERROR    DS    0H                  NOT A NUMERIC ATOM
         LR    #3,#15
         DROP  #15
         USING ZEROP,#3
         #ERR  'Argument to ZEROP not numeric - ',(#2)
         SPACE 1
         LTORG
         END
