         TITLE 'ZILEQUAL - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS IS THE "=" FUNCTION.                                           *
*                                                                     *
* "EQUALP" CALLS THIS FUNCTION TO COMPARE ATOMS.                      *
*                                                                     *
***********************************************************************
*                                                                     *
* CONVERSION RULES ARE AS FOLLOWS:                                    *
*                                                                     *
* 1. BOTH ARGS FIXED         - PERFORM INTEGER COMPARISON.            *
* 2. BOTH ARGS FLOAT         - PERFORM REAL COMPARISON.               *
* 3. ONE FIXED, ONE FLOAT    - CONVERT THE FIXED ARGUMENT TO          *
*                              FLOAT AND PERFORM REAL COMPARISON.     *
* 7. BOTH ARGS ALPHA         - PERFORM CHARACTER COMPARISON.          *
* 8. ONE ALPHA, ONE NUMERIC  - SIGNALS AN ERROR.                      *
*                                                                     *
* ANY OTHER TYPES SIGNAL AN ERROR.                                    *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS MODULE IS NOT RECURSIVE AND USES NO STACK SPACE.               *
*                                                                     *
***********************************************************************
*                                                                     *
* SUPPORT FOR STRING AND SYMBOL COMPARES.  THE FOLLOWING COMPARISONS  *
*            ARE LEGAL:                                               *
*                                                                     *
*  SYMBOL TO SYMBOL                                                   *
*  STRING TO STRING                                                   *
*  SYMBOL TO STRING                                                   *
*  STRING TO SYMBOL                                                   *
*                                                                     *
* ALL MAY BE REMOVED FOR FULL COMMON LISP.                            *
*                                                                     *
***********************************************************************
         SPACE
ZILEQUAL #ZBEG MINARGS=2,MAXARGS=2,NAME='ZILEQUAL'
         SPACE
         LR    #3,#15
         DROP  #15
         USING ZILEQUAL,#3
         SPACE
         LM    #1,#2,0(#1)         LOAD ARGUMENTS
         CR    #1,#2               IF ARGS ARE "EQ"
         BE    TRUE                THEN RETURN T
*
* CHECK TYPE OF ARG 1
*
         CLI   ##TYPE(#1),##FIXNUM
         BE    ARG1FIX
         CLI   ##TYPE(#1),##SFLOAT
         BE    ARG1SFLO
         CLI   ##TYPE(#1),##BIGNUM
         BE    ARG1BIG
         CLI   ##TYPE(#1),##DFLOAT
         BE    ARG1DFLO
*
*--- DELETE THIS CODE FOR FULL COMMON LISP
*
         CLI   ##TYPE(#1),##STRING
         BE    ARG1STR
         CLI   ##TYPE(#1),##SYMBOL
         BE    ARG1ALF
*
*--- END OF CODE TO BE DELETED FOR FULL COMMON LISP
*
         B     ERROR               ALL OTHER TYPES SIGNAL ERROR.
         SPACE
ARG1FIX  DS    0H                  ARG 1 IS FIXED
         SPACE
         L     #0,##CDR(,#1)       GET FIXED VALUE 1
*
* CHECK TYPE OF ARG 2
*
         CLI   ##TYPE(#2),##FIXNUM
         BE    COMFIX              FIXED - FIXED = OK
         CLI   ##TYPE(#2),##SFLOAT
         BE    FIXPSFLO            FIXED - SFLOAT = OK
         CLI   ##TYPE(#2),##DFLOAT
         BE    FIXPDFLO            FIXED - DFLOAT = OK
         CLI   ##TYPE(#2),##BIGNUM
         BE    FALSE               FIXED - BIGNUM = FALSE
         CR    #2,#10              Special case for Macsyma:
         BE    FALSE               FIXED - NIL = FALSE
         B     ERROR               ALL OTHERS - ALWAYS ERROR
         SPACE
COMFIX   DS    0H                  COMPARE TWO FIXNUMS
         C     #0,##CDR(,#2)       TEST FOR EQUALITY
         BE    TRUE
         B     FALSE
         SPACE
FIXPSFLO DS    0H                  FIXED VALUE 1 ALREADY IN #0
         LR    #7,#14              SAVE RETURN ADDRESS
         #BAS  #14,FIX2FLO         CONVERT FIXED TO FLOAT
         LR    #14,#7              RESTORE RETURN ADDRESS
         LRER  #F2,#F0             GET FLOAT VALUE 1
         B     COMSFLO1            COMPARE FIXED TO SINGLE FLOAT
         SPACE
FIXPDFLO DS    0H                  FIXED VALUE 1 ALREADY IN #0
         LR    #7,#14              SAVE RETURN ADDRESS
         #BAS  #14,FIX2FLO         CONVERT FIXED TO FLOAT
         LR    #14,#7              RESTORE RETURN ADDRESS
         LDR   #F2,#F0             GET FLOAT VALUE 1
         B     COMDFLO1            COMPARE FIXED TO DOUBLE FLOAT
         SPACE
ARG1SFLO DS    0H                  ARG 1 IS SINGLE FLOAT
         SPACE
*
* CHECK TYPE OF ARG 2
*
         CLI   ##TYPE(#2),##SFLOAT
         BE    SCOMSFL1            SFLOAT - SFLOAT = OK
         CLI   ##TYPE(#2),##DFLOAT
         BE    SCOMDFL1            SFLOAT - DFLOAT = OK
         CLI   ##TYPE(#2),##FIXNUM
         BE    SFLOPFIX            SFLOAT - FIXED = OK
         CLI   ##TYPE(#2),##BIGNUM
         BE    WARNBF              SFLOAT - BIGNUM = ???
         CR    #2,#10              Special case for Macsyma:
         BE    FALSE               SFLOAT - NIL = FALSE
         B     ERROR               ALL OTHERS - ALWAYS ERROR
SFLOPFIX LE    #F2,##CDR(,#1)      GET FLOAT VALUE 1
         L     #0,##CDR(,#2)       GET FIXED VALUE 2
         LR    #7,#14              SAVE RETURN ADDRESS
         #BAS  #14,FIX2FLO         CONVERT FIXED TO FLOAT
         LR    #14,#7              RESTORE RETURN ADDRESS
         LRER  #F4,#F0             GET FLOAT VALUE 2
         B     COMSFLO2            FLOAT - FIXED = FLOAT
         EJECT
ARG1DFLO DS    0H                  ARG 1 IS DOUBLE FLOAT
         SPACE
         LD    #F2,8(,#1)          GET FLOAT VALUE 1
*
* CHECK TYPE OF ARG 2
*
         CLI   ##TYPE(#2),##DFLOAT
         BE    COMDFLO1            DFLOAT - DFLOAT = OK
         CLI   ##TYPE(#2),##SFLOAT
         BE    DCOMSFL1            DFLOAT - SFLOAT = OK
         CLI   ##TYPE(#2),##FIXNUM
         BE    DFLOPFIX            DFLOAT - FIXED = OK
         CLI   ##TYPE(#2),##BIGNUM
         BE    WARNBF              DFLOAT - BIGNUM = ???
         CR    #2,#10              Special case for Macsyma:
         BE    FALSE               DFLOAT - NIL = FALSE
         B     ERROR               ALL OTHERS - ALWAYS ERROR
DFLOPFIX L     #0,##CDR(,#2)       GET FIXED VALUE 2
         LR    #7,#14              SAVE RETURN ADDRESS
         #BAS  #14,FIX2FLO         CONVERT FIXED TO FLOAT
         LR    #14,#7              RESTORE RETURN ADDRESS
         LDR   #F4,#F0             GET FLOAT VALUE 2
         B     COMDFLO2            GO COMPARE FLONUMS IN REGISTERS
         SPACE
SCOMDFL1 DS    0H                  LOAD DOUBLE FROM SINGLE FLOAT ARG 1
         SDR   #F2,#F2
         LE    #F2,##CDR(,#1)
         B     COMDFLO1
DCOMSFL1 DS    0H                  LOAD DOUBLE FROM SINGLE FLOAT ARG 2
         SDR   #F4,#F4
         LE    #F4,##CDR(,#2)
         B     COMDFLO2
COMDFLO1 DS    0H                  LOAD DOUBLE FROM DOUBLE FLOAT ARG 2
         LD    #F4,8(,#2)
COMDFLO2 DS    0H
         CDR   #F2,#F4             TEST FOR EQUALITY
         BE    TRUE
         B     FALSE
         SPACE
SCOMSFL1 DS    0H                  LOAD SINGLE FROM SINGLE FLOAT ARG 1
         LE    #F2,##CDR(,#1)
COMSFLO1 DS    0H                  LOAD SINGLE FROM SINGLE FLOAT ARG 2
         LE    #F4,##CDR(,#2)
COMSFLO2 DS    0H
         CER   #F2,#F4             TEST FOR EQUALITY
         BE    TRUE
         B     FALSE
         EJECT
ARG1BIG  DS    0H
         SPACE
         CLI   ##TYPE(#2),##BIGNUM BOTH MUST BE BIGNUMS
         BE    COMPSS              IF SO, COMPARE THEM
         CLI   ##TYPE(#2),##FIXNUM BIGNUM - FIXNUM = FALSE
         BE    FALSE
         TM    ##TYPE(#2),##FLONUM BIGNUM - ?FLOAT = ???
         BO    WARNBF
         CR    #2,#10              Special case for Macsyma:
         BE    FALSE               BIGNUM - NIL = FALSE
         B     ERROR               ALL OTHERS - ALWAYS ERROR
         EJECT
*
* DELETE THIS CODE FOR FULL COMMON LISP
*
ARG1STR  DS    0H                  ARG 1 IS STRING
*
* CHECK TYPE OF ARG 2
*
         CLI   ##TYPE(#2),##STRING
         BE    COMPSS              STRING - STRING = OK
         CLI   ##TYPE(#2),##SYMBOL
         BE    COMPSA              STRING - SYMBOL = OK
         B     ERROR               ALL OTHERS - ALWAYS ERROR
         SPACE
ARG1ALF  DS    0H                  ARG 1 IS SYMBOL
*
* CHECK TYPE OF ARG 2
*
         CLI   ##TYPE(#2),##SYMBOL
         BE    COMPAA              SYMBOL - SYMBOL = OK
         CLI   ##TYPE(#2),##STRING
         BE    COMPAS              SYMBOL - STRING = OK
         CR    #1,#10              Special case for Macsyma:
         BE    FALSE               NIL - NUMBER = FALSE
         B     ERROR               ALL OTHERS - ALWAYS ERROR
         SPACE
COMPAS   DS    0H                  SYMBOL-TO-STRING COMPARE
         L     #1,##PNAME(,#1)     GET PRINT NAME OF SYMBOL 1
         B     COMPSS              COMPARE STRINGS
         SPACE
COMPSA   DS    0H                  STRING-TO-SYMBOL COMPARE
         L     #2,##PNAME(,#2)     GET PRINT NAME OF SYMBOL 2
         B     COMPSS              COMPARE STRINGS
         SPACE
COMPAA   DS    0H                  SYMBOL-TO-SYMBOL COMPARE
         L     #1,##PNAME(,#1)     GET PRINT NAME OF SYMBOL 1
         L     #2,##PNAME(,#2)     GET PRINT NAME OF SYMBOL 2
*
*--- END OF CODE TO BE DELETED FOR FULL COMMON LISP
*
******** B     COMPSS              COMPARE STRINGS
         SPACE
COMPSS   DS    0H                  STRING-TO-STRING COMPARE
         SPACE 1
         L     #5,0(,#1)           GET STRING HEADER 1
         CL    #5,0(,#2)           TYPE AND LENGTH MUST MATCH
         BNE   FALSE                TO DO COMPARE, ELSE NOT EQUAL
         N     #5,=X'00FFFFFF'     ISOLATE STRING LENGTH 1
         LA    #4,##VECDAT(,#1)    POINT TO STRING TEXT 1
         LA    #6,##VECDAT(,#2)    POINT TO STRING TEXT 2
         LR    #7,#5               GET STRING LENGTH 2
         CLCL  #4,#6               DO COMPARE
         BNE   FALSE               NOT EQUAL: RETURN NIL
******** B     TRUE                EQUAL: RETURN T
         EJECT
TRUE     DS    0H
         LR    #15,#8              TRUE... RESULT IS T
         BR    #14
         SPACE
FALSE    DS    0H
         LR    #15,#10             FALSE... RESULT IS NIL
         BR    #14
         SPACE
WARNBF   DS    0H                  Bignums and floats can't be compared
         SPACE
         #ERR  2,'ZIL4101 ZILEQUAL: Float-to-bignum compare not supportX
               ed.',PREFIX=NO,SIGNAL=NO
         B     FALSE               So return false for them.
         EJECT
         COPY  FIX2FLO             FIXED TO FLOAT CONVERSION ROUTINE
         SPACE
ERROR    LR    #5,#1
         LR    #6,#2
         #ERR  'Type conflict, ZILEQUAL cannot compare ',              X
               0(#5),' and ',0(#6)
         LTORG
         END
