         TITLE 'BUTLAST - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* BUTLAST takes one required argument - a proper list - and           *
*               one optional argument - the number of elements to     *
*               ignore from the end of the list (default: 1).         *
*                                                                     *
* BUTLAST makes a copy of the first LENGTH(ARG1)-ARG2 CAR's of ARG1.  *
*                                                                     *
* Like LENGTH, BUTLAST will loop indefinitely if the list is circular.*
*                                                                     *
***********************************************************************
BUTLAST  #ZBEG MINARGS=1,MAXARGS=2,NAME='BUTLAST'
         #ZPDS 20                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         LM    #3,#4,0(#11)        #3 = arg1, #4 = arg2
         CR    #4,#13              If arg2 is unsupplied
         BNE   ARG2SUP             then
         LA    #5,1                 set arg2 value to 1
         B     GOTARG2             else
ARG2SUP  DS    0H                   arg2 was supplied
         CLI   ##TYPE(#4),##FIXNUM If arg2 is not a fixnum
         BNE   ERROR2              then error
         ICM   #5,15,##CDR(#4)     else get value of arg2
         BNM   GOTARG2             If negative,
         XR    #5,#5                then set to zero
GOTARG2  DS    0H                  #5 now equals "ignore count"
         LR    #1,#3               Load arg1 for length computation
         XR    #2,#2               Initialize (minus (length arg1))
         SPACE 1
LOOP1    DS    0H
         CR    #1,#10              Loop until NIL (end of list arg1)
         BE    ENDLOOP1
         TM    ##TYPE(#1),##ATOM   If atom or dotted pair in arg1
         BO    ERROR1              then arg1 is not a valid list
         L     #1,##CDR(,#1)       Else cdr down arg1
         BCT   #2,LOOP1            to find length thereof
ENDLOOP1 DS    0H                  #2 contains (minus (length arg1))
         LR    #15,#10             Initialize return list to NIL
         AR    #5,#2               Compute (minus (# elements to ret))
         BNM   RETURN              If positive, return null list
         LCR   #5,#5               Else make # of elements positive
         LR    #7,#10              Initialize return list to NIL
LOOP2    DS    0H                  Loop consing up elements
         L     #1,##CAR(,#3)       Get a CAR of arg1
         LR    #2,#10              CONS it with NIL
         L     #15,ZLCCONS         Call CONS to add item to result list
         #BASR #14,#15             (sets #15 to result of CONS)
         CR    #7,#10              If return list is NIL
         BNE   BNN                 then
         LR    #7,#15               set return list to first CONS
         LR    #6,#15               set bashee to first CONS
         B     AFTBASH             else
BNN      ST    #15,##CDR(,#6)       bash CDR of bashee
         LR    #6,#15               set new bashee
AFTBASH  DS    0H
         L     #3,##CDR(,#3)       CDR down list
         BCT   #5,LOOP2            CONS until count exhausted
         LR    #15,#7              Set return value
         SPACE 1
RETURN   DS    0H                  #15 contains return value
         #ZRET ,                   Return to caller
         SPACE 1
ERROR1   DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument 1 to BUTLAST not a proper list - ',0(#11)
ERROR2   DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument 2 to BUTLAST not a fixnum - ',4(#11)
         SPACE 1
         LTORG
         END
