         TITLE 'ZILSBND - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS FUNCTION IS CALLED BY ALL COMPILED ZIL PROGRAMS WHICH HAVE TO *
*  PUT THEIR LOCALLY BOUND "SPECIAL" VARIABLES ON THE SPECIAL ALIST.  *
*                                                                     *
*  This function, along with ZILFBND, replaces the old ZIL 1.2        *
*  "ZILVPUT" function.                                                *
*                                                                     *
*  REGISTER 1 IS THE ATOM WHICH IS TO BE BOUND.                       *
*  REGISTER 2 IS THE VALUE WHICH IS BOUND TO ATOM 1.                  *
*  REGISTER 1 ON RETURN IS THE CONS CELL WHICH HOLDS THE BINDING.     *
*                                                                     *
*  The corresponding LISP definition would look something like this:  *
*                                                                     *
* (defun zilsbnd (a b)                                                *
*  (let ((x (cons a b)))                                              *
*        (push x (special-alist))                                     *
*        x))                                                          *
*                                                                     *
* THIS ROUTINE IS NOT RECURSIVE AND USES NO STACK SPACE.              *
* IN ADDITION, IT NEEDS NO BASE REGISTER.                             *
*                                                                     *
* NOTE: THE INTERFACE TO THIS ROUTINE IS NONSTANDARD.                 *
*       COMPILED CODE INVOKES IT AS FOLLOWS:                          *
*                                                                     *
*  LA   0,CURRENT STACK LOCATION FOR CONS                             *
*  L    1,ADDRESS OF FREE VARIABLE SYMBOL                             *
*  L    2,STACK LOCATION OF VALUE                                     *
*  L    15,=A(ZILSBND)                                                *
*  BALR 3,15                                                          *
*  ST   1,STACK LOCATION OF VALUE                                     *
*                                                                     *
***********************************************************************
         SPACE 1
ZILSBND  CSECT
         SPACE 1
         USING ZLCOMMON,#13
         SPACE 1
         L     #15,ZLCCONS         CALL CONS TO CONS ARGS TOGETHER
         #BASR #14,#15             GIVING A VARIABLE BINDING
         LR    #1,#15              ARG1=RESULT OF CONS (ALSO RETURNED)
         L     #15,ZLCCONS         GET ADDRESS OF CONS ROUTINE
         L     #2,ZLCSALST         ARG2=CURRENT SPECIAL ALIST
         #BASR #14,#15             CALL CONS TO CONS THEM TOGETHER
         ST    #15,ZLCSALST        UPDATE ALIST WITH NEW BINDING
         BR    #3                  RETURN WITH (CAR BINDING) IN REG 1
         SPACE 1
         #ZEQU ,
         SPACE 1
         #ZCOM ,
         END
