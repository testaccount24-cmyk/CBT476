         TITLE 'SAPPEND - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* "STRING-APPEND"                                                     *
*                                                                     *
* SAPPEND TAKES AN &REST ARGUMENT - (A LIST OF) STRINGS TO BE         *
* CONCATENATED INTO A SINGLE RESULT STRING.                           *
*                                                                     *
***********************************************************************
         SPACE
SAPPEND  #ZBEG MINARGS=0,MAXARGS=0,RESTARG=T,NAME='STRING-APPEND'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
*
* FIRST CALL ZILVSS TO START BUILDING A STRING.
*
         LA    #1,4                SET ENTRY CODE FOR STRING BEGINNING
         L     #15,ZLCVSS          GET ADDRESS OF ZILVSS
         LA    #0,16(,#11)         SET CURRENT STACK POINTER
         #BASR #14,#15             CALL ZILVSS TO START BUILDING STRING
         LTR   #4,#4               IF NO STRING SPACE AVAILABLE
         BZ    ERROR2              THEN ERROR
*
* FOR EACH STRING IN THE LIST, ADD IT TO THE STRING BEING BUILT.
*
         XR    #5,#5               INIT LENGTH SO FAR TO ZERO
         L     #7,0(,#11)          GET &REST ARGLIST
LOOP     DS    0H
         CR    #7,#10              IF END OF LIST OR NULL LIST
         BE    NOMORE              THEN END LOOP
         L     #2,##CAR(,#7)       GET ATOM (ARG 1 TO SAPPEND)
         CLI   ##TYPE(#2),##STRING IF IT IS A STRING
         BNE   NOTSTR              THEN
         LR    #6,#2                GET POINTER TO THE STRING
         B     DOIT                ELSE
NOTSTR   CLI   ##TYPE(#2),##SYMBOL IF IT IS A SYMBOL
         BNE   ERROR1              THEN (WELL, WE'LL PERMIT IT)
         L     #6,##PNAME(,#2)      USE THE PRINT NAME
*                                  ELSE INVALID ARG - NOT A STRING
*                                  ANYHOW...
DOIT     DS    0H                  #6 POINTS TO THE STRING ITSELF
         LA    #1,16               SET ENTRY CODE FOR STRING CONCAT
         L     #15,ZLCVSS          GET ADDRESS OF ZILVSS
         LA    #0,16(,#11)         SET CURRENT STACK POINTER
*                                  CALL ZILVSS TO CONCATENATE
         #BASR #14,#15              THAT STRING TO THIS STRING
         LTR   #4,#4               IF NO STRING SPACE AVAILABLE
         BZ    ERROR2              THEN ERROR
         L     #7,##CDR(,#7)       GET REST OF LIST
         B     LOOP                CONTINUE.
NOMORE   DS    0H                  LIST HAS BEEN PROCESSED
         LA    #1,8                SET ENTRY CODE FOR STRING FINISH
         L     #15,ZLCVSS          CALL ZILVSS TO FINALIZE THE STRING
         #BASR #14,#15             (NO GC ERRORS POSSIBLE HERE)
*                                  RETURNED STRING IS IN #15
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
ERROR1   #ERR  'Argument to STRING-APPEND not a string - ',(#2)
ERROR2   #ERR  'ZIL4010 STRING-APPEND: Not enough vector/string space tX
               o build string.',PREFIX=NO
         SPACE 1
         LTORG
         END
