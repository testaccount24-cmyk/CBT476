         TITLE 'EQL - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
*  EQL IS LIKE EQUALP, BUT THE TYPES MUST MATCH.                      *
*                                                                     *
***********************************************************************
*                                                                     *
* NOTE: SYMBOLS ARE EQL ONLY IF THEY ARE EQ, ACCORDING TO COMMON LISP *
*       EQL.  IF SYMBOLS ARE TO BE CONSIDERED EQL IF THEIR PNAMES ARE *
*       STRING-EQUAL, THEN DECOMMENT THE LINES MARKED *$$$$$$$.       *
*                                                                     *
* NOTE: STRINGS ARE EQL IF THEIR TEXTS ARE IDENTICAL, INCLUDING CASE. *
*       FOR TRUE COMMON LISP THE CODE THAT COMPARES STRINGS SHOULD BE *
*       REMOVED, SINCE STRINGS ARE NOT EQL UNLESS THEY ARE EQ.        *
*                                                                     *
*       THE PHILOSOPHY IS THAT IN ZIL PRIOR TO 1.3, STRINGS ARE       *
*       UNMODIFIABLE OBJECTS, AND THEREFORE CAN BE COMPARED BY EQL.   *
*       IF STRINGS CAN BE UPDATED, EQL IS NOT A VALID TEST.           *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS ROUTINE IS NONRECURSIVE AND USES NO STACK SPACE.               *
*                                                                     *
***********************************************************************
EQL      #ZBEG MINARGS=2,MAXARGS=2,NAME='EQL'
         SPACE
         USING EQL,#15
         SPACE
         LM    #1,#2,0(#1)         LOAD ARGUMENTS
         CR    #1,#2               IF ARGS ARE "EQ"
         BE    TRUE                THEN RETURN T
*
* CHECK THAT THE TYPES MATCH
*
         CLC   ##TYPE(1,#1),##TYPE(#2)
         BNE   FALSE               IF TYPES DO NOT MATCH, NOT EQL.
*
* CHECK TYPE OF ARGS
*
         CLI   ##TYPE(#1),##FIXNUM FIXNUM COMPARE
         BE    COMPFIX
         CLI   ##TYPE(#1),##SFLOAT SINGLE-FLOAT COMPARE
         BE    COMPSFLO
*
*--- DELETE THIS CODE FOR TRUE COMMON LISPNESS
*
         CLI   ##TYPE(#1),##STRING STRING COMPARE
         BE    COMPSTR
*$$$$$$$ CLI   ##TYPE(#1),##SYMBOL SYMBOL COMPARE
*$$$$$$$ BE    COMPSYM
*
*--- END OF CODE TO BE DELETED
*
         CLI   ##TYPE(#1),##BIGNUM BIGNUM COMPARE LIKE STRING COMPARE
         BE    COMPBIG
         CLI   ##TYPE(#1),##DFLOAT DOUBLE-FLOAT COMPARE
         BE    COMPDFLO
FALSE    DS    0H                  ALL OTHER TYPES ARE EQL ONLY IF EQ
         LR    #15,#10             THEREFORE RETURN NIL (FALSE)
         BR    #14
         SPACE
         DROP  #15                 NO BASE REG ALLOWED AFTER THIS POINT
         EJECT
COMPFIX  DS    0H                  ARG 1 IS FIXED OR LOGICAL
         SPACE
         L     #0,##CDR(,#1)       GET FIXED VALUE 1
         LR    #15,#10             PRESET RETURN VALUE TO NIL
         C     #0,##CDR(,#2)       COMPARE FIXED VALUE 2
         BNER  #14                 RETURN NIL IF FALSE
TRUE     DS    0H                  ALL OTHER TYPES ARE EQL ONLY IF EQ
         LR    #15,#8              ELSE RETURN T (TRUE)
         BR    #14
         EJECT
COMPSFLO DS    0H                  ARG 1 IS SINGLE FLOAT
         SPACE
         LE    #F0,##CDR(,#1)      GET FLOAT VALUE 1
         LR    #15,#10             PRESET RETURN VALUE TO NIL
         CE    #F0,##CDR(,#2)      COMPARE FLOAT VALUE 2
         BNER  #14                 RETURN NIL IF FALSE
         LR    #15,#8              ELSE RETURN T (TRUE)
         BR    #14
         EJECT
COMPDFLO DS    0H                  ARG 1 IS DOUBLE FLOAT
         SPACE
         LD    #F0,8(,#1)          GET FLOAT VALUE 1
         LR    #15,#10             PRESET RETURN VALUE TO NIL
         CD    #F0,8(,#2)          COMPARE FLOAT VALUE 2
         BNER  #14                 RETURN NIL IF FALSE
         LR    #15,#8              ELSE RETURN T (TRUE)
         BR    #14
         EJECT
COMPSYM  DS    0H                  SYMBOL-TO-SYMBOL COMPARE
*$$$$$$$ L     #1,##PNAME(,#1)     GET SYMBOL PRINT NAME 1
*$$$$$$$ L     #2,##PNAME(,#2)     GET SYMBOL PRINT NAME 2
******** B     COMPSTR             GO TO DO STRING-TO-STRING COMPARE
         SPACE 2
*
* NOTE: DELETE THE "COMPSTR" LABEL FOR COMMON LISP
*
COMPSTR  DS    0H                  STRING-TO-STRING COMPARE
COMPBIG  DS    0H                  BIGNUM-TO-BIGNUM COMPARE
         SPACE 1
         L     #5,0(,#1)           GET STRING HEADER 1
         LR    #15,#10             PRESET RETURN VALUE TO NIL
         CL    #5,0(,#2)           TYPE AND LENGTH MUST MATCH
         BNER  #14                 RETURN NIL (FALSE) IF THEY DON'T
         SLL   #5,8                ERASE TYPE BITS FROM HEADER
         SRL   #5,8                GET STRING LENGTH 1
         LA    #4,##VECDAT(,#1)    POINT TO STRING TEXT 1
         LA    #6,##VECDAT(,#2)    POINT TO STRING TEXT 2
         LR    #7,#5               GET STRING LENGTH 2
         CLCL  #4,#6               DO COMPARE
         BNER  #14                 RETURN NIL (FALSE) IF NOT EQUAL
         LR    #15,#8              ELSE RETURN T (TRUE)
         BR    #14
         SPACE
         LTORG
         END
