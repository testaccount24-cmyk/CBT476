         TITLE 'ZISPUT - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* (ZISPUT 'foo "bar") sets the value of the ISPF dialog variable      *
* FOO to the value BAR.  It uses the VREPLACE service to do this.     *
* The second argument is returned as the value of the function.       *
*                                                                     *
***********************************************************************
         SPACE
ZISPUT   #ZBEG MINARGS=2,MAXARGS=2,NAME='ZISPUT'
         #ZPDS 2*4+12+0 = 20       DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE 1
         LM    #1,#2,0(#11)        Get args 1 and 2
         CLI   ##TYPE(#1),##STRING Arg 1 must be a string
         BE    A1TYPOK             or
         CLI   ##TYPE(#1),##SYMBOL If symbol,
         BNE   ERROR1               then use print name
         L     #1,##PNAME(,#1)
A1TYPOK  DS    0H
         XR    #4,#4
         ICM   #4,B'0111',1(#1)    Get string length
         BZ    ERROR1              If null string, invalid variable nm
         CH    #4,=H'8'            If longer than 8 characters,
         BH    ERROR1              then invalid variable name
         MVC   VARNAME,=CL8' '
         BCTR  #4,0
         EX    #4,MVCVAR           Move variable name, folding to up.c.
*
* Call ZILADMP to dump out the value.  Note that the value cannot be
* a list, vector or structure.
*
         TM    ##TYPE(#2),##ATOM
         BZ    BADLIST
         TM    ##TYPE(#2),##VEC
         BO    BADLIST
         L     #15,ZLCADMP         Get address of ZILADMP
         LR    #1,#10              Set reg 1 for ZILADMP
         #BASR #14,#15             Call ZILADMP to dump atom
         LR    #5,#0               Get length of dumped atom
         LR    #7,#1               Save address of dumped value
*
* GETMAIN an area of storage which will belong to ISPF to hold the
* value of this dialog variable.  Now I know why ISPF keeps getting
* storage but not freeing it - this is the only way to guarantee that
* ISPF can hold on to its value.
*
         ST    #5,LENGTHS          Store length of dumped atom
         #GETMAIN RC,LV=(0),LOC=BELOW Get storage for this value
         LTR   #15,#15
         BNZ   NOROOM
         ST    #1,PARM4            Store address of Getmained storage
         OI    PARM4,X'80'
         LR    #0,#1               Destination address
         LR    #1,#5               Destination length
         LR    #14,#7              Source address
         LR    #15,#5              Source length
         MVCL  #0,#14              Move our data to getmained area
*
* Get ISPLINK
*
         ICM   #15,15,@ISPLINK     Get address of ISPLINK
         BNZ   LOADED              If not loaded, then
         LOAD  EPLOC==CL8'ISPLINK',ERRET=NOSPF
         ST    #0,@ISPLINK         Save entry point
         LR    #15,#0              Get entry point
LOADED   DS    0H
*
* INVOKE THE DIALOG SERVICE VIA ISPEX
*
         ST    #9,ZLCISV09         Save #9 in case of interrupt
         LA    #1,PARMS            POINT TO PARAMETER LIST FOR ISPLINK
         OI    ZLCIFLGS,ZLCISYS    Indicate non-ZIL code running
         #BASR #14,#15             Call ISPLINK
         TM    ZLCIFLGS,ZLCIATTN   If attention interrupt occurred
         BOR   #13                 then go to handle it
         NI    ZLCIFLGS,255-ZLCISYS Indicate ZIL code running again
*
* If CONTROL ERRORS RETURN is in effect, and the return code is higher
* than 8, then we should really handle this better - like set ZERRMSG??
*
         LTR   #15,#15
         BNZ   VERROR
         SPACE 1
         L     #15,4(,#11)         Return arg 2 as value
         SPACE 1
RETURN   DS    0H
         SPACE 1
         #ZRET ,
         SPACE 1
MVCVAR   OC    VARNAME(*-*),##VECDAT(#1)
         SPACE 1
@ISPLINK DC    A(0)                Address of ISPLINK
         SPACE 1
PARMS    DS    0A
PARM1    DC    A($VREPLAC)         Address of 'VREPLACE'
PARM2    DC    A(NAMELIST)         Address of variable name list
PARM3    DC    A(LENGTHS)          Address of length(s)
PARM4    DS    A                   Address of value(s)
         SPACE 1
$VREPLAC DC    CL8'VREPLACE'       Dialog service name
NAMELIST DC    C'('                Start of name list
VARNAME  DC    CL8' '              Variable name
         DC    C')'                End of name list
LENGTHS  DS    F                   Length of value to set
         SPACE 1
ERROR1   #ERR  'Arg 1 to ZISPUT not a valid ISPF variable name - ',    X
               0(#11)
BADLIST  #ERR  'Arg 2 to ZISPUT is a list, vector or structure, which cX
               annot be an ISPF dialog variable value - ',4(#11)
NOSPF    #ERR  'ZISPUT failed, ISPF dialog services not available.'
VERROR   #ERR  'ZISPUT failed, ISPF dialog error doing VREPLACE.'
NOROOM   #ERR  'ZISPUT failed, unable to GETMAIN storage to create variX
               able value for ISPF.'
         SPACE 1
         LTORG
         END
