         TITLE 'ZILVSYM - ZIL 1.3 SPECIAL SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
*  THIS MODULE IS INVOKED FROM COMPILED CODE TO IMPLEMENT SYMEVAL,    *
*  OR, MORE PRECISELY, ACCESSES OF SPECIAL VARIABLE VALUES.           *
*                                                                     *
*  ON ENTRY, REGISTER 1 POINTS TO THE CURRENT TOP-OF-STACK LOCATION   *
*            REGISTER 2 POINTS TO THE VARIABLE SYMBOL                 *
*                                                                     *
*  LOGIC:                                                             *
*                                                                     *
*  THIS ROUTINE INVOKES ZEVSYM TO GET A BINDING FOR THE VARIABLE.     *
*  IF ZEVSYM RETURNS NIL,  AN "UNBOUND VARIABLE" ERROR IS SIGNALLED.  *
*                                                                     *
***********************************************************************
*                                                                     *
* NOTE: THIS MODULE IS OBSOLETE IF SHALLOW BINDING IS IN EFFECT.      *
*                                                                     *
***********************************************************************
         SPACE 1
ZILVSYM  #ZBEG MINARGS=0,MAXARGS=0,NAME='ZILVSYM',SUBRS=ZILSUBR
         SPACE 1
         #ZPDS 20
         #ZSAV ,
         SPACE 1
         ST    #2,12(#11)          STORE SYMBOL ARG ON STACK
         L     #15,@ZEVSYM         GET ADDRESS OF ZEVSYM
         LA    #1,12(,#11)         POINT TO WHERE TO STORE ARGS
         #BASR #14,#15             CALL ZEVSYM TO RETURN A BINDING
         CR    #15,#10             IF NO BINDING WAS FOUND
         BE    ERROR               THEN ERROR
         #ZRET ,                   ELSE RETURN WITH BINDING
ERROR    DS    0H
*
* Extract function name for insertion into message
*
         SPACE 1
         L     #2,4(,#11)          THIS IS WHERE #12 WAS SAVED...
         XR    #1,#1               Clear insert register
         STCM  #1,7,FUNLEN         Initialize fake string length to 0
         IC    #1,4(,#2)           Get length of module identifier
         SH    #1,=H'16'           Subtract length of date/time info
         BNP   SKIPNAME            If no name, skip move
         CH    #1,=Y(L'FUNTEXT)    If longer than our maximum
         BNH   *+8                 then
         LA    #1,L'FUNTEXT         use our maximum length
         STCM  #1,7,FUNLEN         Store length into fake string
         BCTR  #1,0                Reduce for execute
         EX    #1,MVCNAME          Move function name to fake string
SKIPNAME DS    0H
         SPACE 1
         #ERR  PREFIX=NO,          DISPLAY ERROR MESSAGE               X
               'ZIL1300 ZILVSYM: Unbound variable ',12(#11),' in compilX
               ed function ',FUNSTR,'.'
         SPACE 1
MVCNAME  MVC   FUNTEXT(*-*),5(#2)  Executed: Move function name to str
         SPACE 1
         DS    0H,XL1              Align fake string to non-halfword
FUNSTR   DC    YL1(##STRING)
FUNLEN   DS    AL3
FUNTEXT  DS    CL64
         SPACE 1
ZILSUBRS DS    0A
@ZEVSYM  DC    V(ZEVSYM)           ADDRESS OF SUBROUTINE
         DC    CL8'ZEVSYM'
ZILSUBRE EQU   *
         SPACE 2
         LTORG
         END
