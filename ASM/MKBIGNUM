         TITLE 'MKBIGNUM - ZIL 1.3 INTERNAL SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS SUBROUTINE MAKES A BIGNUM FROM A LIST OF FIXNUMS.              *
*                                                                     *
* IT TAKES ONE REQUIRED ARGUMENT - A LIST OF FIXNUMS.                 *
*                                                                     *
***********************************************************************
         SPACE 1
MKBIGNUM #ZBEG MINARGS=1,MAXARGS=1,NAME='MAKE-BIGNUM'
         SPACE 1
         #ZPDS 16
         #ZSAV ,
         SPACE 1
         L     #3,0(,#11)          GET ARG
         LA    #2,4                INITIALIZE LENGTH REQUIRED FOR BIGNU
LENLOOP  CR    #3,#10              SCAN UNTIL END OF LIST
         BE    GOTLEN
         TM    ##TYPE(#3),##ATOM   IF (SUB)ARG IS NOT A LIST
         BO    ERROR1              THEN ERROR
         LA    #2,4(,#2)           ELSE INCREMENT LENGTH FOR BIGNUM
         L     #3,##CDR(,#3)       GET CDR OF LIST
         B     LENLOOP
GOTLEN   DS    0H
         CH    #2,=H'12'           IF LESS THAN 2 FIXNUMS IN LIST
         BL    ERROR2              THEN ERROR
         L     #15,ZLCBIG          GET ADDRESS OF ZILBIG
         LA    #0,16(,#11)         POINT TO CURRENT STACK LOCATION
         #BASR #14,#15             CALL ZILBIG TO GET BIGNUM SPACE
         SH    #2,=H'4'            SET LENGTH OF BIGNUM DATA
         STCM  #2,7,1(#15)         STORE BIGNUM LENGTH
         L     #3,0(,#11)          GET LIST ARG AGAIN
         LA    #4,##VECDAT(,#15)   POINT TO FIRST SLOT IN BIGNUM
         LR    #5,#4               SAVE THIS POINTER FOR CHECKING
FIXLOOP  CR    #3,#10              PROCESS UNTIL END OF LIST
         BE    FIXEND
         L     #2,##CAR(,#3)       GET CAR OF (SUB)LIST
         CLI   ##TYPE(#2),##FIXNUM IF IT IS NOT A FIXNUM
         BNE   ERROR1              THEN ERROR
         ICM   #7,15,##CDR(#2)     ELSE GET FIXNUM VALUE
*                                  IF IT IS NEGATIVE
         BNM   FIXOK               THEN (IT IS VALID ONLY IF FIRST #)..
         CR    #4,#5               IF WE'RE PROCESSING THE FIRST FIXNUM
         BNE   ERROR4              IT'S OK, ELSE IT'S AN ERROR.
FIXOK    ST    #7,0(,#4)           IF OK, STORE VALUE INTO BIGNUM
         LA    #4,4(,#4)           INCREMENT SLOT POINTER
         L     #3,##CDR(,#3)       GET CDR OF LIST
         B     FIXLOOP
FIXEND   DS    0H
*
* AT THIS POINT #7 CONTAINS THE LAST FIXNUM STORED INTO THE BIGNUM.
* IF THIS VALUE IS ZERO, WE HAVE BUILT AN UNNORMALIZED BIGNUM,
* WHICH IS AN ERROR.
*
         LTR   #7,#7               IF LAST WORD OF BIGNUM IS ZERO,
         BZ    ERROR3              THEN ERROR
         CLC   0(12,#15),BADBIG    IF A BIGNUM -2147483648 WAS CREATED
         BE    ERROR5              THEN ERROR
*                                  ELSE MAKE BIGNUM PERMANENT
         ST    #4,ZLCVSNXT         STORE END PTR FOR VSS
         SPACE 1
RETURN   DS    0H                  #15 POINTS TO BIGNUM BUILT
         SPACE 1
         #ZRET ,
         SPACE 1
         DS    0A                  ALIGN (BAD) BIGNUM TO FULLWORD
BADBIG   DC    YL1(##BIGNUM),AL3(8),X'80000000',F'1'  -2**31 AS BIGNUM
         SPACE 1
ERROR1   #ERR  'Argument to MAKE-BIGNUM not a proper list of 2 or more X
               fixnums - ',0(#11)
ERROR2   EQU   ERROR1              Too few fixnums
ERROR3   #ERR  'The last fixnum passed to MAKE-BIGNUM cannot be zero.',X
               X'0D',              Carriage return                     X
               'Invalid argument: ',0(#11)
ERROR4   #ERR  'All fixnums in MAKE-BIGNUM argument must be nonnegativeX
                except for the first.',                                X
               X'0D',              Carriage return                     X
               'Invalid argument: ',0(#11)
ERROR5   #ERR  'Attempt to make bignum -2**31 (most negative fixnum) deX
               tected by MAKE-BIGNUM.',                                X
               X'0D',              Carriage return                     X
               'Invalid argument: ',0(#11)
         SPACE 1
         LTORG
         SPACE 1
         END
