         TITLE 'GETCHAR - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* GETCHAR TAKES TWO ARGUMENTS - A STRING AND A FIXNUM.                *
*                                                                     *
* It returns an interned symbol representing the arg2'th character    *
* of arg1.                                                            *
*                                                                     *
* This is a Maclisp function, not a Common Lisp function.             *
*                                                                     *
***********************************************************************
GETCHAR  #ZBEG MINARGS=2,MAXARGS=2,NAME='GETCHAR'
         #ZPDS 20
         #ZSAV ,
         SPACE
         LM    #6,#7,0(#11)        LOAD ARGS
         CLI   ##TYPE(#6),##STRING IF ARGUMENT IS A STRING
         BE    ARG1OK              THEN OK
         CLI   ##TYPE(#6),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR1              THEN
         L     #6,##PNAME(,#6)      TAKE THE PRINT NAME, ELSE ERROR
ARG1OK   DS    0H
         CLI   ##TYPE(#7),##FIXNUM IF ARG 2 IS NOT A FIXNUM
         BNE   ERROR2              THEN ERROR
         ICM   #7,15,##CDR(#7)     GET FIXNUM VALUE
         BNP   RETNIL              IF ZERO OR NEGATIVE, RETURN NIL
         XR    #2,#2               CLEAR INSERT REG
         ICM   #2,7,1(#6)          GET STRING LENGTH
         CR    #7,#2               IF SUBSCRIPT EXCEEDS LENGTH
         BH    RETNIL              THEN RETURN NIL
         IC    #1,##VECDAT-1(#7,#6) LOAD CHARACTER FROM SUBSTRING
         STC   #1,CHARWORK         MOVE TO TEMP AREA OUTSIDE STRING!
*
* We used to call ZILABLD, but why not call ZILINTN directly?
*
* In such a case, we MUST check for T ourselves.
*
         CLI   CHARWORK,C'T'       If character = T
         BNE   NOTT                then
         LR    #15,#8               return address of T
         B     RETURN              else
NOTT     DS    0H                   character other than T...
         LA    #4,CHARWORK         GET ADDRESS OF PRINT NAME TEXT
         LA    #5,1                GET LENGTH OF PRINT NAME TEXT
         XR    #7,#7               INDICATE PRINT NAME TEXT SUPPLIED
         L     #15,ZLCINTN         GET ADDRESS OF ZILINTN
         LA    #0,20(,#11)         GET CURRENT TOP-OF-STACK POINTER
         #BASR #14,#15             CALL ZILINTN TO INTERN THE SYMBOL
         B     RETURN
***      SPACE 1
***      LA    #0,1                SET LENGTH = 1
***      LA    #1,CHARWORK         POINT TO THIS AREA!
***      LR    #2,#8               SET INTERN FLAG = T
***      LR    #3,#10              SET FORMAT FLAG = NIL
***      L     #15,ZLCABLD         GET ADDRESS OF ZILABLD
***      LA    #4,20(,#11)         SET CURRENT STACK POINTER FOR CONS
***      #BASR #14,#15             CALL ZILABLD TO MAKE AT ATOM FROM IT
***      B     RETURN              RETURN THE ATOM IN #15
         SPACE 1
RETNIL   DS    0H                  SUBSCRIPT OUT OF BOUNDS
         LR    #15,#10             RETURN NIL
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
ERROR1   #ERR  'Argument 1 to GETCHAR not a string - ',(#6)
ERROR2   #ERR  'Argument 2 to GETCHAR not a fixnum - ',(#7)
         SPACE 1
CHARWORK DS    CL1
         SPACE 1
         LTORG
         END
