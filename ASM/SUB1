         TITLE 'SUB1 - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* SUB1 TAKES ONE ARGUMENT - A NUMERIC ATOM                            *
*                                                                     *
***********************************************************************
         SPACE
SUB1     #ZBEG MINARGS=1,MAXARGS=1,NAME='SUB1',SUBRS=ZILSUBR
         SPACE
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         L     #1,0(,#11)          LOAD FIRST (AND ONLY) ARGUMENT
         CLI   ##TYPE(#1),##FIXNUM SEE IF FIXNUM
         BNE   NOTFIX              IF NOT FIXNUM, GO SOMEWHERE ELSE
         L     #2,##CDR(,#1)       Get value of fixnum
         CL    #2,ZLCSFTHI         If within small fixnum table range
         BNH   SMALLFIX            then go to decrement small fixnum
         S     #2,#SFW1            ELSE SUBTRACT 1 FROM FIXNUM
         BO    OVERFLOW            IF OVERFLOW, MUST BE -2**31
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FIXED               MAKE A NEW FIXNUM
         B     RETURN              AND RETURN WITH IT
         SPACE 1
SMALLFIX DS    0H
         SPACE 1
***********************************************************************
*                                                                     *
* Fixnum between lowest and highest small fixnum from table           *
* (inclusive).  We load the address of the next lower fixnum          *
* from the table.                                                     *
*                                                                     *
* Note that if the value is zero, bumping back in the table will get  *
* us -1, which was put there for this purpose (among others), even    *
* though -1 is strictly not part of the small fixnum table.           *
*                                                                     *
***********************************************************************
         SPACE 1
         SLA   #2,3                Multiply fixval by 8 for an index
         LA    #15,#SFT-8(#2)      Get address of (fixval-1)th fixnum
******** B     RETURN               from table and return with it
         SPACE 1
RETURN   DS    0H                  RETURN WITH NEW ATOM
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
NOTFIX   DS    0H                  IF NOT FIXNUM, MUST BE...
         CLI   ##TYPE(#1),##SFLOAT  SINGLE-FLOAT
         BE    SUB1SFLO              OR
         CLI   ##TYPE(#1),##DFLOAT  DOUBLE-FLOAT
         BE    SUB1DFLO              OR
         CLI   ##TYPE(#1),##BIGNUM    BIGNUM
         BE    SUB1BIG                 ELSE
         B     ERROR1                   ERROR
         SPACE
SUB1SFLO DS    0H                  SINGLE FLOAT
         SPACE
         LE    #F0,##CDR(,#1)      LOAD FLOAT VALUE
         SE    #F0,=E'1'           SUBTRACT 1
         STE   #F0,ZLCWORK         PUT RESULT IN ATOM-MAKING REGISTER
         L     #2,ZLCWORK
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #MKAT FLOAT               MAKE A FLONUM
         B     RETURN              AND RETURN WITH IT
         SPACE
SUB1DFLO DS    0H                  DOUBLE FLOAT
         SPACE
         LD    #F0,8(,#1)          LOAD FLOAT VALUE
         SD    #F0,=D'1'           SUBTRACT 1
         L     #15,ZLCMDF          GET ADDRESS OF ZILMDF
         LA    #0,16(,#11)         PASS CURRENT STACK LOCATION TO CONS
         #BASR #14,#15             CALL ZILMDF TO MAKE A DOUBLE FLOAT
         B     RETURN              AND RETURN WITH IT
         SPACE
OVERFLOW DS    0H                  FIXED-POINT OVERFLOW OCCURRED
         SPACE
         LA    #15,MNFM1           GET MOST NEGATIVE FIXNUM MINUS 1
         B     RETURN              AND RETURN WITH IT
         SPACE
SUB1BIG  DS    0H                  ARG IS A BIGNUM
         SPACE
         LA    #2,#SFTM1           GET ADDRESS OF FIXNUM -1
         L     #15,@ZILADD         GET ADDRESS OF ZILADD
         LR    #1,#11              RESTORE STACK POINTER
         LM    #11,#12,4(#1)       RESTORE REGS AS IF RETURNING
         L     #14,12(,#1)
         ST    #2,4(,#1)           SET ARG 2 TO ZILADD
         BR    #15                 GO TO ZILADD TO ADD -1 TO BIGNUM
         SPACE
         DS    0A                  ALIGN BIGNUM TO FULLWORD
MNFM1    DC    YL1(##BIGNUM),AL3(8),F'-2147483647,1' BIGNUM -2147483649
         SPACE 1
ZILSUBRS DS    0A
@ZILADD  DC    V(ZILADD)           ADDRESS OF SUBROUTINE
         DC    CL8'ZILADD'
ZILSUBRE EQU   *
         SPACE 1
ERROR1   DS    0H                  NOT A NUMERIC ATOM
         #ERR  'Argument to SUB1 not a number - ',0(#11)
         SPACE 1
         LTORG
         END
