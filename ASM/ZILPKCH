         TITLE 'ZILPKCH - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* ZILPKCH TAKES THREE (OPTIONAL) ARGUMENTS:                           *
*                                                                     *
* (1) INPUT FILE SPECIFICATION                                        *
* (2) WHETHER (T) OR NOT (NIL) TO INTERN THE RESULTING ATOM.          *
* (3) WHETHER (T) OR NOT (NIL) TO FOLD THE CHARACTER TO UPPER CASE.   *
*                                                                     *
* ZILPKCH IS IDENTICAL TO READCH EXCEPT THAT IT DOES NOT ADVANCE THE  *
* CURRENT CHARACTER POINTER.  COMPARE COMMON LISP PEEK-CHAR.          *
*                                                                     *
* THIS FUNCTION IS INTENDED FOR USE IN SYSTEMS WHERE FUNCTIONS LIKE   *
* TYIPEEK ARE REQUIRED.                                               *
*                                                                     *
***********************************************************************
*                                                                     *
* In ZIL 1.2 this function was called PEEKCH.  The syntax of PEEKCH   *
* has been changed to be compatible with Maclisp READCH (READCH was   *
* changed to ZILRDCH similarly).  Common LISP READ-CHAR and PEEK-CHAR *
* should be used instead of these functions.  Also TYI and TYIPEEK.   *
*                                                                     *
***********************************************************************
         SPACE 1
ZILPKCH  #ZBEG MINARGS=0,MAXARGS=3,NAME='ZILPKCH'
         #ZPDS 24                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         #IFIL 1                   ARG 1 = INPUT FILE SPEC
         SPACE
         TM    ZLFFLAG1,ZLFEOF     IF END OF FILE ALREADY HIT
         BO    RDAFTEOF            THEN ERROR - READ AFTER EOF
         SPACE
         ICM   #3,15,ZLFCHAR       GET CURRENT POSITION
         BP    INPUTOK             IF POSITIVE, WE HAVE GOOD STUFF
         LR    #15,#10             RETURN NIL IF EOF OR NEWLINE
         B     RETURN
         SPACE
INPUTOK  DS    0H                  REG 3 LOCATES CURRENT CHARACTER
         SPACE
         LR    #1,#3               CONVERT RELATIVE COLUMN TO
         BCTR  #1,0                 ABSOLUTE LOCATION IN LINE
         A     #1,ZLFCARD            AND PASS IT TO ATOM BUILD RTE
         C     #10,8(,#11)         IF ARG 3 IS NOT NIL
         BE    DONTFOLD             OR
         C     #13,8(,#11)           ARG 3 IS NOT SUPPLIED
         BE    DONTFOLD               THEN
         TR    0(1,#1),UPTBL        FOLD CHARACTER TO UPPER CASE.
DONTFOLD DS    0H
         ST    #3,ZLFCHAR          SAVE CHARACTER POINTER
         LA    #0,1                LENGTH OF ATOM TO BE BUILT = 1
         L     #2,4(,#11)          GET ARG 2 = WHETHER TO INTERN IT
         LR    #3,#10              SET FORMAT FLAG = NIL
         L     #15,ZLCABLD         GET ADDRESS OF ZILABLD
         LA    #4,24(,#11)         SET CURRENT STACK POINTER FOR CONS
         #BASR #14,#15             CALL ZILABLD TO BUILD THE ATOM
         SPACE
RETURN   DS    0H                   MAKING #15 POINT TO NEW ATOM
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
RDAFTEOF DS    0H                  IF NEGATIVE, EOF WAS ALREADY HIT
         L     #2,ZLFATOM          Load file atom for error message
         #ERR  'ZIL2003 ZILPKCH: Read after end of file ',(#2),        X
               PREFIX=NO
         SPACE 1
         LTORG
         SPACE 1
UPTBL    DC    256YL1(*-UPTBL)     TABLE TO FOLD TO UPPER CASE
         ORG   UPTBL+X'81'
         DC    C'ABCDEFGHI'
         ORG   UPTBL+X'91'
         DC    C'JKLMNOPQR'
         ORG   UPTBL+X'A2'
         DC    C'STUVWXYZ'
         ORG
         END
