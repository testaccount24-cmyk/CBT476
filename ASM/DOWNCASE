         TITLE 'DOWNCASE - BUILT-IN ZIL 1.3 SUBROUTINE'
***********************************************************************
*                                                                     *
* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.   *
*                     All rights reserved.                            *
*                                                                     *
***********************************************************************
*                                                                     *
* THIS IS STRING-DOWNCASE.                                            *
*                                                                     *
***********************************************************************
DOWNCASE #ZBEG MINARGS=1,MAXARGS=1,NAME='STRING-DOWNCASE'
         #ZPDS 16                  DEFINE STACK SIZE
         #ZSAV ,                   SAVE REGISTERS
         SPACE
         L     #3,0(,#11)          LOAD ARG1
         CLI   ##TYPE(#3),##STRING IF ARGUMENT IS A STRING
         BE    ARG1OK              THEN OK
         CLI   ##TYPE(#3),##SYMBOL IF ARGUMENT IS A SYMBOL
         BNE   ERROR1              THEN
         L     #3,##PNAME(,#3)      TAKE THE PRINT NAME, ELSE ERROR
ARG1OK   DS    0H
         XR    #7,#7               CLEAR INSERT REGISTER
         ST    #3,0(,#11)          STORE BACK ON STACK FOR FUTURE USE
         ICM   #7,7,1(#3)          GET LENGTH OF STRING
         BZ    RETSELF             IF ZERO-LENGTH STRING, RETURN SELF
         LA    #14,##VECDAT(,#3)   POINT TO TEXT OF STRING
         LR    #15,#7              GET LENGTH
         LA    #0,256              SET UP CONSTANT 256
TRTLOOP  DS    0H                  LOOP TO SCAN STRING
         CR    #15,#0
         BNH   SHORTTRT
         TRT   0(256,#14),TRTTABLE SCAN FOR UPPER CASE CHARACTERS
         BNZ   COPYIT              IF WE FOUND ONE, WE HAVE TO COPY
         AR    #14,#0              ELSE BUMP UP POINTER TO TEXT
         SR    #15,#0              BUMP DOWN LENGTH
         B     TRTLOOP             AND CONTINUE SCANNING.
SHORTTRT DS    0H
         BCTR  #15,0               REDUCE LENGTH FOR EXECUTE
         EX    #15,EXTRT           SCAN FOR LOWER CASE CHARACTERS
         BZ    RETSELF             IF NO BAD CHARS, RETURN SELF
COPYIT   DS    0H                  UPPERCASE DATA, HAVE TO COPY
         LR    #2,#7               GET LENGTH INTO REG FOR ZILVSS
         XR    #1,#1               ENTRY CODE 0 = ALLOCATE NEW SPACE
         L     #15,ZLCVSS          GET ADDRESS OF ZILVSS
         LA    #0,16(,#11)         SET CURRENT STACK POINTER FOR GC
         #BASR #14,#15             CALL ZILVSS TO CREATE A STRING
         LTR   #4,#15              IF STRING BUILD FAILED
         BZ    ERROR2              THEN ERROR
         L     #1,0(,#11)          GET POINTER TO ORIGINAL STRING
         LA    #0,##VECDAT(,#1)    POINT TO STRING TEXT
         LA    #14,##VECDAT(,#4)   POINT TO WHERE TO MOVE STRING TEXT
         LR    #1,#7               GET LENGTH OF STRING TEXT TO MOVE
         LR    #15,#7
         MVCL  #14,#0              MOVE TEXT FROM OLD STRING TO NEW
         LA    #14,##VECDAT(,#4)   POINT TO TEXT OF STRING
         LR    #15,#7              GET LENGTH
         LA    #0,256              SET UP CONSTANT 256
TRLOOP   DS    0H                  LOOP TO TRANSLATE STRING
         CR    #15,#0
         BL    SHORTTR
         TR    0(256,#14),TRTABLE  TRANSLATE TO LOWER CASE
         AR    #14,#0              BUMP UP POINTER TO TEXT
         SR    #15,#0              BUMP DOWN LENGTH
         BZ    DONE
         B     TRLOOP              AND CONTINUE TRANSLATING.
SHORTTR  DS    0H
         BCTR  #15,0               REDUCE LENGTH FOR EXECUTE
         EX    #15,EXTR            TRANSLATE TO LOWER CASE
DONE     DS    0H                  ALL FINISHED
         LR    #15,#4              POINT TO NEWLY BUILT STRING
         B     RETURN              RETURN THE ATOM IN #15
         SPACE 1
RETSELF  DS    0H                  NULL STRING (OR NO UPPERCASE CHARS)
         LR    #15,#3              RETURN THE STRING PASSED
RETURN   DS    0H
         SPACE 1
         #ZRET ,                   RESTORE REGISTERS AND RETURN
         SPACE 1
EXTRT    TRT   0(*-*,#14),TRTTABLE EXECUTED: SCAN FOR UPPERCASE CHARS
EXTR     TR    0(*-*,#14),TRTABLE  EXECUTED: TRANSLATE TO LOWERCASE
         SPACE 1
TRTTABLE DC    256X'00'            TABLE TO SCAN FOR UPPERCASE CHARS
         ORG   TRTTABLE+C'A'
         DC    9XL1'FF'
         ORG   TRTTABLE+C'J'
         DC    9XL1'FF'
         ORG   TRTTABLE+C'S'
         DC    8XL1'FF'
         ORG   ,
         SPACE 1
TRTABLE  DC    256YL1(*-TRTABLE)   TABLE TO TRANSLATE TO LOWERCASE
         ORG   TRTABLE+C'A'
         DC    X'818283848586878889'
         ORG   TRTABLE+C'J'
         DC    X'919293949596979899'
         ORG   TRTABLE+C'S'
         DC    X'A2A3A4A5A6A7A8A9'
         ORG   ,
         SPACE 1
ERROR1   #ERR  'Argument to STRING-DOWNCASE not a string - ',(#3)
         SPACE 1
ERROR2   #ERR  PREFIX=NO,          NOT ENUF ROOM                       X
               'ZIL4010 STRING-DOWNCASE: Not enough vector/string spaceX
                to build string.'
         SPACE 1
         LTORG
         END
