
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; COPY-ENVIRONMENT
;;;
;;; This function builds an evaluation environment which contains the
;;; same components as another evaluation environment.
;;;
;;; All ZIL 1.3 code that needs to copy an environment should
;;; call this function.
;;;
;;; It takes 1 required arg - the environment to be copied.
;;;

(defmacro copy-environment-by-type (x)
 (let ((typical-env (funenv #'foo)))
      (cond
       ((listp typical-env)
        `(append ,x nil))
       (t (zerror "Environment is not a list, can't generate COPYENV.")
  ))))

(defun copyenv (env)
 (copy-environment-by-type env)
)

