
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; ZERROR
;;;
;;; This is the original ZIL "ERROR" function, renamed ZERROR so as
;;; not to conflict with Common Lisp ERROR.
;;;
;;; The first arg is assumed to be a message, and is therefore PRINC'd.
;;; The second arg is assumed to be a random value, and is therefore
;;; PRIN1'd.
;;; The &rest arg is assumed to be a list of random values, and is
;;; therefore PRIN1'd.
;;;
;;; Enhancement:  If the first arg is a list, all the elements in the
;;;               list are printed in succession.
;;;

(defun zerror (&optional (a nil a?) (b nil b?) &rest c)
 (when a?
       (when (< (msglevel) 3)
             (cterpri)
             (princ "Error: ")
             (if (atom a)
                 (princ a)
                 (dolist (i a) (princ i)))
             (when b?
                   (princ " - ")
                   (prin1 b))
             (dolist (i c) (princ " ") (prin1 i))
             (terpri)))
 (throw nil nil)
)

