
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This is the compiler transform for NTH.
;

(eval-when (eval)
 (deftrans nth zxnth)
)

(eval-when ()
 #.(defvar *zxnth-threshold* 4
    "The maximum value for which to transform NTH to CAR.")
)

(defun zxnth (xform xenv xcon)

 (cond

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; There must be exactly 2 arguments.  If not, skip transform.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  ((not (eql (length xform) 3))
   xform)

  (t
   (let* (
          (arg1 (cadr xform))
          (arg2 (caddr xform))
          (carg1 (zilcocon arg1 nil))
          (carg2 (zilcocon arg2 nil))
         )

         (cond

 ;
 ; Don't do this - we're not constant-folding list operations,
 ; because we're overly cautious about destructive operations.
 ;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;;;
 ;;; If both arguments are constant, perform the test at compile time.
 ;;;
 ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
 ;
 ;        ((and carg1 carg2)
 ;         (warn "Evaluating at compile time" xform)
 ;         `',(nth (car carg1) (car carg2)))
 ;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; Errors:
  ;;
  ;; (NTH not-a-nonnegative-fixnum x)
  ;; (NTH x not-a-list)
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

          ((and carg1 (not (and (fixnump (car carg1))
                                (not (minusp (car carg1))))))
           (zerror "Invalid first argument to NTH" xform))

          ((and carg2 (not (listp (car carg2))))
           (zerror "Invalid second argument to NTH" xform))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; (NTH 0 x) --> (CAR x)
  ;; (NTH 1 x) --> (CADR x)
  ;; (NTH 2 x) --> (CADDR x)
  ;; etc.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

          ((and carg1 (<= (car carg1) #.*zxnth-threshold*))
           (let ((f arg2))
                (dotimes (i (car carg1))
                         (setq f `(cdr ,f)))
                `(car ,f)))


  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; Otherwise, no transformations apply.  Return the original form.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

           (t xform))))))

