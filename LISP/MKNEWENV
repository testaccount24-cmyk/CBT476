
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; MAKE-NEW-ENVIRONMENT
;;;
;;; This function builds a fresh evaluation environment,
;;; lexically speaking.
;;;
;;; All ZIL 1.3 code that needs to construct a new environment should
;;; call this function.
;;;
;;; It takes 1 optional arg - the lexical alist.
;;; Default is a fresh lexical environment with no variables in it.
;;;

;
; The "environment" is currently a LIST that looks like this:
;
; (alistenv           - the interpreter's lexical variable bindings
;  progenv            - chain of PROG environments
;  argenv             - chain of LEXPR environments
;  specenv            - Pervasive SPECIAL variables
;  fletenv            - Locally defined functions (a la FLET)
;  mletenv            - Locally defined functions (a la MACROLET)
;  ...other stuff might be added as time goes on...
; )
;
; where progenv is a list of environments described in ZEVMACS.
; See ZEVMACS for details.
;
; SPECIAL variables are not part of the environment; being dynamic,
; they are found on the globally accessible "SPECIAL-ALIST".
;
; Macro definitions
;
; Note: These depend on the structure of the "environment" as
;       defined in ZEVMACS.
;
; To change the structure of the environment, it is necessary to
; change the definition of the structure in ZEVMACS, and to
; recompile ZILAPPLY and ZILEVAL to use this new definition.
;
; In sum:
;
; Check COPYENV, MKNEWENV, ZEVMACS, ZILAPPLY, and ZILEVAL
; when making changes to the structure of an ENVIRONMENT.
;

(defun mknewenv (&optional (alistenv nil))
 (list
   alistenv           ; the interpreter's lexical variable bindings
   nil                ; chain of PROG environments
   nil                ; chain of LEXPR environments
   nil                ; Pervasive SPECIAL variables
   nil                ; Locally defined functions (a la FLET)
   nil                ; Locally defined functions (a la MACROLET)
))

