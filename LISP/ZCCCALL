
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This compiles a call to a function, adding to the list of atoms
; and functions.
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

 (defun zcccall (f n v s e)
        (let ((dottedpair (assq f subrs)))   ; Find F if it is in list
          (unless dottedpair                 ; If so, return that subr
           (setq dottedpair                  ; Else create a new subr
                 (zilcosym f 'subrs))        ; Add pair to symbol table
           (or (eq (car name) f)             ; If not a recursive call
               (modq subrs dottedpair)))     ; then add it to the list

          `(call ,dottedpair ,n ,v ,s)))     ; Generate code to call it

