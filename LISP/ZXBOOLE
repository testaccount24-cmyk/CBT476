
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; The compiler transform for BOOLE.
;
; (BOOLE A B C D) --> (ZILBOOL A (ZILBOOL A B C) D)
;
; E.G. (DEFTRANS BOOLE ZXBOOLE)
;
; This replaces the old MXBOOLE "macro" expander.
;

(defun zxboole (x ignore1 ignore2 &aux (args (cdr x)))
 (cond
  ((null (cddr args))
   (zerror "Too few arguments" x))
  ((null (cdddr args))
   `(zilbool . ,args))
  ((fixp (car args))
   (zxboole-reverse (car args) (reverse (cdr args))))
  (t
   (let ((temp (gensym)))
        `(let ((,temp ,(car args)))
              ,(zxboole-reverse temp (reverse (cdr args))))))))

(defun zxboole-reverse (op args)
 (cond
  ((null (cddr args)) `(zilbool ,op ,(cadr args) ,(car args)))
  (t `(zilbool ,op ,(zxboole-reverse op (cdr args)) ,(car args)))))

