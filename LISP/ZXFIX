
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This is the compiler transform for CEILING, FLOOR, ROUND, TRUNCATE.
;

;
;***********************************************************************
;*                                                                     *
;* Change activity:                                                    *
;*                                                                     *
;* 06/20/88 - Support for multiple values.                             *
;*                                                                     *
;***********************************************************************
;

(defmacro possible-multiple-value-context-p ()
 `(memq (car xcon) '(:dummy :value :return :mvlist :mvbind)))

(defun zxfix (xform xenv xcon)

 (cond

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; There must be either 1 or 2 arguments.  If not, skip transform.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

  ((not (member (length xform) '(2 3)))
   xform)

  (t

   (let* ((function (car xform))
          (zilfixnum (cdr (or (assq function '((fix      . 4) ;FIX=FLOOR
                                               (truncate . 0)
                                               (floor    . 4)
                                               (ceiling  . 8)
                                               (round    . 12)))
                              (zerror "Invalid caller of ZXFIX" xform))))
          (arg1 (cadr xform))
          (carg1 (zilcocon arg1 nil))
          (arg2? (cddr xform))
          (arg2 (if arg2? (caddr xform) nil))
          (carg2 (if arg2? (zilcocon arg2 nil)))
         )

         (cond

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; If there is any possibility of multiple values being returned,
  ;; do not optimize.  Return the form as is.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

          ((possible-multiple-value-context-p)
           xform)

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; If there is only one argument, and it is a constant, perform the
  ;; operation at compile time.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

          ((and carg1 (not arg2?))
           (warn "Evaluating at compile time" xform)
           (funcall function (car carg1)))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; If there are two arguments, and they are both constant, perform
  ;; the operation at compile time.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

         ((and carg1 carg2)
          (warn "Evaluating at compile time" xform)
          (funcall function (car carg1) (car carg2)))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; If there is exactly 1 argument, convert to call to ZILFIX.
  ;;
  ;; e.g. (TRUNCATE FOO) --> (ZILFIX FOO 0)
  ;;      (FLOOR    FOO) --> (ZILFIX FOO 4)
  ;;      (CEILING  FOO) --> (ZILFIX FOO 8)
  ;;      (ROUND    FOO) --> (ZILFIX FOO 12)
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

         ((not arg2?)
          `(zilfix ,arg1 ,zilfixnum))

  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
  ;;
  ;; Otherwise, no transformations apply.  Return the original form.
  ;;
  ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

         (t xform))))))

