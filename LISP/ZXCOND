
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This is the compiler transform for COND.
;

(defun zxcond (xform xenv xcon)

 (prog (head tail body clause thenform thencon elseform)
  (setq head (car xform)  ; Should be 'COND.
        tail (cdr xform)
        body (cdr xform))
  ;;
  ;; (COND) --> NIL
  ;;
  (when (null body) (return nil))

 loop

  (setq clause (car body))
  ;;
  ;; (COND ... ATOM ...)  is an error
  ;;
  (when (atom clause)
        (zerror "Invalid COND clause (not a list)" clause))
  (setq thenform (car clause)
        thencon  (zilcocon thenform nil)
        elseform (cdr clause))
  (cond
   ;;
   ;; THEN clause not a constant - no optimization possible
   ;;
   ((null thencon)
    (go continue))
   ;;
   ;; (COND (A B) (NIL FOO BAR) (C D)) --> (COND (A B) (C D))
   ;;
   ((null (car thencon))
    (unless (null elseform)
            (warn "COND forms not executed due to false THEN clause"
                  elseform))
    (return (cons head (remq clause tail))))
   ;;
   ;; At this point the "then clause" is TRUE.
   ;;
   (t
    (when (cdr body)
          (warn "COND clauses skipped due to true THEN clause"
                (cdr body)))
    (return
     (if (eq (car tail) clause)
         ;;
         ;; (COND ('TRUE FOO BAR)) --> (PROGN FOO BAR)
         ;; (COND ('TRUE))         --> 'TRUE
         ;;
         (if (null elseform) thenform (cons 'progn elseform))
         ;;
         ;; (COND (A B) (T FOO BAR) (C D)) --> (COND (A B) (T FOO BAR))
         ;;
         (cons head (loop for oldform in tail
                          collect oldform
                          until (eq oldform clause)))))))

 continue

  (if (setq body (cdr body))     ; Next clause
      (go loop)
      (return xform))            ; No more optimizations apply

 )
)

(eval-when (eval)
 (deftrans cond zxcond))

