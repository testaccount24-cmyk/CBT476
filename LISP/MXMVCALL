
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
;***********************************************************************
;*                                                                     *
;* The macro expander for the MULTIPLE-VALUE-CALL macro.               *
;*                                                                     *
;* Yeah, I know this is supposed to be a special form in CL, but due   *
;* to the way the stack is handled in ZIL it doesn't pay.  It works    *
;* out much better to do it this way.                                  *
;*                                                                     *
;***********************************************************************
;
; Example:
;
; (MULTIPLE-VALUE-CALL #'FOO (BAR) (BAZ) (FROB))  -->
;
; (APPLY #'FOO (NCONC (MULTIPLE-VALUE-LIST (BAR))
;                     (MULTIPLE-VALUE-LIST (BAZ))
;                     (MULTIPLE-VALUE-LIST (FROB))))
;

(eval-when (eval)
 (defun multiple-value-call macro (x) (mxmvcall x))
)

(defun mxmvcall (x &aux (y (cdr x)))
 (cond
  ((null y)
   (zerror "Too few arguments" x))
  (t
   (let (((func . args) y)
        )
        `(apply ,func
                (nconc . ,(mapcar #'(lambda (x)
                                            `(multiple-value-list ,x))
                                  args)))))))

