
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
;"DEFRDMAC"
;
; This EXPR defines a reader macro, which may be a function name or
; a LAMBDA-expression.
;
; It uses the underlying low-level routine RDRMACRO to define the
; character specified as associated with the ZRMAPPLY SUBR, which
; applies the (possibly interpretive) function specified.
;
; The character must be an interned symbol with a one-character
; print name.
;
; The function must take one argument, which will be bound to the
; file name currently in use by READ when the macro is executed.
;
; Example:
;
; (defrdmac '|?| '(lambda (f) (cons 'questionmark (read f))))
;
; A FEXPR to permit quoteless defining of reader macros could be:
;
; (defun defrdrmacro fexpr (x)
;  (cond
;       ((and x (cdr x) (null (cddr x))) (defrdmac (car x) (cadr x)))
;       (t (error "Wrong number of arguments - DEFRDRMACRO"))))
;
;

(defargs zrmapply 1 1 nil)

(defun defrdmac (c f)
 (rdrmacro c (subr zrmapply))
 (putprop '*readermacro* f (rdmac-symbol c))
 c
)

(defun rdmac-symbol (c)
 (cond
  ((symbolp c) c)
  ((stringp c) (intern c))
  ((fixnump c) (ebcdic c t))
  (t (zerror "DEFRDMAC: Invalid reader macro character" c))))
