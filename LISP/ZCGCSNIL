
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;**********************************************************************
;*                                                                    *
;* ZCGCSNIL processes the CSETNIL order.                              *
;*                                                                    *
;**********************************************************************

;
;***********************************************************************
;*                                                                     *
;* Created 04/25/88.                                                   *
;*                                                                     *
;* 04/25/88 - Support for determination of superfluous initializations *
;*            of PROG and &AUX variables to NIL.  This involves two    *
;*            new fields in the contour that are used to detect cases  *
;*            of a variable unconditionally being set before it is     *
;*            ever referenced.  This is an extension of, and replaces, *
;*            the SETQ-initialization-hacking scheme used in ZCCPROG.  *
;*            This also requires a new P-code form, CSETNIL, and a new *
;*            code generator module, ZCGCSNIL.                         *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgcsnil (a) ;
 (prog (
        b   ; the dotted pair describing the conditionally set variable
        v   ; the usual
        s   ; the usual
       )
       (desetq (b v s) a)

       (when debug
             (putdata b v s)
             (putdata (plist (cdr b)))
       )
       (if (get (cdr b) 'mustinit)            ; If used before SETQ
           (zcggetit (list nil v s))          ; then do set to NIL
           (zcgsttrg nil s)                   ; else just push stack ptr
       )))

