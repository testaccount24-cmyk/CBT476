
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
;***********************************************************************
;*                                                                     *
;* The macro expander for the MULTIPLE-VALUE-SETQ macro.               *
;*                                                                     *
;***********************************************************************
;
; Example:
;
; (MULTIPLE-VALUE-SETQ (A B C) (FOOBAR))  -->
;
; (MULTIPLE-VALUE-BIND (G00001 G00002 G00003) (FOOBAR)
;                      (SETQ A G00001 B G00002 C G00003)
;                      G00001)
;

(eval-when (eval)
 (defun multiple-value-setq macro (x) (mxmvsetq x))
)

(defun mxmvsetq (x &aux (y (cdr x)))
 (cond
  ((or (null y) (null (cdr y)))
   (zerror "Too few arguments" x))
  ((not (null (cddr y)))
   (zerror "Too many arguments" x))
  (t
   (let* (((vars form) y)
          (mvvars)
         )
         (do ((vars vars (cdr vars))
             )
             ((null vars))
             (when (atom vars)
                   (zerror "Improper variable list" x))
             (unless (symbolp (car vars))
                     (zerror "Invalid MULTIPLE-VALUE-SETQ variable"
                            (car vars)))
             (push (gensym) mvvars)
         )
        `(multiple-value-bind ,mvvars ,form
                              (setq . ,(do ((vars vars (cdr vars))
                                            (mvvars mvvars (cdr mvvars))
                                            (z nil)
                                           )
                                           ((null vars) (nreverse z))
                                           (push (car vars) z)
                                           (push (car mvvars) z)
                                       ))
                              ,(car mvvars))))))

