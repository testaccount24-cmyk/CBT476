
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This generates code for BEGINLAM, which marks the start of an
; inline LAMBDA expression in the function position of a form.
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgblam  (a)
 (prog
       (naym  ; a GENSYM that holds info about the lambda
        parmz ; the arguments from the arglist
        v     ; an item to receive the value if SETQ is involved
        s     ; the target of the value to be set
        m     ; the new stack height
        b     ; the argument base used to compute offsets of args
       )
  (desetq (naym parmz v s) a)
  (setq b (car argbase))
;
; Code to assign offsets to the args.
;
  (loop for arg in parmz
   (setf (get (cdr arg) 'offset)
         (+ b (* (1- (get (cdr arg) 'position)) 4)))
   (setf (get (cdr arg) 'position) nil)
  )
;
; If there are &AUX args or supplied-p args defined for the lambda,
; or destructured args,
; we have to bump the top-of-stack pointer more, because no args
; have been passed for these guys (ZCGSTTRG was bumping (CAR PDMAX)
; for each arg stored).
;

 (setq m (loop for arg in parmz
               count (or (get (cdr arg) 'aux)
                         (get (cdr arg) 'owned))))

 (unless (zerop m)
         (setq pdmax
               (cons (setq m (+ (* m 4) (car pdmax)))
                     (cdr pdmax)))
                        ; Increment the top element of stack PDMAX
         (if (> m stackmax)
             (setq stackmax m))) ; and reset the high water mark.
;
; Stack alist pointers.
;
; The CAR of the top slot of each will be filled in by BIND requests
; subsequently, if any non-local bindings are required.  Otherwise
; the top slot will remain null-carred, indicating that nothing
; special (n.p.i.) is to be done with this pseudocontour.
;

  (push nil special-asaved) ; Will be filled in by BIND requests later.
  (push nil fluid-asaved)   ; Will be filled in by BIND requests later.

 )
)
