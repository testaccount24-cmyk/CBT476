
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************


 ; READLIST kludge for Macsyma only.
 ;
 ; This READLIST hack assumes that it is passed a list of characters
 ; (fixnums) or symbols (representing single characters)
 ; except for the SYMBOL slash, which represents an escape character.
 ; This is how it is used in SUPRV.
 ;
 ; Will probably not go away, since this one simulates Maclisp syntax,
 ; unless READ-FROM-STRING or something can handle this.
 ;

 (defun readlist (a)
  (prog (z c car numeric?)
        (setq numeric? t)
   loop
      (cond
       ((null a)
        (return (zilimpl (nreverse z) t numeric?)))
       ((eq (setq car (zcar a)) '/)
        (setq a (cdr a)
              numeric? nil
              c (ebcdic (zcar a)))) ; Assume always followed by fixnum.
       ((symbolp car)
        (setq c car)) ; Assume already upper case.
       (t
        (setq c (ebcdic (char-upcase car)))))
      (push c z)
      (setq a (cdr a))
      (go loop)))

(defload readlist zmsreadl)

