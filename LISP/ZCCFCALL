
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; This routine compiles FUNCALL invocations.  It is similar to
;;; ZCCEVAL, except that the number of args is not checked, and
;;; the name of the compiled function to be called is ZILXFUN,
;;; which the code generator checks for specially.
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zccfcall (args v s e)
 (let ((n (+ (length args) 4)))    ; Gotta allow 4 extra stack slots.
      (if  (< n 5)
       then
           (modq body `(error "No function arg to FUNCALL" nil))
       else
           (modq body `(begincall zilxfun ,n ,v ,s))
           (modq body '(setnil nil nil (arg (1 zilxfun))))
           (modq body '(setnil nil nil (arg (2 zilxfun))))
           (modq body '(setnil nil nil (arg (3 zilxfun))))
           (modq body '(setnil nil nil (arg (4 zilxfun))))
           (loop for i from 5 to n
                 do
                    (zccevcom (car args) nil `(arg (,i zilxfun)) e)
                    (setq args (cdr args))
           )
           (modq body (zcccall 'zilxfun n v s e))
       endif)))

