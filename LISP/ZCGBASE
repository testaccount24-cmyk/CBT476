
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
;***********************************************************************
;*                                                                     *
;* This function generates code to (re)load additional base registers. *
;* It is invoked only when a function has a BASEREG property.          *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgbase (naym usingp)
 (case usingp
       ((nil) (push nil codelist))
       (t     (zerror "ZCGBASE called with USINGP. No longer valid."))
 )
)

;
; Old code, no longer in use.
;
;(defun zcgbase (naym usingp &aux b g)
;(setq b (get (car naym) 'basereg))
;(case b
; ((nil 1)) ; do nothing
; (2
;    (zcgenout nil "LA"   "7,4095(,12)"    "Load second base register.")
;    (if usingp
;        (zcgenout nil "USING" `(,(cdr naym) "+4095,7")            nil))
; )
; (3
;    (setq g (zcgbase-label b naym usingp))
;    (zcgenout nil "LM" `("6,7," ,g)  "Load additional base registers.")
;    (if usingp
;        (zcgenout nil "USING" `(,(cdr naym) "+4096,7,6")          nil))
; )
; (4
;    (setq g (zcgbase-label b naym usingp))
;    (zcgenout nil "LM" `("5,7," ,g)  "Load additional base registers.")
;    (if usingp
;        (zcgenout nil "USING" `(,(cdr naym) "+4096,7,6,5")        nil))
; )
; (t (error "Invalid base register specification" b))
;))
;
;
;(defun zcgbase-label (b naym usingp &aux lbl1 lbl2 adcons)
;(when usingp
; (putprop (cdr naym) (setq lbl1 (gensym)) 'baselabel)
; (zcgenout nil "B" (setq lbl2 (gensym)) "Branch around base adcons.")
; (setq adcons
;       (case b
;             (3 (string-append "A(" (cdr naym) "+8192,"
;                                    (cdr naym) "+4096)"))
;             (4 (string-append "A(" (cdr naym) "+12288,"
;                                    (cdr naym) "+8192,"
;                                    (cdr naym) "+4096)"))
;       ))
; (zcgenout lbl1 "DC" adcons nil)
; (zcgenout lbl2 "DS" "0H"   nil)
;)
;(get (cdr naym) 'baselabel)
;)
;
;
;
; Even older code, no longer in use.
;
;;(when (integerp b)
;;
;; (when (> b 1)
;;  (zcgenout nil "LA"    "7,4095(,12)"    "Load second base register.")
;;  (if usingp
;;   (zcgenout nil "USING" `(,(cdr naym) "+4095,7")                nil))
;;  (when (> b 2)
;;   (zcgenout nil "LA"    "6,4095(,7)"     "Load third base register.")
;;   (if usingp
;;    (zcgenout nil "USING" `(,(cdr naym) "+8190,6")               nil))
;;   (when (> b 3)
;;    (zcgenout nil "LA"   "5,4095(,6)"    "Load fourth base register.")
;;    (if usingp
;;     (zcgenout nil "USING" `(,(cdr naym) "+12285,5")             nil))
;;
;;  ))))))

