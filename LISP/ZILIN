
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; The ZIL 1.3 Interpreter.
;
; Note: Top-level specials defined in ZEVINIT.
;

 (declare (special *version*))

 ;;;(zevinit) ; ZIL system initialization is now done from ZILINIT.

 (set-feature 'zilin)

 (princ "LISP interpreter (ZIL ")
 (princ *version*)
 (princ #.(string-append ") - Compiled " (ppdate)))
 (terpri)
 (princ "Type (NEWS) for news, (HELP) for help, (EXIT) for exit.")
 (terpri)

 (setabend t)                   ; Activate ABEND interception.

;
; Note: Attention handling is not available while loading the INIT file
;       (unless (SETATTN T) and a (CATCH T ...) are coded therein).
;

 (catch nil
  (let ((parm (string-upcase (getparm nil))))
   (cond
    ((not (eql parm ""))
     (princ "Loading INIT file ")
     (princ parm)
     (princ ".")
     (terpri)
     (load parm :verbose nil :print t)
     (terpri)
    )
    ((catch nil (ifilep 'init))   ; If INIT exists, load it.
     (princ "Loading INIT file.")
     (terpri)
     (read-eval-print 'init)
     (terpri)
    )
    (t
     (princ "No INIT file in use.")
     (terpri)
    ))))

 (setattn  t)                   ; Activate attention handling.

 (read-eval-print nil)          ; READ-EVAL-PRINT loop on std. input.

 (setattn  nil)                 ; Deactivate attention handling.
 (setabend nil)                 ; Deactivate ABEND handling.

 (princ "LISP interpreter (ZIL ")
 (princ *version*)
 (princ ") ended.")
 (terpri)

