
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; This is equivalent to Common LISP (SUBST NEW OLD X :TEST #'EQ).
;
; This definition has been rewritten to be more similar to
; Guy Steele's definition - see CLtL, p. 274.
;
; Note that the "satisfies-the-test" part is conditional based on
; the "atom" test, since non-atomic elements can never be EQL.
; We can do this for SUBSTQ and SUBSTQL, but not SUBSTQUA.
;

(defun substq (new old x)
 (cond
  ((atom x) (if (eq old x) new x))
  (t        (let ((kar (substq new old (car x)))
                  (kdr (substq new old (cdr x))))
                 (if (and (eq kar (car x))
                          (eq kdr (cdr x)))
                     x
                     (cons kar kdr))))))

(defload car zcar)

