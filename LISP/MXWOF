
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

; The macro expander for WITH-OPEN-FILE.
;
; e.g.
;
;  (WITH-OPEN-FILE (FILEVAR FILENAME FILEOPT1 FILEOPT2)
;   (DO STUFF)
;   (DO MORE STUFF)
;   (DO EVEN MORE STUFF)
;  )
;
;  -->
;
;  (LET ((FILEVAR (OPEN FILENAME '<appropriate option>)))
;       (UNWIND-PROTECT (PROGN (DO STUFF)
;                              (DO MORE STUFF)
;                              (DO EVEN MORE STUFF)
;                       )
;                       (CLOSE FILENAME '<option>)
;       )
;  )
;
; Note that only the first of any OPEN options is used.
;

(eval-when (eval)
 (defmacro with-open-file ((filevar filename &rest fileopts) . body)
           (mxwof filevar filename fileopts body)
 )
)

(defun mxwof (filevar filename fileopts body
              &aux
              (openopt (car fileopts))
              (closeopt openopt)
              (gfn (gensym)))
 (multiple-value-bind (nil declarations newbody mxform mxvalidp)
                      (parse-body body)
  (when mxvalidp (setq newbody (cons mxform (cdr newbody))))
  (when declarations (setq declarations `((declare . ,declarations))))
  `(let* ((,gfn (open ,filename ,openopt))
          (,filevar ,gfn)  ; to keep user from altering filename var
         )
         ,.declarations
         (unwind-protect (progn . ,newbody)
                         (close ,gfn ,closeopt)))))

