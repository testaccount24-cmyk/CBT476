
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;**********************************************************************
;*                                                                    *
;* This module generates code to initialize an UNWIND-PROTECT frame.  *
;*                                                                    *
;* An UNWIND-PROTECT frame looks just like a CATCH frame, except that *
;* it is two fullwords longer and the tag slot contains hex zeroes.   *
;*                                                                    *
;* See ZCCUWP or ZILTHROW for details on the contents of this frame.  *
;*                                                                    *
;**********************************************************************
;
;***********************************************************************
;*                                                                     *
;* Change activity:                                                    *
;*                                                                     *
;* 04/08/88 - Support for GO and RETURN out of UNWIND-PROTECT.         *
;* 06/23/88 - Support for PROG and RETURN removed.  Support for        *
;*            GO and RETURN-FROM out of UNWIND-PROTECT remains,        *
;*            of course.                                               *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgbuwp (a)
 (prog
       (
        l1  ; the label of the cleanup forms code
        l2  ; the label of the cleanup forms return location
      ; v   ; not used
      ; s   ; not used
        c   ; the current stack location where the UWP frame will go
        n   ; the new stack location following the UWP frame
       )

       (desetq (l1 l2 () ()) a)    ; Get labels.

;
; Push UNWIND-PROTECT frame space on the stack.
;
       (setq c (car pdmax))    ; UWP frame goes here on stack.
       (setq n (+ c 36))       ; Bump stack past UWP frame.
       (push n pdmax)          ; Stack height.
       (if (> n stackmax)
           (setq stackmax n))  ; High water mark.
;
; Push an UNWIND-PROTECT contour on the saved-things-to-unstack lists.
;
       (let ((x (cons 'uwp c)))
            (push x special-asaved)
            (push x fluid-asaved))
;
; Generate code to build the UNWIND-PROTECT frame.
;
       (zcgemit 4 () "L"  "14,ZLCCATCH"       "Get active catch frame.")
       (zcgemit 4 () "ST" `("14," ,c "(,11)") "Store into UWP frame.")
       (zcgemit 4 () "L"  "14,ZLCSALST"       "Get special ALIST.")
       (zcgemit 4 () "L"  "15,ZLCFALST"       "Get lexical ALIST.")
       (zcgemit 2 () "XR" "0,0"               "Set tag slot = zeroes.")
       (zcgemit 4 () "LA" `("1," ,l1)  "Address of cleanup forms code.")
       (zcgemit 4 () "STM" `("11,1," ,(+ c 4) "(11)")
                                            "Store all into UWP frame.")
       (zcgemit 4 () "LA" `("14," ,l2) "Where to return after cleanup.")
       (zcgemit 4 () "ST" `("14," ,(+ c 12) "(,11)")
                                                "Store into UWP frame.")
       (zcgemit 4 () "LA" `("14," ,c "(,11)")   "Address of UWP frame.")
       (zcgemit 4 () "ST" "14,ZLCCATCH"      "Make active catch frame.")
 )
)

