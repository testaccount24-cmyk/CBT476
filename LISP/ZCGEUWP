
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;**********************************************************************
;*                                                                    *
;* This module generates code that finishes up UNWIND-PROTECT forms.  *
;*                                                                    *
;**********************************************************************

;
;***********************************************************************
;*                                                                     *
;* Change activity:                                                    *
;*                                                                     *
;* 05/01/88 - More arguments to ZCGSTVRS.                              *
;* 06/23/88 - Support for PROG and RETURN removed.                     *
;* 08/25/88 - Fix "Register 1 not available for CONS" compiler bug.    *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgeuwp (a) ;
 (prog
       (
        l2 ; the label to which UNWIND-PROTECT cleanup forms return
        v  ; an item to receive the value if SETQ is involved
        s  ; the target of the value to be set
        c  ; the offset of the UNWIND-PROTECT stack frame
        r  ; a register to hold the return value from the protected form
       )

  (desetq (l2 v s) a)
;
; Pop the UNWIND-PROTECT frame off the stack.
;
  (setq pdmax (cdr pdmax)      ; Pop stack height.
        c     (car pdmax))     ; Current stack height is frame.
;
; Get a register, preferably \15 if target is T.
;
  (setq r (zcggtbst s))
;
; Generate the code.
;
  (zcgemit 4 () "L"  `("15," ,(+ c 12) "(,11)")  "Load return address.")
  (zcgemit 4 () "LA" `("14," ,c "(,11)")   "Set address of this frame.")
  (zcgemit 2 () "BR" "15"                   "Branch to return address.")
  (zcgemit 0 l2  "DS"  "0H"          "Continue if not called by THROW.")
  (zcgemit 4 () "L"  `(,r "," ,(+ c 32) "(,11)")
                                      "Load value from protected form.")

;;; Code deleted to insure that register r gets released
;;(or v s (return nil)) ; No side effects, so do nothing if no V/S

  (zcgstvrs r v s t)    ; Store reg into SETQ variables if any.
  (zcgsttrg r s)        ; Set target to register if any.

 )
)
