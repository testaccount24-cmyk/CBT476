
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; (defun flatc    (x) (zilflat x nil))
; (defun flatsize (x) (zilflat x t  ))
;

(defun zilflat (x p)
 (cond
  ((null x)    3) ; length of "NIL"
  ((consp x)   (prog (n)
                     (setq n 1)
                loop
                     (setq n (+ 1 n (zilflat (zcar x) p)))
                     (when (setq x (cdr x))
                           (if (atom x)
                               (return (+ 3 n (zilflat x p)))
                               (go loop)))
                     (return n)))
  ((vectorp x) (if (zerop (vlength x))
                   3
                   (1+ (zilflat (vlist x) p))))
  ((funargp x) (+ #.(+ (string-length "<FUNARG ") (string-length " >"))
                  (zilflat (funfun x) p)))
  ((structp x) (+ #.(+ (string-length "<STRUCT ")
                       (string-length " >")
                       -2)              ; subtract 2 for vlist parens
                  (zilflat (vlist x) p)))
  (t           (string-length (tostring x p)))))

