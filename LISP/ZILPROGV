
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; ZILPROGV
;
; See the macro definition for PROGV for how this is used.
;
; Note: lambda-expr is assumed to be a lexical closure.
;
; UNWIND-PROTECT is not needed, since THROW always resets the
; SPECIAL-ALIST anyhow.
;
;
;***********************************************************************
;*                                                                     *
;* Change activity:                                                    *
;*                                                                     *
;* 06/14/88 - Support for multiple values.                             *
;*                                                                     *
;***********************************************************************
;

(defun zilprogv (variable-list value-list lambda-expr
                 &aux (savespec (special-alist)))
 (do ((varlist variable-list (cdr varlist))
      (vallist value-list (cdr vallist))
     )
     ((null varlist))
     (push (cons (zcar varlist)
                 (if vallist (zcar vallist) (zilunbnd)))
           (special-alist)))
 (multiple-value-prog1
  (funcall lambda-expr)
  (setf (special-alist) savespec)
 )
)

