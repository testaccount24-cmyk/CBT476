
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; LOAD used to have an optional second argument, which is the file
;;;        to print the results of evaluations on - this can be
;;;        specified as the symbol NOPRINT to suppress such printing.
;;;
;;;            Thus (LOAD "foo(bar)" 'NOPRINT) did "silent" loading
;;;            (well, almost silent, since the "Loading" message
;;;            still appears).
;;;
;;; Now, LOAD is Common-LISP-compatible, so you can't use 'NOPRINT.
;;;

(declare (special *load-verbose* *loadfile*))

(defun load (d &key (verbose            *load-verbose*)
                    (print              nil)
                    (if-does-not-exist  t))

 (if (and (null if-does-not-exist)
          (null (probe-file d)))
     nil
     (let ((ud (string-upcase d)))
      (with-open-file (f d :input)
       (when verbose
;;;;;;;;(format t "~%;Loading ~A.~&" ud)
        (cterpri)
        (princ ";Loading ")
        (princ ud)
        (princ ".")
        (terpri)
       )
       (let ((*loadfile* ud))
        (read-eval-print f (if print nil 'noprint))
       )
      )
      t
     )
     ))

