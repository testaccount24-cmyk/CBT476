
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; "ZCGIASSQ"
;;;
;;; This routine generates the inline code for ASSQ.
;;;
;;; The registers on input were selected according to the principle
;;; that R3 is to be the return value register, and R2 and R3 cannot
;;; be register 0 (although R1 could conceivably be).
;;;
;;; Actually, R3 is selected by this routine, based on the "s" argument.
;;;
;;; This function must release registers R1 and R2, and return R3.
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgiassq (r1 r2 v s com &aux r3
                                    (newr1 r1)
                                    (lb (gensym))
                                    (lf (gensym))
                                    (lx (gensym)))
 (zcgrels r1)
 (zcgrels r2)

 (when (eq r1 '\15)
  (setq newr1 (zcgresv '\0))
  (zcgemit 2 () "LR" `("0," ,r1)                             com)
 )
 (setq r3 (zcggtbst s))

 (zcgresv '\14)

 (unless (eq r2 '\15)
  (zcgemit 2 () "LR" `("15," ,r2)                            com)
 )
 (zcgemit 2 lb "CR"  "15,10"                                 com)
 (zcgemit 4 () "LM"  "14,15,##CAR(15)"                       com)
 (zcgemit 4 () "BE"  lf                                      com)
 (zcgemit 4 () "C"   `(,newr1 ",##CAR(,14)")                 com)
 (zcgemit 4 () "BNE" lb                                      com)
 (zcgemit 2 () "LR"  `(,r3 ",14")                            com)
 (zcgemit 4 () "B"   lx                                      com)
 (zcgemit 2 lf "LR"  `(,r3 ",10")                            com)
 (zcgemit 0 lx "DS"  "0H"                                    com)

 (zcgrels '\14)
 (when (eq r1 '\15) (zcgrels '\0))

 r3
)

