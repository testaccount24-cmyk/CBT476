
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************


;**********************************************************************
;*                                                                    *
;* "ZCGDEF"                                                           *
;*                                                                    *
;**********************************************************************

;
;***********************************************************************
;*                                                                     *
;* Change activity:                                                    *
;*                                                                     *
;* 05/01/88 - More arguments to ZCGSTVRS.                              *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zcgdef  (a) ;
 (prog
       (b   ; the function (dotted pair)
        v   ; an item to receive the value if SETQ is involved
        s   ; the target of the value to be set
        r   ; a register to be used
        l   ; a location label for the V-con associated with the subr
        sub ;
       )
       (desetq (b v s) a)
       (setq r (zcgresv '\15) ) ; Value is always in this register.
       (zcgresv '\0)
       (zcgresv '\2)
       (zcgresv '\14)
;
; Note that B is a dotted pair with the function name and a symbol.
;
       (setq l (or (get (cdr b) 'location)
                   (putprop (cdr b) (gensym) 'location)))

; Get subr ZILXDEF.

       (setq sub (or (assq 'zilxdef subrs)
                     (zerror "No SUBR for ZILXDEF!" b)))

       (zcgemit 4 () "L" `("2," ,l) `("Load address of " ,(cdr b)))

       (zcgemit 4 () "L"    `("15," ,(or (get (cdr sub) 'location)
(putprop (cdr sub) (gensym) 'location))) "Get address of ZILXDEF.")

       (zcgemit 4 () "LA" `("0," ,(car pdmax) "(,11)")
                                           "Load top-of-stack pointer.")

       (zcgemit 2 () "BALR" "14,15" "Call ZILXDEF to define function.")

       ;;; ZCGBASE does not need to be called - ZILXDEF will save regs

;
; At this point the return value will be in register 15.
;
       (zcgstvrs r v s t)    ; Store reg into SETQ variables if any.
       (zcgsttrg r s)        ; Set target to register if any.
       (zcgrels '\0)         ; Free the register.
       (zcgrels '\1)         ; Free the register.
       (zcgrels '\2)         ; Free the register.
       (zcgrels '\14)        ; Free the register.
 )
)
