
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
; The macro expander for the POP macro.
;

 (eval-when (eval)
  (defmacro pop (a &optional b) (mxpop a b))
 )

 (defun mxpop (stack into)
  (let (pop1 g1 g2)
       (setq pop1
             (if   (symbolp stack)
              then
                   `(prog1 (car ,stack) (setf ,stack (cdr ,stack)))
              else
                   (setq g1 (gensym))
                   `(let ((,g1 ,stack))
                         (prog1 (car ,g1) (setf ,stack (cdr ,g1))))
             ))

       (if   into
        then
             (setq g2 (gensym))
             `(let ((,g2 ,pop1)) (setf ,into ,g2))
        else
             pop1)))



