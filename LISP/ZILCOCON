
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; ZILCOCON
;;;
;;; This function is used to determine if a given form is "constant"
;;; (i.e. self-evaluating).
;;;
;;; It returns NIL if not, and a CONS whose CAR is the value of the
;;; constant if it is.
;;;
;;; Note:  The CDR of the form is currently not used, but in the
;;;        future may be set to the type of the constant.
;;;        For this reason, the environment E must be passed, in
;;;        case it contains type declarations or other meaningful
;;;        stuff, you never know.
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(eval-when ()
 #.(defvar zilcocon-type nil "Eventually will be T or (TYPEP object)")
)

(defun zilcocon (x e)
 (cond
  ((or (null x)
       (and (symbolp x) (eq (pbind x) x))
       (and (atom x) (not (symbolp x))))
   (cons x #.zilcocon-type))
  ((and (consp x)
        (eq (car x) 'quote)
        (consp (cdr x))
        (null (cddr x)))
   (cons (cadr x) #.zilcocon-type))
  (t nil)))

