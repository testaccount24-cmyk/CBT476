
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; This is as close to Common Lisp EQUALP as I can get right now.
;;;

(eval-when (compile)
 (deftrans car (x) `(zcar . ,(cdr x)))
)

(defun equalp (a b)
 (or
  (and (numberp a)
       (numberp b)
       (zilequal a b))
  (and (consp a)
       (consp b)
       (equalp (car a) (car b))
       (equalp (cdr a) (cdr b)))
  (and (stringp a)
       (stringp b)
       (eql (string-upcase a) (string-upcase b)))
  (and (vecp a)
       (vecp b)
       (equalp (vlist a) (vlist b)))
  (eql a b)
 ))

