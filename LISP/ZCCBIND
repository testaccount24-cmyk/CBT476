
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; "ZCCBIND"
;;;
;;; This takes a binding and makes it SPECIAL, FLUID or whatever.
;;;
;;; It also creates an atom for the variable, so code can be
;;; generated to reference the variable by name.
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zccbind (x type)

 (when debug
       (cterpri)
       (princ "ZCCBIND called to bind ")
       (prin1 x)
       (princ " as ") (prin1 type) (terpri)
 )

 (let ((a (zilcoadd (car x) nil)))  ; Make an atom for the variable

  (putprop (cdr x) t 'mustinit) ; If PROG var, must be initialized.
  (putprop (cdr a) t 'real)   ; Show atom will really be referenced.
  (putprop (cdr x) (cons type a) 'bindingtype)

 ) ; end LET

 (when debug
       (princ "Bindingtype property: ")
       (prin1 (get (cdr x) 'bindingtype))
       (terpri)
 )

)
