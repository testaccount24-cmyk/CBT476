
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;;;
;;; This routine compiles VALUES invocations.  It is similar to
;;; ZCCEVAL, except that the number of args is not checked.
;;;
;;; VALUES is considered to be an "inline" function, since the
;;; generated code consists of a call to the ZILSUBS routine
;;; ZILVALS, with appropriate registers set.  Examples:
;;;
;;; (VALUES a b c)
;;;
;;;          L     #0,a
;;;          ST    #0,xxx+0(,#11)
;;;          L     #0,b
;;;          ST    #0,xxx+4(,#11)
;;;          L     #0,c
;;;          ST    #0,xxx+8(,#11)
;;;          XR    #0,#0               tells VALUES to scan & return
;;;          LA    #1,xxx(,#11)        stack location of values
;;;          LA    #2,3                number of values
;;;          L     #15,ZLCVALS
;;;          BALR  #14,#15             Call ZILVALS
;;;
;;; In the case of (VALUES <form>), where exactly one value is
;;; being returned, the call to ZILVALS can be optimized out,
;;; since this behavior is essentially the same as a form returning
;;; one value "normally".  However, in case such a call occurs in
;;; tail-recursive position, we must force single-value-returning.
;;; This is done as follows:
;;;
;;; (VALUES form)
;;;
;;;          L     #15,form            Evaluate the form
;;;          LR    #15,#15             Force single-value return
;;;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zccvals (args v s e &aux (l (length args)))
 (modq body `(begininline values ,l ,v ,s))
 (do ((args args (cdr args))
      (i 1 (1+ i))
     )
     ((null args))
     (zccevcom (car args) nil `(arg (,i values)) e)
 )
 (modq body `(inline values ,l ,v ,s)))

