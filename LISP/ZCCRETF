
;***********************************************************************
;*                                                                     *
;* ZIL (c) Copyright 1989 The Charles Stark Draper Laboratory Inc.     *
;*         All rights reserved.                                        *
;*                                                                     *
;***********************************************************************

;
;***********************************************************************
;*                                                                     *
;* This processes RETURN-FROM.                                         *
;*                                                                     *
;***********************************************************************
;

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(include #.(zil-source-member zilmacs))

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

(defun zccretf (b e)  ; B = body, E = environment
 (cond
  ((null b)
   (modq body '(error "Missing block name" return-from)))
  ((null (cdr b))
   (process-return-from (car b) nil e))
  ((null (cddr b))
   (process-return-from (car b) (cadr b) e))
  (t
   (modq body `(error "Too many arguments" (return-from . ,b))))))

(defun process-return-from (rfname rfform e &aux p)
 (setq p (cdr (assq rfname (zilcec-return-tags (car e)))))
 (cond
  ((null p)
   (modq body `(error "No BLOCK by this name to RETURN-FROM" ,rfname)))
  (t
   (zccevcom rfform nil `(goto ,p) e)
   ;
   ; All contours up to AND INCLUDING the contour associated with the
   ; RETURN-FROM are marked permanently conditional.
   ;
   (loop with c = (get p 'contour)
         for cec in e
         do (setf (zilcec-permcond cec) t)
         until (eq cec c)))))              ; Note placement of UNTIL!!!

