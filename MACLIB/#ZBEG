         MACRO
&SYMB    #ZBEG &NAME='NIL',&MAIN=YES,&TYPE=FUNCTION,                   X
               &GOTO=ZLBSTART,&PTRS=,                                  X
               &PDSIZE=0,&CSSIZE=0,&VSSIZE=0,&ACSIZE=0,                X
               &ATOMS=NIL,&SUBRS=NIL,&LISTS=NIL,                       X
               &MINARGS=1,&MAXARGS=0,&RESTARG=NIL,                     X
               &LEXPR=NIL,                                             X
               &AMODE=24,&RMODE=24
.**********************************************************************
.*                                                                    *
.* ZIL Version 1.3 (c) 1989 The Charles Stark Draper Laboratory Inc.  *
.*                     All rights reserved.                           *
.*                                                                    *
.**********************************************************************
.*                                                                    *
.* SUPPORT CODE FOR ALL COMPILED ZIL MAINLINE PROGRAMS.  THIS IS THE  *
.* FIRST CODE IN THE CONTROL SECTION.  REGISTER 14 CONTAINS THE       *
.* RETURN ADDRESS ON ENTRY.  REGISTER 15 POINTS TO BEGINNING OF CODE. *
.*                                                                    *
.* MEANING OF THE "MAIN" AND "TYPE" PARAMETERS:                       *
.*                                                                    *
.* A TOPLEVEL PROGRAM HAS TYPE=PROGRAM.  ITS MAIN PROCEDURE IS NAMED  *
.* ZILMAIN AND HAS MAIN=YES.                                          *
.*                                                                    *
.* A FUNCTION (WHICH CAN BE BROUGHT IN VIA LINKEDIT)                  *
.* HAS TYPE=FUNCTION.  ITS EPONYMOUS DEFINITION HAS MAIN=YES.         *
.*                                                                    *
.* ANY FUNCTIONS INTERNAL TO THE MAIN CODE HAVE MAIN=NO.              *
.*                                                                    *
.**********************************************************************
.*                                                                    *
.* NOTE:  DEFAULT IS MINARGS=1 AND MAXARGS=0, SO THAT ANY FUNCTION    *
.*        THAT OMITS THESE OPERANDS WILL GET AN ERROR IF EXECUTED.    *
.*                                                                    *
.**********************************************************************
         GBLA  &ZSVARGS
         GBLB  &MAINP,&PROGP,&ZILTHRU
         GBLB  &ZILMVS,&ZIL370,&ZILXA,&ZILVF,&ZILCMS,&ZILTSO,&ZILVPS
         GBLC  &ZILAR,&ZILARH
         LCLB  &SBIT,&PBIT,&RBIT,&LBIT
         LCLC  &ATOMSS,&ATOMSE,&LISTSS,&LISTSE
         LCLC  &BITS1,&BITS2
&ZILAR   SETC  'ZILA&SYSNDX'
&ZILARH  SETC  'ZILB&SYSNDX'
&MAINP   SETB  0
&PROGP   SETB  0
         AIF   ('&TYPE'(1,1) NE 'P').NOTPROG
&PROGP   SETB  1
.NOTPROG ANOP
         AIF   ('&MAIN'(1,1) NE 'Y').NOTMAIN
&MAINP   SETB  1
.NOTMAIN ANOP
.*
.* SET MODULE HEADER BITS
.*
&SBIT    SETB  ('&SUBRS' NE 'NIL')
&PBIT    SETB  (&PROGP)
&RBIT    SETB  ('&RESTARG' NE 'NIL')
&LBIT    SETB  ('&LEXPR' NE 'NIL')
&BITS1   SETC  '&SBIT.&PBIT.000000'
&BITS2   SETC  '&RBIT.&LBIT.000000'
.*
.* SET GLOBAL # OF ARGS TO DEFAULTLY SAVE ON STACK PER #ZSAV MACRO
.*
&ZSVARGS SETA  &MAXARGS
         AIF   (NOT &RBIT).NZSVINC
&ZSVARGS SETA  &MAXARGS+1
.NZSVINC ANOP
.*
.* GENERATE MAPPING MACROS ONCE ONLY
.*
         AIF   (&ZILTHRU).ZILBYP
&ZILTHRU SETB  1
         #ZSYS ,                   DEFINE TARGET OPERATING SYSTEM
         #ZEQU ,                   DEFINE ALL EQUATES
         #ZCOM ,                   MAP THE COMMON AREA
         #ZSFT ,                   DEFINE SMALL FIXNUM TABLE
.ZILBYP  AIF   (NOT &MAINP OR NOT &PROGP).L1
.*
.* ONLY IF MAINP AND PROGP
.*
ZILMAIN  CSECT
         AIF   (NOT &ZILXA).NOMODES
ZILMAIN  AMODE &AMODE
ZILMAIN  RMODE &RMODE
.NOMODES ANOP
         AGO   .L2
.L1      ANOP
.*
.* ALL OTHER CASES
.*
         AIF   (NOT &MAINP).NOCS1
.*
.* ONLY IF MAINP
.*
&SYMB    CSECT
         AGO   .AFTCS1
.NOCS1   ANOP
.*
.* ONLY IF NOT MAINP
.*
&SYMB    DS    0D
.AFTCS1  ANOP
.L2      ANOP
.*
.* ALL TOGETHER NOW
.*
         B     &ZILARH-*(,15)      BRANCH AROUND IDENTIFIER
         DC    YL1(&ZILAR-*-1)
         DC    C&NAME
         DC    C' &SYSDATE &SYSTIME '
&ZILAR   EQU   *                   END OF IDENTIFIER
         AIF   (NOT &MAINP OR NOT &PROGP).L3
.*
.* ONLY IF MAINP AND PROGP
.*
         DS    0A                   FIELDS USED BY LOADER, INTERPRETER
         DC    B'&BITS1'            SUBR/PROGRAM INDICATORS
         DC    B'&BITS2'            RESTARG/LEXPR INDICATORS
         DC    YL1(&MINARGS)        MINIMUM # OF ARGUMENTS FOR FUNCTION
         DC    YL1(&MAXARGS)        MAXIMUM # OF ARGUMENTS FOR FUNCTION
&ZILARH  DS    0H                  START OF CODE
         STM   14,12,12(13)        SAVE REGISTERS
         LR    12,15               ESTABLISH BASE REGISTER
         USING ZILMAIN,12
         LA    1,ZLBSAVE           GET LENGTH OF SAVE AREA
         ST    13,4(,1)            CHAIN SAVE AREAS
         ST    1,8(,13)
         LR    13,1
         L     1,ZLBSTPTR          PASS EXECUTABLE CSECT CODE TO INIT.
         LINK  SF=(E,ZLBINIT)      LINK TO INITIALIZATION MODULE
         STM   14,12,12(13)        SAVE REGS IN OUR OWN SAVE AREA
         L     13,8(,13)           SET REG 13 TO POINT TO COMMON AREA
         USING ZLCOMMON,13         ESTABLISH ADDRESSABILITY TO COMMON
         LR    1,11                POINT TO INITIAL STACK LOCATION
         L     15,ZLBSTPTR         ADDRESS COMPILED CODE
         BALR  14,15               CALL COMPILED CODE
         L     2,ZLCRETCD          LOAD RETURN CODE
         L     13,4(,13)           SET REG 13 TO POINT TO OUR AREA
         ST    2,28(,13)           STORE REG 2 (RET CODE) IN SAVE AREA
         LM    14,12,12(13)        RESTORE REGS IN OUR OWN SAVE AREA
         DROP  13
ZLBRET   DS    0H
         LINK  SF=(E,ZLBTERM)      LINK TO TERMINATION MODULE
         L     13,4(,13)           RESTORE HIGHER SAVEAREA
         ST    2,16(,13)           STORE RETURN CODE IN SAVE AREA
         LM    14,12,12(13)        RESTORE REGISTERS WITH RETURN CODE
         BR    14                  RETURN TO SYSTEM
         SPACE 2
ZLBSAVE  DS    18A                 TOP LEVEL SAVE AREA
ZLBSTPTR DC    A(&SYMB)            ADDRESS OF START OF EXECUTABLE CODE
ZLBINIT  LINK  SF=L,EP=ZILINIT     LINK TO INITIALIZATION MODULE
ZLBTERM  LINK  SF=L,EP=ZILTERM     LINK TO TERMINATION MODULE
         SPACE 1
         DROP  12
.L3      ANOP
.*
.* THIS IS FOR EVERYBODY
.*
         EJECT
         AIF   (NOT &MAINP OR NOT &PROGP).NOCS2
.*
.* ONLY IF MAINP AND PROGP
.*
&SYMB    CSECT
.NOCS2   ANOP
.*
.* ALL TOGETHER AGAIN
.*
         SPACE 2
         USING &SYMB,15
         USING ZLCOMMON,13
         USING #SFTD,8
         AIF   (NOT &MAINP OR NOT &PROGP).L4
.*
.* ONLY IF MAINP AND PROGP
.*
         B     &GOTO               BRANCH AROUND ADDRESSES
.L4      ANOP
         AIF   (&MAINP AND &PROGP).L5
.*
.* ONLY IF NOT (MAINP AND PROGP)
.*
         DS    0A                   FIELDS USED BY LOADER, INTERPRETER
         DC    B'&BITS1'            SUBR/PROGRAM INDICATORS
         DC    B'&BITS2'            RESTARG/LEXPR INDICATORS
         DC    YL1(&MINARGS)        MINIMUM # OF ARGUMENTS FOR FUNCTION
         DC    YL1(&MAXARGS)        MAXIMUM # OF ARGUMENTS FOR FUNCTION
.L5      ANOP
         AIF   (&PROGP).L6
.*
.* ONLY IF NOT PROGP
.*
         AIF   (NOT &SBIT).NOSUBRS
         DC    A(&SUBRS.S,&SUBRS.E) ADDRESS OF EXTERNAL SUBROUTINES
.NOSUBRS ANOP
.L6      ANOP
         AIF   ('&ATOMS+&LISTS' EQ 'NIL+NIL' AND NOT &PROGP).LA
         AIF   (NOT &MAINP AND '&PTRS' EQ 'NIL').LA
.*
.* ONLY IF MAINP OR WE HAVE PTRS
.*
&ATOMSS  SETC  '0'
&ATOMSE  SETC  '0'
&LISTSS  SETC  '0'
&LISTSE  SETC  '0'
         AIF   ('&ATOMS' EQ 'NIL').NOATOMS
&ATOMSS  SETC  '&ATOMS.S'
&ATOMSE  SETC  '&ATOMS.E'
.NOATOMS AIF   ('&LISTS' EQ 'NIL').NOLISTS
&LISTSS  SETC  '&LISTS.S'
&LISTSE  SETC  '&LISTS.E'
.NOLISTS ANOP
         AIF   (NOT &MAINP OR NOT &PROGP).L6A
.*
.* ONLY IF MAINP AND PROGP
.*
&ATOMSS  SETC  'ZILATOMS'
&ATOMSE  SETC  'ZILATOME'
&LISTSS  SETC  'ZILLISTS'
&LISTSE  SETC  'ZILLISTE'
.L6A     ANOP
.* THE FOLLOWING FIELDS MUST MATCH THE DECLARATION IN MACRO #ZHDR.
&PTRS    DS    0A                   POINTERS USED BY INITIALIZATION
         DC    A(&ATOMSS,&ATOMSE)   ADDRESSES OF INLINE SYMBOLS
         DC    A(&LISTSS,&LISTSE)   ADDRESSES OF INLINE LISTS
         AIF   (NOT &MAINP OR NOT &PROGP).LA
.*
.* ONLY IF MAINP AND PROGP
.*
         DC    A(ZILOPTS)          ADDRESS OF OPTIONS LIST
         DC    V(ZILMODS)          ADDRESS OF ZIL MODULES TABLE
ZILOPTS  DS    0A
ZILPDSIZ DC    A(&PDSIZE)          PUSH DOWN LIST SIZE
ZILCSSIZ DC    A(&CSSIZE)          SIZE OF CONS SPACE
ZILVSSIZ DC    A(&VSSIZE)          SIZE OF VECTOR/STRING SPACE
ZILACSIZ DC    A(&ACSIZE)          SIZE OF ACTIVE CONS SPACE
ZILOPTE  EQU   *                   END OF OPTIONS LIST
&GOTO    DS    0H                  CODE STARTS HERE
         AGO   .LEND
.LA      ANOP
         AIF   (&MAINP AND &PROGP).LEND
.*
.* FOR ALL EXCEPT MAINP-AND-PROGP
.*
&ZILARH  DS    0H                  START OF CODE
.LEND    ANOP
         MEND
