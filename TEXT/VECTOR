
Function: VECTOR

Syntax:   (VECTOR &rest args)

 Any number of arguments may be specified.

 arg (evaluated) - any LISP object.

Returns:

 A vector #(arg1 arg2 ... argn).

Processing:

 A new vector is built, of length equal to the number of elements
 specified, and the elements are initialized to the specified values.

Errors signaled:

 Not enough vector space to build vector.

Notes:

 (VECTOR 'a 'b 'c) is equivalent to #(a b c) in the interpretive
 environment, but in the compiled environment the former builds a new
 vector from the specified elements each time it is executed, while the
 latter is not supported by the compiler (at least not at this time).
 Since vectors may be modified during execution of the program, you
 MUST use VECTOR or MKVECTOR to build then dynamically from compiled
 functions.

Examples:

 (VECTOR)               ==> #()
 (VECTOR NIL)           ==> #(NIL)
 (VECTOR 'A)            ==> #(A)
 (VECTOR 'A 'B)         ==> #(A B)
 (VECTOR '(A B) 'C)     ==> #((A B) C)
 (VECTOR 1 2 3 4 5 6 7) ==> #(1 2 3 4 5 6 7)

