
Function: ECHO

Syntax:   (ECHO file1 &optional file2 arg3)

 arg1 (required, evaluated) - an input file name.
 arg2 (optional, evaluated) - an output file name.
 arg3 (optional, evaluated) - any LISP object, but generally T or NIL.

Returns:

 NIL, after ECHO mode has been set on or off for input file file1.

Processing:

 If file2 is omitted, ECHO mode is set off for file1.
 If file2 is specified, it is made the "ECHO" file for file1. All input
 from file1 is echoed, character for character, onto output file file2.

 An input file cannot have more than one echo output file associated
 with it.  If file1 already has an echo file when (ECHO file1 file2)
 is issued, that echoing relationship is terminated.

 If arg3 is specified and non-NIL, the echoing takes place even if
 both file1 and file2 are allocated to the terminal.  The default
 mode of operation is to disable echoing when this is true, since
 all input can be seen and it would be unnecessary to have it displayed
 a second time.

 If file2 gets closed while file1 is echoing to it, file1 is
 unaffected except that echoing ceases to take place.  Reopening
 file2 is not sufficient to get echoing started again; the ECHO
 function must be reissued to reinstate echoing.

Errors signaled:

 Invalid input file object (not a symbol 4 characters or less).
 Invalid output file object (not a symbol 4 characters or less).
 Specified input file is not allocated or could not be opened.
 Specified ouyput file is not allocated or could not be opened.

Notes:

 See member $FILE for more information on file names.

Examples:

 (ECHO NIL NIL) specifies that all input from standard input is to
 be printed on standard output unless both are allocated to the
 terminal.

 (ECHO NIL NIL NIL) is equivalent to the above.

 (ECHO NIL NIL T) specifies that all input from standard input is to
 be printed on standard output, even if both are allocated to the
 terminal.

 (ECHO NIL) terminates echo mode for standard input.

