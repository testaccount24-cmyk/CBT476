
Macro: MULTIPLE-VALUE-SETQ

Syntax:   (MULTIPLE-VALUE-SETQ list1 form2)

 list1 (required, not evaluated) - a list of variables.
 form2 (required, evaluated)     - any LISP object.

Returns:

 The first value returned by form2, after all the values returned by
 form2 are assigned to the variables in list1.

Processing:

 form2 is evaluated with the expectation that multiple values may be
 returned.  The values are then assigned to the variables in list1
 (which must be symbols) in order, according to the following rules:

  If there are fewer values than variables, the remaining variables
  are set to NIL.

  If there are more values than variables, the excess values are
  ignored.

 Note that if the form returns no values, all of the variables are
 set to NIL.  If the form returns a single value (for example, it
 is not a multiple-value-returning function at all), then the first
 variable in list1 receives the value and the others (if any) are
 set to NIL.

 Note that no new bindings are created.  The variables are assigned
 exactly as they would be by SETQ.

Errors signaled:

 Too few or too many arguments.
 Invalid variable list (errors detected by SETQ).

Notes:

 Compare MULTIPLE-VALUE-BIND, which creates a new binding environment
 with new variable names.

 See VALUES and VALUES-LIST for information on how multiple values
 are returned from a function.

 See Guy Steele's "Common LISP: The Language", pp. 133-139, for
 an explanation of multiple values in LISP.  Although the constant
 MULTIPLE-VALUES-LIMIT is not defined in ZIL, returning more than
 4095 multiple values is not supported.

 In many cases, use of multiple values in ZIL is more expensive than
 just consing up a list of the values and extracting the values from
 the list via destructuring.  In any case, out of all the forms that
 request multiple values, only MULTIPLE-VALUE-BIND in compiled code
 is guaranteed not to cons in ZIL.

Examples:

 (DECLARE (SPECIAL A B C D E F G))    ==> NIL

 (MULTIPLE-VALUE-SETQ (A    ) (VALUES 1 2 3 4))   ==> 1
 (MULTIPLE-VALUE-SETQ (B C  ) (VALUES 5 6 7 8))   ==> 5
 (MULTIPLE-VALUE-SETQ (D E F) (VALUES 9))         ==> 9
 (MULTIPLE-VALUE-SETQ (G    ) (VALUES))           ==> NIL
 A  ==> 1
 B  ==> 5
 C  ==> 6
 D  ==> 9
 E  ==> NIL
 F  ==> NIL
 G  ==> NIL

