
Function: ZILEXPL

Syntax:   (ZILEXPL arg1 &optional arg2 arg3)

 arg1 (required, evaluated) - an atom.
 arg2 (optional, evaluated) - any LISP object, but generally T or NIL.
 arg3 (optional, evaluated) - any LISP object, but generally T or NIL.

Returns:

 A list of either single-character symbols or fixnums, corresponding to
 the character representation of arg1 as printed out via PRINC or PRIN1.

Processing:

 arg1 is converted to the character representation which it has when it
 is printed - as it looks via either PRINC or PRIN1, depending on arg3.

 Each character in this representation is then used to build either a
 single-character symbol or a fixnum, depending on arg2; all of these
 are then consed together to form a list, which is returned as the
 value.

 arg2 defaults to NIL.  Processing is as follows, depending on the
 value of arg2:

  If arg2 is NIL, the objects generated are uninterned symbols.
  If arg2 is T, the objects generated are interned symbols.
  If arg2 is a fixnum, the objects generated are fixnums (characters).

 arg3 defaults to NIL.  If arg3 is specified and non-NIL, the argument
 is processed as it looks when it is printed out via PRIN1 (i.e. it is
 "slashified"); otherwise it is processed as it looks when it is
 printed out via PRINC.

Errors signaled:

 arg1 is a list, vector or structure, which cannot be exploded.

Notes:

 This function underlies EXPLODE, EXPLODEC and EXPLODEN.

Examples:

 (ZILEXPL '|007| NIL NIL) ==> (|0| |0| |7|)           ; all uninterned
 (ZILEXPL '|007| NIL T  ) ==> (|\|| |0| |0| |7| |\||) ; all uninterned
 (ZILEXPL '|007| T   NIL) ==> (|0| |0| |7|)           ; all interned
 (ZILEXPL '|007| T   T  ) ==> (|\|| |0| |0| |7| |\||) ; all interned
 (ZILEXPL '|007| 0   NIL) ==> (#\0 #\0 #\7)           ; all fixnums
 (ZILEXPL '|007| 0   T  ) ==> (#\| #\0 #\0 #\7 #\|)   ; all fixnums

