
Macro: PUTDATA

Syntax:   (PUTDATA &rest forms)

 form (optional, not evaluated) - any LISP form that can be evaluated.

Returns:

 T, after the forms and their values are printed on the standard output
 file in "A=B,C=D" format.

Processing:

 Each form and its value is printed in turn on standard output, with
 an equal sign between the form and the value.  Commas separate
 successive forms, if there are more than one specified.

 It is insured that output begins on a new line, and a TERPRI is done
 at the end; all the output ends up on the same line as far as
 is possible.  To get multiline output, issue multiple PUTDATA's.

 This macro is primarily for debugging purposes, to display the
 values of variables or LISP expressions at various points in a
 program.  As you may have guessed, it is inspired by the PL/1
 "PUT DATA" statement.

Errors signaled:

 None (evaluation errors are trapped).

Notes:

 Currently PUTDATA with no arguments is accepted and essentially
 just does a TERPRI.

 PUTDATA is particularly useful in conjunction with the AT and OFF
 tracing macros.  See AT, OFF and $TRACE for examples of usage.

Examples:

 (setq a 'foo b 'bar)

 (putdata a b (cons a b))    results in the following being printed:

 A=FOO,B=BAR,(CONS A B)=(FOO . BAR)

