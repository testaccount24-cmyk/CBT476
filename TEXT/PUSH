
Macro: PUSH

Syntax:   (PUSH item1 place2)

 item1  (required, evaluated) - any LISP object.
 place2 (required           ) - a form acceptable to SETF which
                                evaluates to a list.

Returns:

 place2, after item1 has been CONSed to the front of it.

Processing:

 place2 is typically a variable, but in general is any form acceptable
 as the first argument to SETF.  item1 is CONSed onto the front of the
 list specified by place2, and the augmented list is stored back into
 place2 and returned as the value.

 Conceptually, this is a "push" operation on a push-down stack.
 Compare POP and PUSHNEW.

Errors signaled:

 None.

Notes:

 PUSH is a macro that expands something like this:

  (PUSH a b)  --> (SETF b (CONS a b))

 At the present time, the macro expansion does not guarantee 100%
 clean one-time evaluation of the second argument.  Thus, if you
 code something like

  (PUSH 'a (GET (foo) (bar)))

 it may expand into something like

  (SETF (GET (foo) (bar)) (CONS 'a (GET (foo) (bar))))

 which means that although the GET will be evaluated only once
 (since the SETF will translate the first GET into the
 appropriate PUTPROP or whatever), (foo) and (bar) may be
 evaluated twice each.  This may be fixed some day; if it is,
 you may or may not be informed of the upgrade.

Examples:

 (SETQ A '(FOO))          ==> (FOO)
 (PUSH 'BAR A)            ==> (BAR FOO)
 A                        ==> (BAR FOO)
 (PUTPROP 'A 'V 'P)       ==> V
 (GET 'A 'P)              ==> V
 (PUSH 'BAZ (GET 'A 'P))  ==> (BAZ . V)
 (GET 'A 'P)              ==> (BAZ . V)

