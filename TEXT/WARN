
Function: WARN

Syntax:   (WARN arg1 &optional arg2 &rest args)

 arg1 (required, evaluated) - any LISP object, but generally a string.
 arg2 (optional, evaluated) - any LISP object.
 args (optional, evaluated) - any LISP object.

Returns:

 NIL, after arg1 (and the other arguments, if non-NIL) are printed to
 the standard output file.

Processing:

 The first argument is assumed to be a message, and is therefore
 written to the standard output file via PRINC.

 If the second argument is not NIL, it is assumed to be a random LISP
 value, and is therefore written to the standard output file via PRIN1,
 with a dash separating the two values.

 If the rest of the args are present, they are assumed to be more
 random LISP values, and are therefore written to the standard output
 file in succession via PRIN1.

 A TERPRI is then issued to the standard output file, and a THROW to
 tag NIL is issued with a return value of NIL to be passed back to the
 most recent CATCH for tag NIL, if one exists.

 Generally, the first argument is a warning message, and the second
 argument is the object in question that is being warned about.

 If the current message level is greater than 1, no writing to the
 standard output file takes place.

Errors signaled:

 None.

Notes:

 Compare ERROR, which does a THROW to tag NIL to signal an error.
 WARN takes no such action.

Examples:

 (WARN "Larks' vomit!")    will print:

  Warning: Larks' vomit!

 on the standard output file and return NIL.

 (SETQ A "value-of-a")
 (WARN "Invalid argument" A)   will print:

  Warning: Invalid argument - "value-of-a"

 on the standard output file and return NIL.

