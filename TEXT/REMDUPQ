
Function: REMDUPQ

Syntax:   (REMDUPQ arg1)

 arg1   (required, evaluated) - a proper list.

Returns:

 A list consisting of all the elements of arg1, but with duplicate
 elements removed.

Processing:

 A new list is built (through repeated CONS'ing) from the elements
 of the list specified by arg1.  If any element of the list is EQ
 to an element already in the list, it is not included; thus any such
 elements occur only once in the returned list.

 Note that only top-level elements of the list are considered;
 non-atomic elements are NOT recursively processed by REMDUPQ.

 Compare REMDUPQL, which is like REMDUPQ but uses an EQL test.

Errors signaled:

 None.

Notes:

 No checking is done as to the validity of the arguments.  Unpredictable
 results will occur if arg1 is not a proper list.

 Keep in mind that EQ, not EQL, is used for the comparisons.
 Thus, only symbols, in general, will work as the first argument.

Examples:

 (REMDUPQ '(F O O B A R B A Z F R O B)) ==> (F O B A R Z)

 (REMDUPQ '((F O O) (F O O) (B A R)))   ==> ((F O O) (F O O) (B A R))
                                            ; Test is EQ, not EQUAL.

 (REMDUPQ '(2.0 1.0 4.0 7.0 4.0 8.0))   ==> (2.0 1.0 4.0 7.0 4.0 8.0)
                                            ; Test is EQ, not EQL.

