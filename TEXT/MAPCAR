
Function: MAPCAR

Syntax:   (MAPCAR arg1 arg2 ... argn)

 At least 2 arguments must be specified.

 arg1 (required, evaluated) - a symbol or LAMBDA-expression.
 arg2 (optional, evaluated) - a proper list.
 argn (optional, evaluated) - a proper list.

Returns:

 The list of values generated by the application of the function
 specified by the first argument to the elements of the lists specified
 by the other arguments.

Processing:

 The function specified by the first argument is applied to each of
 the elements (CAR's) of the lists specified by the other arguments.
 A list is built of these values as they are generated, and returned
 as the value of the MAPCAR call.

 Processing ends as soon as one of the lists is exhausted
 (i.e. becomes NIL).

Errors signaled:

 Invalid number of arguments (function and at least 1 list required).

Notes:

 See member $MAP of this documentation for more information on what
 may be coded on a mapping function.

Examples:

 (MAPCAR #'CAR '((A B) (C D) (E F)))  ==> (A C E)

 (MAPCAR #'(LAMBDA (X) (CONS X X)) '(A B C D E))
                         ==>  ((A . A) (B . B) (C . C) (D  . D) (E . E))

 (MAPCAR #'CONS '(A B C) '(D E F))    ==> ((A . D) (B . E) (C . F))

 (MAPCAR #'+ '(1 2 3 4) '(50 60))   ==> (51 62)

 (MAPCAR #'(LAMBDA (A B C) (LIST A B C))
         '(1 2 3) '(4 5 6) '(7 8 9)) ==> ((1 4 7) (2 5 8) (3 6 9))

