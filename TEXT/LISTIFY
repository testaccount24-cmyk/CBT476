
Special Form: LISTIFY

Syntax:   (LISTIFY &optional arg1)

 arg1 (optional, evaluated) - NIL or an integer.

Returns:

 If arg1 is omitted or NIL, the list of arguments to the currently
 active LEXPR.

 If arg1 is a positive integer, a list of the first arg1 arguments
 to the currently active LEXPR.

 If arg1 is a negative integer, a list of the last arg1 arguments
 to the currently active LEXPR.

Processing:

 If n is greater than the number of arguments, the entire list of
 arguments is returned.

Errors signaled:

 LISTIFY issued outside a LEXPR.
 Invalid argument.

Notes:

 No error checking is done in compiled code.  Results are unpredictable
 if an invalid argument is passed.

 See member $LEXPR for information about LEXPR's.

Examples:

 (defun foo x
  (declare (special y))
  (listify y)
 )                     ==> FOO

 (defun bar (y z)
  (declare (special y))
  (apply #'foo z)
 )                     ==> BAR

 (bar nil nil)         ==> NIL
 (bar nil '(a))        ==> (A)
 (bar nil '(a b))      ==> (A B)
 (bar 0   '(a b c d))  ==> NIL
 (bar 1   '(a b c d))  ==> (A)
 (bar 2   '(a b c d))  ==> (A B)
 (bar 3   '(a b c d))  ==> (A B C)
 (bar 4   '(a b c d))  ==> (A B C D)
 (bar 5   '(a b c d))  ==> (A B C D)
 (bar -1  '(a b c d))  ==> (D)
 (bar -2  '(a b c d))  ==> (C D)
 (bar -3  '(a b c d))  ==> (B C D)
 (bar -4  '(a b c d))  ==> (A B C D)
 (bar -5  '(a b c d))  ==> (A B C D)

