
Special Form: BLOCK

Syntax:   (BLOCK name1 &rest forms)

 name1 (required, not evaluated) - asymbol.
 form  (optional, evaluated)     -

Returns:

 The last of the forms, unless a RETURN-FROM with a block name of name1
 is executed during evaluation of the forms in the BLOCK, in which case
 the value returned by the RETURN-FROM form becomes the return value.

Processing:

 The first argument is a symbol which names the block.

 The rest of the forms in the BLOCK constitute the body of the BLOCK,
 and are processed like an implicit PROGN.

 If a RETURN-FROM form is evaluated during execution of the forms in
 the block, and the block name specified on the RETURN-FROM is EQ to
 name1, the block is exited, returning the value returned by the
 RETURN-FROM form.  This applies only if the block is not shadowed
 by another block of the same name being invoked during execution
 of this block, of course.

 Blocks may be nested; a block shadows an outer block of the same name.

Errors signaled:

 Missing or invalid block name.

Notes:

 See HELP member RETURNFR for more information about RETURN-FROM and
 restrictions pertinent thereto, particularly those which involve
 functionality available under the interpreter but not (as yet) in
 compiled code.

 RETURN-FROM is valid as long as it is lexically apparent in
 the code.  This means that it will be processed as long as it is
 not the product of function evaluation.  The following are
 valid occurrences of RETURN-FROM:

 (BLOCK FOO (DO 'SOMETHING) (RETURN-FROM FOO T))
 (BLOCK BAR1
        (BLOCK BAR2
               (COND ((EQ A T) (RETURN-FROM BAR2 A))
                     (T (PROGN (PRINT 1) (RETURN-FROM BAR1))))))


 The following is NOT valid:

 (DEFUN SUMFUNK () (RETURN-FROM NOGOOD 'Z))
 (BLOCK NOGOOD (SUMFUNK))

 A "No matching RETURN-FROM block name" error will be signalled.

Examples:

 (BLOCK A 1 2 3)                    ==> 3
 (BLOCK A 1 2 (RETURN-FROM A 4) 3)  ==> 4

