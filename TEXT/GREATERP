
Function: GREATERP

Syntax:   (GREATERP arg1 arg2)
    or:   (> arg1 &rest args)

 arg1 (required, evaluated) - a number, string or symbol.
 arg2 (required, evaluated) - a number, string or symbol.
 args (optional, evaluated) - a number, string or symbol.

Returns:

 For symbols and strings:

  T if the print name of each arg is alphanumerically greater than its
  preceding arg (using the EBCDIC collating sequence), else NIL.

 For numbers:

  T if each arg is numerically greater than its preceding arg,
  else NIL.

Processing:

 For GREATERP, which takes exactly two args, the following holds:

  If the arguments are EQ, regardless of type, the result is
  always false (i.e. NIL is returned).

  If both arguments are numbers, a numeric comparison is performed.
  If the types differ, the appropriate conversion is performed (see
  member $ARITH for conversion rules) and the numeric compare is done.

  If both arguments are strings or symbols, a character comparison is
  performed on the string text of the atoms, where the string text of
  a symbol is its print name.  Case is significant.

 For >, which takes any number of args, the result is T if there is only
 one arg, or if all the args are monotonically increasing (adjacent
 pairs are compared via GREATERP); otherwise the result is NIL.

Errors signaled:

 Non-atomic argument.
 One argument is a string or symbol and another is a number.

Notes:

Examples:

 (GREATERP 'FOO 'FOO)   ==> NIL
 (GREATERP 'A 'B)       ==> NIL
 (GREATERP 'AAA 'A)     ==> T
 (GREATERP 'FOO 'BAR)   ==> T
 (GREATERP "foo" "bar") ==> T
 (GREATERP "FOO" 'BAR)  ==> T
 (GREATERP 'FOO  "BAR") ==> T
 (GREATERP 2.0 3)       ==> NIL
 (GREATERP 1 1.0)       ==> NIL

 (> 9)                  ==> T
 (> 9 8)                ==> T
 (> 9 8 7)              ==> T
 (> 9 8 7 6)            ==> T
 (> 9 8 6 7 5)          ==> NIL

