
Function: COPY-TREE

Syntax:   (COPY-TREE list1)
    or:   (COPYTREE list1)

 list1 (required, evaluated) - any LISP object.

Returns:

 A copy of list1 which shares no CONSes with it.

Processing:

 If list1 is an atom, it is returned.  Otherwise, a new copy of list1
 is built by consing COPY-TREE of (car list1) with COPY-TREE of
 (cdr list1).

 The resulting list is EQUAL, but not EQ, to the original list, as are
 all its non-atomic elements.

Errors signaled:

 None.

Notes:

 It may be useful to use COPY-TREE to make updatable copies of inline
 compiled lists, which can otherwise not be updated without potentially
 compromising the integrity of the LISP system.

Examples:

 (COPY-TREE 'A)            ==> A
 (COPY-TREE '(A B))        ==> (A B)
 (COPY-TREE '(A (B) C))    ==> (A (B) C)
 (SETQ X '((A B) C . D))   ==> ((A B) C . D)
 (SETQ Y (COPY-TREE X))    ==> ((A B) C . D)
 (EQ X Y)                  ==> NIL
 (EQUAL X Y)               ==> T
 (EQ (CAR X) (CAR Y))      ==> NIL
 (EQUAL (CAR X) (CAR Y))   ==> T

