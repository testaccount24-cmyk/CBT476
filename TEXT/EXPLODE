
Function: EXPLODE

Syntax:   (EXPLODE arg1)

 arg1 (required, evaluated) - any LISP object.

Returns:

 A list of single-character symbols corresponding to the
 character representation of arg1 as printed out via PRIN1.

Processing:

 arg1 is converted to the character representation which it has when it
 is printed - as it looks via PRIN1.  Each character in this
 representation is then used to build a symbol whose print name is that
 single character, and all of these symbols are interned on the oblist
 and consed together to form a list, which is returned as the value.

Errors signaled:

 None.

Notes:

 Compare EXPLODEC, which is similar but uses the representation
 generated by PRINC.

 Previous releases of ZIL had an optional argument to EXPLODE that
 specified whether or not to intern the generated symbols.  EXPLODE
 now interns all symbols; to get the old behavior, use ZILEXPL, an
 internal function that takes 2 optional arguments.  The second
 optional argument to ZILEXPL specifies whether to use PRIN1 (T)
 or PRINC (NIL) style exploding; EXPLODEC uses the latter.

Examples:

 (EXPLODE 'A)     ==> (A)
 (EXPLODE NIL)    ==> (N I L)
 (EXPLODE 007)    ==> (|7|) ; note that this is the symbol |7|,
                              ; not the fixnum 7.
 (EXPLODE '|007|) ==> (|\|| |0| |0| |7| |\||) ; note symbols all.
 (EXPLODE "hi")   ==> (|"| |h| |i| |"|)

 (EXPLODE '|a b|)        ==> (|\|| |a| | | |b| |\||)
 (EXPLODEC '|a b|)       ==> (|a| | | |b|)
 (EXPLODE "abc")         ==> (|"| |a| |b| |c| |"|)
 (EXPLODEC "abc")        ==> (|a| |b| |c|)

