
Function: ZPUTFPI

Syntax:   (ZPUTFPI arg1 &optional arg2)

 arg1 (required, evaluated) - a fixnum.
 arg2 (optional, evaluated) - an input file name.

Returns:

 arg1, which updates the current character pointer of the input file
 specified by arg2.

Processing:

 The fixnum value of arg1 replaces the current character position in the
 file block for the file specified by arg2, and is itself returned.

 The value is a 1-based column value, and should be between 1 and the
 logical line length of the input file.  If 0 is specified, the input
 file appears to all read operations as if end-of-file had occurred.
 If -1 is specified, the input file appears to all read operations
 as if end-of-line had occurred.
 If a value greater than the line length is specified, a new line
 condition is forced, but other results are unpredictable.

 The effect of changing the current input file pointer is:

 (1) to cause data on the current line to be re-read if the value is
     decreased, or
 (2) to cause data on the current line to be skipped if the value is
     increased.

 arg1, if omitted, defaults to NIL, which represents the standard input
 file.

 The value of the current character pointer for an input file is
 altered implicitly by input functions like READ, READCH and TYI.

Errors signaled:

 Invalid input file object (not a symbol 4 characters or less).
 Specified input file is not allocated or could not be opened.
 First argument not a fixnum.

Notes:

 See member $FILE for more information on file names.

 Use of an out-of-range value as the first argument may cause
 serious errors in the ZIL environment.  Do so with extreme caution.

Examples:

 (ZPUTFPI 1) and (ZPUTFPI 1 NIL) are equivalent, and cause the
             current line of standard input to be reprocessed.

 (ZPUTFPI 10 'FOO)  sets the current column of input file FOO to 10.

 (ZPUTFPI (ADD (ZGETFPI 'BAR) N) 'BAR)   causes the current column
             position of input file BAR to be "tabbed" over N spaces.

