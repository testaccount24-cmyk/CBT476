
Function: CONCAT

Syntax:   (CONCAT &rest args)

 arg (optional, evaluated) - any object that is not a list, vector,
                             structure, or interpreted lexical closure.

Returns:

 An interned symbol whose print name consists of args concatenated to
 form a new atom name.

Processing:

 The args are converted to the character representations that they have
 when printed via PRINC.  These are the actual print names for symbols,
 the text for strings, converted representations for numbers, and
 internally generated values for other types.  The resulting character
 strings are concatenated together to build a symbol whose name is that
 string, and that symbol is interned on the oblist.

 If there are no args, a symbol with a null print name is returned.

Errors signaled:

 List, vector, structure, or funarg found as one of the arguments.

Notes:

 This is a Franz LISP function, added to ZIL for OPS5 support.
 Compare UCONCAT, which is identical to CONCAT except that it
 creates an uninterned symbol.

 Compare CONCATL, which is like applying CONCAT to a list of arguments.

 Also compare ZILIMPL, which may be used to create numbers as well as
 interned or uninterned symbols; and STRING-APPEND, which builds
 strings rather than symbols.

Examples:

 (CONCAT)                   ==> ||
 (CONCAT 'A)                ==> A
 (CONCAT 'A 'B 1 'C "D")    ==> AB1CD
 (CONCAT "f" "o" "o")       ==> |foo|
 (CONCAT "FOO" 'BAR)        ==> FOOBAR
 (CONCAT 007 1.0 "foobar")  ==> |71.0foobar|

 (SETQ A (CONCAT 'F 'O 'O))        ==> FOO
 (SETQ B (CONCAT "F" "O" "O"))     ==> FOO
 (EQ A B)                          ==> T   ; always interned.

