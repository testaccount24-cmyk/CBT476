
Function: OPEN

Syntax:   (OPEN arg1 &optional arg2)

 arg1 (required, evaluated) - a data set name (string or symbol).
 arg2 (optional, evaluated) - NIL, or one of the following symbols:
                              INPUT, OUTPUT, IN, OUT, APPEND, PROBE.

Returns:

 If arg2 is not PROBE:

 A file name, after allocating the data set specified by arg1 and
 opening it for the mode specified by arg2.

 If arg2 is PROBE:

 arg1 if it exists as a data set name, else NIL.

Processing:

 arg1, which should be a symbol or string, is interpreted as a data set
 name in standard TSO format (quoted or unquoted, member name present or
 absent).

 If arg2 is not PROBE, the data set is dynamically allocated and opened.
 The mode is determined by arg2 as follows:

   INPUT    -  the file is opened for input.
   OUTPUT   -  the file is opened for output.
   APPEND   -  the file is opened for output in "append" mode.

 If arg2 is omitted or NIL, INPUT is assumed.

 IN and INPUT are equivalent, as are OUT and OUTPUT.

 Any of these non-NIL values can be specified with a leading colon
 (i.e. as a "keyword").  In other words, OUT and :OUT are equivalent.
 Furthermore, if a list is specified as the second argument, the CAR
 of that list is assumed to be the file type and is analyzed as above.
 Thus, the following are equivalent:

   (OPEN "foo.data")
   (OPEN "foo.data" NIL)
   (OPEN "foo.data" 'IN)
   (OPEN "foo.data" 'INPUT)
   (OPEN "foo.data" :IN)
   (OPEN "foo.data" :INPUT)
   (OPEN "foo.data" '(IN))
   (OPEN "foo.data" '(:INPUT FROBNICANT BARFUCIOUS))

 If arg2 is PROBE or :PROBE, then the data set is dynamically
 allocated to see if it actually exists.  If so, arg1 is returned;
 otherwise NIL is returned.

 The data set name may contain lower and/or upper case characters;
 OPEN translates the name to all upper case internally.

 If the data set is opened for input, it must be either a sequential
 data set or a partitioned data set with a valid member name (i.e. the
 member must already exist).  It must be a currently existing
 (cataloged) data set.

 If the data set is opened for output, it must be either a sequential
 data set or a partitioned data set with a member name (which need not
 exist already).  If it does not currently exist, it will be created
 as a new data set.  The data set is allocated exclusively, and thus
 cannot be in use by any other user or job.

 If APPEND was specified as arg2 and the data set already exists, the
 data set is allocated as MOD so that data will be written after any
 existing data in the dataset.  If OUT or OUTPUT was specified as arg2
 and the data set already exists, it will be made empty when it is
 opened, and data will be written to it starting at the beginning of the
 data set.  Currently NO WARNING is given that this has happened!

 If PROBE was specified as arg2, the data set is considered to be "not
 found" if it is not cataloged, it is syntactically invalid, a member
 name was specified but is not found, or if a member name is specified
 and the data set is not partitioned.  All other error conditions still
 signal errors.  Furthermore, no file object is created when PROBE is
 specified.

 Note: The following discussion of file objects does not pertain to
 OPEN with the PROBE option.

 Each invocation of OPEN creates a new, unique ZIL file allocation, so
 that accesses to that file start at the beginning of the file.  Up to
 9999 input and output files can be concurrently open by OPEN (it may be
 necessary to CLOSE some files to prevent OPEN from being unable to
 acquire virtual storage or use a file name).

 The file names are maintained in a counter that starts at 0001 and is
 incremented by 1.  The file name is always a 4-character symbol,
 despite its digital content.  No check is made for counter overflow;
 thus the limitation above.

Errors signaled:

 Invalid second argument (not one of those listed above).
 Data set not available, or other dynamic allocation failure.
 Syntax error in data set name or member name.
 A data set with a member name was specified for an APPEND request
  (this is not permitted in MVS - you cannot open a PDS member as MOD).
 A member name was specified but the dataset is not partitioned.
 The specified member name is not in the dataset.
 The dataset is not sequential or partitioned, or an input request
  was made for a dataset that was never opened (is empty).
 Errors in system routines used to verify or report on allocation.

 Note: Some of the above errors may not be errors if PROBE is
 specified, but may merely cause NIL to be returned.

Notes:

 See member $FILE for more information on file names.

 See CLOSE for more information, particularly about the behavior
 of OPEN and CLOSE under Macsyma.

 Currently, if a new dataset is created for an output request, the
 DCB attributes RECFM=FB, LRECL=80, BLKSIZE=6160 are assigned.  You
 may override these attributes by preallocating the data set before
 issuing OPEN.

 Although no check is made for the following conditions, you should
 NEVER do them:

 * Have more than 1 member of the same PDS open for output
   (they will write to the same area of the PDS, and when they are
    closed the directory entries will point to the same data)

 * Open a file for APPEND while it is also open for OUTPUT
   (you must CLOSE the OUTPUT file before opening it for APPEND)

Examples:

 (Watch the quote marks carefully!)

  (OPEN "cmd.lisp(myfunc)")
  (OPEN "'SOMEONE.ELSES.DATASET'" 'INPUT)
  (OPEN '|foo.data| 'OUTPUT) ; OK, because the dsname is always upcased.

 A typical sequence could be like this:

 (SETQ A (OPEN "'proglib.zil.source(junk)'"))
 (LOOP DO (READ A) UNTIL (EOF A)
       FINALLY (CLOSE A))

 However, WITH-OPEN-FILE is the preferred form to use for this.

