
Special Form: DEFUN

Syntax:   (DEFUN name1 {arg2} arglist3 &rest forms)

 name1    (required, not evaluated) - a symbol, or a list of 2 symbols.
 arg2     (optional, not evaluated) - EXPR, FEXPR, or MACRO.
 arglist3 (required, not evaluated) - a lambda list.
 form     (not evaluated) - an atom or proper list.

Returns:

 name1 (or (car name1)), after establishing a function definition for it
 in the current environment.

Processing:

 See member $DEFUN for more details about defining functions.

 See member LAMBDA for information about the argument list.

 In the interpretive environment, DEFUN places a LAMBDA-expression on
 the property list of the symbol specified by name1.  arg2, when
 specified (i.e. atomic), is the name of the property thus assigned; the
 default property is EXPR.  Some examples should illustrate:

  (DEFUN FOO (A B) (PRINT 'HI) (CONS B A))

 makes the list (LAMBDA (A B) (PRINT 'HI) (CONS B A))
 the value of FOO's EXPR property.

  (DEFUN FOO MACRO (X) (CONS X NIL))

 makes the list (LAMBDA (X) (CONS X NIL))
 the value of FOO's MACRO property.

 The DEFUN function is the basic function-defining technique.
 Note that in a compiled program or function, it does not generate
 executable code to perform the DEFUN a la interpretive mode,
 but causes a compiled function to be created.  For that reason,
 it must occur at top level in compiled code.

 (DEFUN fun-name (arglist) (body))

 is equivalent to

 (DEFUN fun-name EXPR (arglist) (body))

 fun-name may not be NIL.

Errors signalled:

 Invalid syntax (too few arguments, or missing function body).
 Function name not a symbol or list (symbol + property).
 Argument list not a list (may mean invalid function type).
 Unknown function type: not EXPR, FEXPR or MACRO.
 Wrong number of arguments for FEXPR (not 1 or 2) or MACRO (not 1).
 Attempt to define an FEXPR to the compiler.

Notes:

 To cause a function to become defined at run time in a compiled program
 or function, it is necessary to use XDEFUN, XDEFMACRO or PUTPROP to
 place the function body (LAMBDA and all) on the symbol's property list.
 DEFUN's not at top level are not compilable.

 DEFUN sets the LOADFILE property of the symbol to the current value
 of the special variable *LOADFILE*, which is set by LOAD (for example)
 to the name of the file being loaded.

 DEFUN removes conflicting function definitions as follows:

 * Any SUBR property is removed.
 * If an EXPR is being defined, any existing MACRO property is removed.
 * If a FEXPR is being defined, any existing EXPR or MACRO property is
   removed.

 This insures correct execution of the defined function according to the
 rules of evaluation (see member $EVAL of this document for more
 details).

Examples:

 (DEFUN FIRST (X) (CAR X))

 (DEFUN FIRST FEXPR (X A) (CAR (EVAL (CAR X) A)))

 (DEFUN FIRST MACRO (X) (LIST 'CAR (CADR X)))

all define a function that returns the CAR of its one argument.

