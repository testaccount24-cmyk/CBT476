
Function: EQUAL

Syntax:   (EQUAL arg1 arg2)

 arg1 (required, evaluated) - any LISP object.
 arg2 (required, evaluated) - any LISP object.

Returns:

 T if the structures of arg1 and arg2 are identical, else NIL.

Processing:

 If the arguments are both atoms, EQUAL is equivalent to EQL.
 If one argument is an atom and the other is a list, EQUAL returns NIL.
 If both arguments are lists,
 EQUAL returns T if the following conditions hold:
  The lists have the same length.
  The CAR's of the lists are EQUAL.
  The CDR's of the lists are EQUAL.

 Note that fixnums are never EQUAL to flonums!  If you wish to
 compare these, use EQUALP or =.

Errors signaled:

 None.

Notes:

 EQUAL will loop infinitely on circular lists.  It will recur until
 the push-down stack overflows on lists which contain elements that
 point into themselves.

 See member $EQUAL for more information about equality predicates.

Examples:

 (EQUAL 'FOO 'FOO)         ==> T
 (EQUAL 'A 'B)             ==> NIL
 (EQUAL 1 1)               ==> T
 (EQUAL 1.0 1.0)           ==> T
 (EQUAL 1 1.0)             ==> NIL
 (EQUAL (ADD1 1000) 1001)  ==> T
 (EQUAL "A" "A")           ==> T
 (EQUAL "A" "a")           ==> NIL

 (EQUAL (LIST 1 2)     (LIST 1 2))     ==> T
 (EQUAL (LIST "A" "B") (LIST "A" "B")) ==> T
 (EQUAL (LIST 'A 'B)   (LIST 'A 'B))   ==> T

