
Function: ZILXSUB

Syntax:   (ZILXSUB arg1 arg2)

 arg1 (required, evaluated) - a compiled code object.
 arg2 (required, evaluated) - a proper list.

Returns:

 The result of evaluating the compiled code object specified by arg1,
 with the elements of the argument list specified by arg2 being placed
 on the stack.

Processing:

 This is the primitive function that executes compiled code objects
 (both SUBR's and closures).  Although it is accessible to all users, it
 is primarily used by the evaluator.

 ZILXSUB retrieves the elements from the list specified by arg2, and
 places them in successive stack locations.

 The minimum and maximum number of argument specifications embedded in
 the compiled code determine the number of arguments that the compiled
 code function must be passed.  If the maximum value is greater than
 the number of elements stacked (the length of the list), NIL is
 stored into the subsequent stack locations the proper number of times
 so that the correct maximum number of arguments is passed.
 If there is an &REST argument, a list is made out of the rest of
 the arguments to the compiled function and a pointer to that list
 is placed on the stack as the final argument.

 The arguments are passed as is; they are not re-evaluated,
 this having been taken care of by ZILXSUB's caller.

 If the first argument is a closure, the current dynamic variable
 binding environment is saved and set to the value of the environment
 component of the closure.

 Control is then passed to the compiled code object specified by arg1,
 via a machine language BALR instruction.

 The dynamic variable binding environment, if saved prior to calling the
 code, is then restored.

Errors signaled:

 Argument is not a compiled code object or closure.
 Too few arguments passed (second argument too short).
 Too many arguments passed (second argument too long).

Notes:

 Unpredictable results will occur if the second argument is not a
 proper list.

Examples:

 Assume that in these examples, MYFUNC has a minimum of 1 argument
 and a maximum of 3 arguments.

 (ZILXSUB (GET 'MYFUNC 'SUBR) '(A B C))

 will execute the SUBR property of MYFUNC, passing it the argument list
      (A B C).

 (ZILXSUB (GET 'MYFUNC 'SUBR) '(A))

 will execute the SUBR property of MYFUNC, passing it the argument list
      (A NIL NIL).

