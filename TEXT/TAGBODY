
Special Form: TAGBODY

Syntax:   (TAGBODY &rest forms)

 form     (conditionally evaluated if a list) - a symbol or a list.

Returns:

 NIL.

Processing:

 The forms in a TAGBODY are processed in succession as follows:

 (a) If the form is NIL, it is ignored.

 (b) If the form is a symbol, it is not evaluated, but kept
     as a tag which a GO form can branch to.

 (c) If the form is an integer, it is not evaluated, but kept
     as a tag which a GO form can branch to.  In other words,
     integers can be used as GO tags much as symbols can, for
     compatibility with Maclisp.

 (d) If the form is a list, it is evaluated.

 (e) It is an error if the form is not of one of the above types.

 (f) If the end of the TAGBODY is reached, it is terminated and NIL is
     returned as its value.

 The above sequence can be altered by the execution of the GO special
 form if it is encountered during evaluation (see the GO documentation
 for details).

 GO causes control to pass to the specified tag (symbol or integer) in
 the TAGBODY.  The form following the tag becomes the next form to
 be evaluated, and processing continues from there.

Errors signaled:

 Invalid or duplicate GO tags.

Notes:

 GO is valid as long as it are lexically apparent in
 the code.  This means that it will be processed as long as it
 is not the product of function evaluation.  The following are
 valid occurrences of GO:

 (TAGBODY LOOP (DO 'SOMETHING) (GO LOOP))
 (TAGBODY (COND ((EQ A T) (GO LOOP)))
          LOOP
          (PROG2 (PRINT A) (GO B))
          B
          (PRINT Z))

 The following is NOT valid:

 (DEFUN SUMFUNK () (GO LAB))
 (TAGBODY LAB (SUMFUNK))

 A "GO outside of TAGBODY" error will be signalled.

 See member GO for more information on restrictions pertaining to GO,
 particularly those which involve functionality available under the
 interpreter but not (as yet) in compiled code.

Examples:

 (LET (A B)
      (TAGBODY
               (SETQ A '(1 2 3 4))
          LOOP (COND ((NULL A) (GO END)))
               (SETQ B (CONS (ADD1 (CAR A)) B))
               (SETQ A (CDR A))
               (GO LOOP)
           END
               (SETQ A B)
      )
      A)                               ==> (5 4 3 2)

