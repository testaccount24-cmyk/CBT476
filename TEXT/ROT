
Function: ROT

Syntax:   (ROT arg1 arg2)

 arg1 (required, evaluated) - a fixnum.
 arg2 (required, evaluated) - a fixnum.

Returns:

 A fixnum containing the result of an arithmetic rotate operation
 performed on arg1, with arg2 specifying the number of bits to rotate
 (left if positive, right if negative).

Processing:

 An arithmetic rotate operation is performed on the numeric contents of
 arg1 (not in place), with arg2 determining the amount and direction of
 the rotation.

 If arg2 is positive, a left rotate of N bits takes place, with N being
 the absolute value of the fixnum arg2.

 If arg2 is negative, a right rotate of N bits takes place, with N being
 the absolute value of the fixnum arg2.

 If arg2 is zero, no rotate takes place, but arg1 is returned.

Errors signaled:

 First argument not a fixnum.
 Second argument not a fixnum.

Notes:

 Results are not valid if the absolute value of arg2 is greater than 31.

Examples:

 (rot 1 -1) ==> -2147483648  ; Standard way to get most negative fixnum.
 (rot 1 2)  ==> 4
 (rot -1 7) ==> -1
 (rot 1 -2) ==> #z

