
Function: PAIRLIS

Syntax:   (PAIRLIS list1 list2 &optional alist3)

 list1  (required, evaluated) - a proper list.
 list2  (required, evaluated) - a proper list.
 alist3 (optional, evaluated) - a list of dotted pairs.


Returns:

 A list consisting of dotted pairs of elements taken from list1 and
 list3 consed onto alist3.

Processing:

 Elements (CAR's) of list1 and list2 are taken and made into dotted
 pairs, and these pairs are consed onto the beginning of arg3
 (which defaults to NIL) to make a new association list.

 alist3 is unchanged.

Errors signaled:

 list1 or list2 not a proper list.
 list1 and list2 are not of the same length.

Notes:

 The pairs end up in the result alist in reverse order; in other words,
 the last elements of list1 and list2 make up the first pair of the
 resulting alist.

 list3 is not validity checked; it may be any kind of object at all.

Examples:

 (PAIRLIS '(A B C) '(1 2 3)) ==> ((C . 3) (B . 2) (A . 1))
 (PAIRLIS '(A B) '(1 2) '((F . O) (O . NIL)))
                             ==> ((B . 2) (A . 1) (F . O) (O . NIL))

