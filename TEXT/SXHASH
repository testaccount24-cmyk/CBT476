
Function: SXHASH

Syntax:   (SXHASH arg1)

 arg1 (required, evaluated) - any LISP object.

Returns:

 A fixnum containing the hash code for arg1.

Processing:

 A non-negative fixnum is generated from the contents of arg1, such
 that the value will be numerically equal to the value generated for
 any object that is EQL to arg1.  This is a "hash code" for the
 object.  The same argument will always return the same hash code.

Errors signaled:

 None.

Notes:

 The value from this function may be used in various hashing algorithms
 to speed up table lookups, etc.

 For maximum usefulness, you should take the value modulo some number
 which is NOT a power of 2 (for example, the dimension of a vector
 being used as a hash table).  SXHASH does not perform any modulus
 arithmetic; it returns a raw value between 0 and 2147483647.

 SXHASH may fail to terminate on circular or self-referencing lists.
 This is due to limitations in the implementation; actually this is
 not correct and represents lossage in ZIL.

 The hash code is NOT dependent in any way upon the virtual memory
 address of the object; such a dependency would cause the same object
 to return a different hash value if it were relocated by a garbage
 collection.

Examples:

; (There are no examples because the value returned by SXHASH is
;  implementation dependent, and is of little meaning by itself.)

