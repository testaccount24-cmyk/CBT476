
Function: PEEKL

Syntax:   (PEEKL arg1 arg2 &optional arg3)

 arg1 (required, evaluated) - a fixnum.
 arg2 (required, evaluated) - a fixnum.
 arg3 (optional, evaluated) - any LISP object, but generally T or NIL.

Returns:

 A list, arg2 in length, of 1-character symbols whose contents represent
 the contents of the bytes of virtual storage starting at the memory
 location pointed to by arg1.

Processing:

 arg1 is interpreted as a 31-bit address and is used as a pointer to
 access active main storage.

 arg2 specifies the number of bytes to be collected and made into a
 list.

 If arg3 is specified and not NIL, the symbol is interned on the
 oblist; otherwise it is not.

 The IMPLODE function may be used to turn this list into a symbol;
 STRING-APPEND may be applied to the list to turn it into a string.

Errors signaled:

 arg1 or arg2 not a fixnum.

Notes:

 Currently this function does not check the validity of the address.
 Therefore, 0C4 ABENDs are likely when using this function.

Examples:

;(SETQ A (PEEKL (+ (PEEK #X10) #X154) 8)) ==> (N O N A M E | | | |)
;(IMPLODE A)                              ==> |NONAME  |
;(APPLY #'STRING-APPEND A)                ==> "NONAME  "
;
 (SETQ A (PEEKL (+ (PEEK #X10) #X154) 8)) ==> (C S D L | | | | | | | |)
 (IMPLODE A)                              ==> |CSDL    |
 (APPLY #'STRING-APPEND A)                ==> "CSDL    "

