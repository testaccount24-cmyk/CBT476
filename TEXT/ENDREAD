
Function: ENDREAD

Syntax:   (ENDREAD &optional file1)

 file1 (optional, evaluated) - an input file name.

Returns:

 NIL; end-of-line status is forced on the file specified by file1.

Processing:

 End-of-line is set in the file block for the input file specified by
 file1, so that subsequent input functions (READ, READCH, etc.) initiate
 a fresh read operation.  This has the effect of causing READCH to
 detect end-of-line if it is the next input operation against the file.

 ENDREAD does not set the "newline" flag tested by NEWLINEP, but if
 READCH is issued afterwards it will return NIL and cause NEWLINEP
 to be true.

 For data sets, this means that a new logical record will be read
 from the file, skipping all characters in the current record that
 have not been read yet.

 For files allocated to the terminal, this causes unprocessed input
 to be discarded; the user must then type in new data.

Errors signaled:

 Invalid input file object (not a symbol 4 characters or less).
 Specified input file is not allocated or could not be opened.

Notes:

 See member $FILE for more information on file names.

 When the input is from the terminal, ENDREAD results in a TGET
 macro instruction being issued on the next READ-type function call
 to the file.  However, a TCLEARQ macro is NOT issued, so the input
 buffers are not truly "flushed", even though the remainder of the
 data in the current input is not processed.  Since ZIL sees the
 input as logical records with a length of 80, the input "flushing"
 is on a 80-byte record basis.

Examples:

 (ENDREAD)
 (ENDREAD NIL) ...are equivalent.

 (ENDREAD 'FOO)  forces a new line condition on the input file FOO.

