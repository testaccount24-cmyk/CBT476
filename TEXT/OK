
Macro: OK

Syntax:   (OK &rest forms)

 forms (required, evaluated) - any LISP object.

Returns:

 T if all the forms are successfully evaluated without error;
 NIL if an error occurred during evaluation of any of the forms
 (i.e. THROW to tag NIL).

Processing:

 The forms are evaluated as an implicit PROGN.  If an error occurs
 (or a THROW to tag NIL) while any of these forms is evaluated,
 evaluation terminates and the OK form returns NIL.  If no error
 occurs, OK returns T.

 See ERROR, CATCH and THROW for more information.

Errors signaled:

 None.

Notes:

 OK is a convenient way to do something and tell whether an error
 occurred while doing it.

Examples:

 (FMAKUNBOUND 'FOO)                  ==> FOO
 (PROG (A)
       (IF (OK (SETQ A (FOO)))
           (RETURN A)
           (RETURN "A not set.")))   ==> "A not set." ; FOO not defined
 (DEFUN FOO () "success")            ==> FOO
 (PROG (A)
       (IF (OK (SETQ A (FOO)))
           (RETURN A)
           (RETURN "A not set.")))   ==> "success"    ; FOO was defined

