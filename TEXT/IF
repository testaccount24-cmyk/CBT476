
Macro: IF

Syntax:   (IF arg1 arg2 ... argn)

 At least 3 arguments must be specified.

 The format must be one of the following:

 (IF form1 THEN form2)
 (IF form1 THEN form2 ENDIF)
 (IF form1 THEN form2 ELSE form3)
 (IF form1 THEN form2 ELSE form3 ENDIF)
 (IF form1 THEN form2 ELSE IF form3 THEN ...
 (IF form1 THEN form2 ELSEIF form3 THEN ...

 (IF form1 form2)       - equivalent to (IF form1 THEN form2)
 (IF form1 form2 form3) - equivalent to (IF form1 THEN form2 ELSE form3)

 Multiple forms can follow THEN and ELSE, e.g.
 (IF form1 THEN form2 form3 ELSE form4 form5 ...)

 Zero forms can follow as well, e.g.
 (IF form1 THEN ELSE IF form2 THEN form3 ELSE ENDIF)

 (...provided ENDIF is used at the end when no forms follow ELSE).

Returns:

 One of the "formn"s that does not follow an "IF".

Processing:

 Either the same as Common LISP (IF test trueform falseform) or
 typical IF-THEN-ELSE; should be intuitively self-evident.

 The test, as you might imagine, is non-NIL vs. NIL.

 If none of the IF forms are non-NIL, NIL is returned.

 When there are multiple forms following a THEN and that path is taken,
 the last of the forms is returned as the value.
 When there are no forms following a THEN and the THEN path is taken,
 the value of the condition form following the IF is returned.
 When there are no forms following an ELSE and the ELSE path is taken,
 T is returned (this is a "feature" that will be removed eventually).

Errors signaled:

 Invalid syntax.

Notes:

 Examples of how the IF macro expands into the corresponding COND:

 (IF A B)                 --> (COND (A B))
 (IF A B C)               --> (COND (A B) (T C))

 (IF A THEN B C ELSE D E) --> (COND (A B C) (T D E))
 (IF A THEN ELSE B ENDIF) --> (COND (A) (T B))
 (IF A THEN B ELSE ENDIF) --> (COND (A B) (T))  ; "Feature" (i.e. "bug")

 Compare WHEN and UNLESS, which also expand into COND's.

Examples:

 (IF T 'FOO 'BAR)       ==> FOO
 (IF NIL 'FOO 'BAR)     ==> BAR
 (IF T 'FOO)            ==> FOO
 (IF NIL 'FOO)          ==> NIL
 (IF T THEN 'FOO)       ==> FOO
 (IF NIL THEN 'FOO)     ==> NIL
 (IF (= 1 2) THEN 'TRU1 ELSE IF (= 3 3) THEN 'TRU2 ELSE 'TRU3 ENDIF)
                        ==> TRU2
 (IF 'A  THEN ELSE 'B)  ==> A
 (IF NIL THEN ELSE 'B)  ==> B

