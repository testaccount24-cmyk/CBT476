
Function: DEFRDMAC

Syntax:   (DEFRDMAC char1 fun2)

 char1 (required, evaluated) - a one-character symbol, string or fixnum.
 fun2  (required, evaluated) - an object suitable for processing as a
                               function by APPLY.

Returns:

 char1, after assigning the function specified by fun2 to the character
 specified by char1 as a reader macro.

Processing:

 The RDRMACRO function is invoked to associate the character specified
 by char1 with the compiled code SUBR for the ZRMAPPLY function; this
 function searches the atom *READERMACRO* for a property whose indicator
 is this character, the value being the function of one argument to be
 applied.  fun2 is placed on the property list of the atom *READERMACRO*
 in this way, so that ZRMAPPLY will APPLY it.

 The function is applied in the environment active at the time the
 READ function encounters the reader macro character.

 fun2 must specify a function that takes one argument; this argument is
 bound to the file name currently in use by READ when it invokes the
 reader macro.  This enables the reader macro code to access data from
 the file being read, via functions like READ, READCH and PEEKCH.

 If the code needs to access the reader macro character as an atom,
 the RMCHAR function will do this.

 If the function wishes to return "nothing" to the reader (i.e. have
 the reader continue reading with the next S-expression),
 it may return zero values (e.g. via the form (VALUES)), or
 the RMNIL function will do this.

 The function is typically a symbol, a funarg (created by the FUNCTION
 special form), or a LAMBDA or LABEL expression (see APPLY for more
 information).

Errors signaled:

 Errors encountered by RDRMACRO (q.v.).

Notes:

 See documentation on READ, RDRMACRO and RMCHAR for more information
 on reader macro processing.

 Reader macro definitions for the following characters are predefined:

 ' (single quote)
 ` (backquote)
 , (comma)
 # (sharp sign)

 See member $RMACRO in this documentation for details on these.

Examples:

 Assume a reader macro defined thus:

   (DEFRDMAC '|?| '(LAMBDA (X) (LIST (RMCHAR) (READ X))))

 Then, when the following is read in:

   ?FOO

 the following will be returned by READ:

   (? FOO)

 (Note that under the interpreter, this will be evaluated by EVAL
 before the user sees the result.)

 The following are equivalent:

  (DEFRDMAC '|?| #'MYQRFUN)
  (DEFRDMAC "?"  #'MYQRFUN)
  (DEFRDMAC #\?  #'MYQRFUN)

