
Function: ZEVMAPP

Syntax:  (ZEVMAPP mexp1 form2 prop3)

 mexp1 (required, evaluated) - a LAMBDA expression.
 form2 (required, evaluated) - a macro form.
 prop3 (required, evaluated) - MACRO or CMACRO.

Returns:

 The result of macroexpanding form2, using mexp1 as the macro expansion
 function.

Processing:

 This function applies a macro definition.

 mexp1 is the value of the MACRO or CMACRO property to be applied.

 form2 is the entire form, which is the argument to the macro expansion
       function mexp1.

 prop3 is the macro property name - MACRO or CMACRO.

 mexp1 must be (LAMBDA arglist ...)
 where...
  If arglist is a cons whose CAR is NIL, then this is an extended
   macro arglist generated by DEFMACRO, and applied accordingly.
  Otherwise, this is a standard MACRO arglist, applied the standard way.

 If mexp1 is not a LAMBDA expression, an "invalid macro property"
 warning is issued and it is applied the standard way.

Errors signaled:

 Only those signalled by mexp1.

Notes:

 The extended macro argument list generated by DEFMACRO is not
 compatible with Common Lisp, because it cannot be applied by APPLY
 and give correct results.  Some day this may be straightened out.

 For this reason, do not use APPLY or FUNCALL to apply macro expansion
 function definitions.  Always use ZEVMAPP.

