
Function: REVERSE

Syntax:   (REVERSE list1)

 list1 (required, evaluated) - a proper list.

Returns:

 A list consisting of the elements of list1 in reverse order.

Processing:

 A new list is built (through repeated CONS'ing) from the elements
 of the first list.  Note that the CAR's of the list are NOT
 recursively reversed.

 Compare NREVERSE, which destroys its argument;
 and REVERSALL, which recursively reverses the elements.

Errors signaled:

 Argument not a proper list.

Notes:

Examples:

 (REVERSE NIL)               ==> NIL
 (REVERSE '(A))              ==> (A)
 (REVERSE '(A B C D))        ==> (D C B A)
 (REVERSE '((A B) (C D)))    ==> ((C D) (A B))

;The following shows how a new copy of a list is made using REVERSE.

 (SETQ X '(A D A))           ==> (A D A)
 (SETQ Y (REVERSE X))        ==> (A D A)
 (EQ X Y)                    ==> NIL
 (EQUAL X Y)                 ==> T

