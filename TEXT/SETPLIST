
Function: SETPLIST

Syntax:   (SETPLIST arg1 arg2)

 arg1 (required, evaluated) - a symbol.
 arg2 (required, evaluated) - a property list.

Returns:

 arg1, with its property list set to arg2.

Processing:

 arg2 destructively replaces the PLIST pointer of arg1; i.e. arg2
 becomes the property list of arg1.

Errors signaled:

 Invalid argument (under the interpreter only).

Notes:

 No error checking is done at this time in compiled code.
 Issuing SETPLIST on a non-atomic first argument is illegal and highly
 dangerous to the ZIL environment.

 SETPLIST is NOT a substitute for PUTPROP, and should be avoided.

 A property list has the following format:

  (indicator1 value1 indicator2 value2 ...)

 where (GET atom indicator1) returns "value1", etc.

 No checking is done to see if the second argument is a valid property
 list (or even a valid list).  Issuing SETPLIST with an improper
 second argument will cause the GET, PUTPROP, and REMPROP functions
 to fail disastrously, as well as other functions (including EVAL)
 that reference the property list of the atom.

 Because a property list is manipulated destructively, SETPLIST
 should not be used with a second argument of an in-line compiled
 list, i.e.  a list derived from compiling the construct
 (QUOTE (form1 form2 ...)).  This will cause further references to the
 in-line constant list to be incorrect.

Examples:

 (SETPLIST 'A '(FOO BAR BAZ (FROB NICK ATE)))
                           ==> A

 (PLIST 'A)                ==> (FOO BAR BAZ (FROB NICK ATE))
 (GET 'A 'FOO)             ==> BAR
 (GET 'A 'BAZ)             ==> (FROB NICK ATE)

 (SETPLIST 'A '(FOO BAR))  ==> A

 (PLIST 'A)                ==> (FOO BAR)
 (GET 'A 'FOO)             ==> BAR
 (GET 'A 'BAZ)             ==> NIL

 (SETPLIST 'A NIL)         ==> A

 (PLIST 'A)                ==> NIL
 (GET 'A 'FOO)             ==> NIL
 (GET 'A 'BAZ)             ==> NIL

