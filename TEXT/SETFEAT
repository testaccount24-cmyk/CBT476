
Function: SET-FEATURE

Syntax:   (SET-FEATURE arg1)
    or:   (SETFEAT arg1)

 arg1  (required, evaluated) - a symbol.

Returns:

 The current features list, after arg1 has been added to it.

Processing:

 The list of features (which is the value of the global variable
 *FEATURES*) is searched for a value which is EQ to arg1.  If one
 is found, nothing is done; else arg1 is added to the list.

 SET-FEATURE is used to make something a "feature", which means that
 it may be used in #+arg1 read-conditionalizations.  See FEATUREP
 for more information.

 To remove a "feature", use SET-NOFEATURE (or SETNFEAT).

Errors signaled:

 None.

Notes:

 In the normal ZIL environment, the only features present are ZIL and
 ZIL12 (the latter identifies this as ZIL 1.2).  However, under the
 compiler, there is a ZILCO feature as well.  (In fact, as a general
 principle, for a top-level program P there is a feature named P.)

Examples:

 (FEATUREP 'ZIL)          ==> T
 (SET-FEATURE 'ZIL)
          ==> (ZILIN ZIL ZIL13 TSO MVS XA GC BIGNUM
               MULTIPLE-VALUES DESTRUCTURING FLAVORS LOOP)

 (FEATUREP 'FOO)          ==> NIL
 (SET-FEATURE 'FOO)
          ==> (FOO ZILIN ZIL ZIL13 TSO MVS XA GC BIGNUM
               MULTIPLE-VALUES DESTRUCTURING FLAVORS LOOP)
 (FEATUREP 'FOO)          ==> T
 (SET-NOFEATURE 'FOO)
          ==> (ZILIN ZIL ZIL13 TSO MVS XA GC BIGNUM
               MULTIPLE-VALUES DESTRUCTURING FLAVORS LOOP)
 (FEATUREP 'FOO)          ==> NIL

