
Function: EQ

Syntax:   (EQ arg1 arg2)

 arg1 (required,evaluated) - any LISP object.
 arg2 (required,evaluated) - any LISP object.

Returns:

 T if arg1 is the same object as arg2, otherwise NIL.

Processing:

 EQ means that the pointer representing arg1 is the same (the address is
 numerically the same) as the pointer representing arg2.  Two symbols
 with the same print name are EQ unless one was created by a function
 that did not intern the value on the oblist (e.g. GENSYM).  Two numbers
 are not necessarily EQ; use = to test equality of numbers, or EQL if
 the numbers must be of the same type.  Two lists are not necessarily
 EQ; use EQUAL to test equality of lists.

Errors signaled:

 None.

Notes:

 See member $EQUAL for more information about equality predicates.

Examples:

 (EQ 'A 'A)           ==> T
 (EQ 'A 'B)           ==> NIL
 (EQ () NIL)          ==> T

 (SETQ X '(A B))      ==> (A B)
 (SETQ Y X)           ==> (A B)
 (EQ X Y)             ==> T

 (SETQ X '(A B))      ==> (A B)
 (SETQ Y '(A B))      ==> (A B)
 (EQ X Y)             ==> NIL ; always when interpreted, usually when
                              ; compiled

;(EQ 1 1)             ==> {unpredictable: either T or NIL}

 (EQ (+ 1 1) 2)       ==> NIL

 (EQ (MAKNAM  '(A B C)) 'ABC) ==> NIL
 (EQ (IMPLODE '(A B C)) 'ABC) ==> T

