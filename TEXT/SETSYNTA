
Function: SETSYNTAX

Syntax:   (SETSYNTAX arg1 arg2 arg3)

 arg1 (required, evaluated) - a one-character symbol, string or fixnum.
 arg2 (required, evaluated) - MACRO or SINGLE.
 arg3 (required, evaluated) - a function or NIL.

Returns:

 NIL, after assigning the character specified by arg1 the reader macro
 property specified by arg2 and arg3.

Processing:

 If arg2 is MACRO:

   If arg3 is NIL, the reader macro definition for the character
   specified by arg1 is removed from the read table.

   Otherwise, the character specified by arg2 is associated with the
   reader macro function specified by arg3.  This is done via the
   DEFRDMAC function (q.v.).

 If arg2 is SINGLE:

   arg3 must be NIL in this case.  The character specified by arg2 is
   made to act like a reader macro character that returns itself, so
   that when the READ function is reading characters to build a
   symbol, it does not include that character, but returns that
   character as a one-character symbol name.  Naturally, this does
   not apply when the character occurs in a string or is delimited
   by backslash or vertical bars.

 The following are equivalent (whether specifying SINGLE or MACRO):

  (SETSYNTAX '|?|  'SINGLE NIL)
  (SETSYNTAX  "?"  'SINGLE NIL)
  (SETSYNTAX  #\?  'SINGLE NIL)

Errors signaled:

 Errors signalled by DEFRDMAC or RDRMACRO (q.v.).

Notes:

 This is a Maclisp and Franz LISP function; in those dialects,
 SETSYNTAX has other uses, but in ZIL these are the only ones
 available.  SETSYNTAX is an interface to DEFRDMAC and RDRMACRO
 which is provided for compatibility.

 See documentation on READ, DEFRDMAC and RMCHAR for more information
 on reader macro processing.


Examples:

 Assume a reader macro defined thus:

   (SETSYNTAX '|?| 'MACRO #'(LAMBDA (F) (CONS 'Q (READ F))))

 Then, when the following is read in:

   ?FOO

 the following will be returned by READ:

   (Q FOO)

 (Note that under the interpreter, this will be evaluated by EVAL
 before the user sees the result.)

 If you say:

   (SETSYNTAX #\! 'SINGLE 'NIL)

 Then, when the following is read in:

   !FOO

 READ will return the symbol !, and then the symbol FOO.

 (Again, these are subject to evaluation under the interpreter
 before the user sees the result.)

 (SETSYNTAX "?"  'MACRO NIL) will turn off processing of the ? macro.
 (SETSYNTAX '|!| 'MACRO NIL) will turn off processing of the ! macro.

