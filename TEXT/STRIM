
Function: STRING-TRIM

Syntax:   (STRING-TRIM bag1 str2)
    or:   (STRIM bag1 str2)

 bag1 (required, evaluated) - a string.
 str2 (required, evaluated) - a string.

Returns:

 A string built by removing all characters present in bag1 from both
 ends of str2; in other words, leading and trailing characters are
 removed.

Processing:

 bag1 is treated as a "character bag", and str2 is scanned from both the
 beginning and the end for characters which are part of that bag.  The
 result is a substring of str2 from the first character which is not
 part of the bag up to the last character which is not part of that bag.

Errors signaled:

 bag1 not a string.
 arg2 not a string.

Notes:

 STRING-TRIM is equivalent to doing both STRING-LEFT-TRIM and
 STRING-RIGHT-TRIM on a string.

 As for many functions that take strings as arguments, symbols are
 permitted; their print names are used in that case.  However, this
 function always returns a string.

 Unlike Common LISP, ZIL does not permit a list to be specified
 for bag1.  Since symbols are permitted, NIL is interpreted as a
 "character bag" of the characters N, I and L.

Examples:

 (STRING-TRIM "ar" "foobar") ==> "foob"
 (STRING-TRIM "" "foobar")   ==> "foobar"
 (STRING-TRIM "xy" "foobar") ==> "foobar"
 (STRING-TRIM "fr" "foobar") ==> "ooba"
 (STRING-TRIM "fobra" "foobar") ==> ""
 (STRING-TRIM 'FAR 'FOOBAR ) ==> "OOB"
 (STRING-TRIM " " " a b c ") ==> "a b c"

