
Function: ZILIMPL

Syntax:   (ZILIMPL arg1 &optional arg2 arg3)

 arg1 (required, evaluated) - a proper list of atoms.
 arg2 (optional, evaluated) - any LISP object, but generally T or NIL.
 arg3 (optional, evaluated) - any LISP object, but generally T or NIL.

Returns:

 A symbol whose print name consists of the atoms in the list specified
 by the first argument concatenated to form a new atom name.

Processing:

 The CAR's of the first argument, which must be a non-null list of
 atoms, are converted to the character representations that they have
 when printed via PRINC.  These are the actual print names for symbols,
 the text for strings, converted representations for numbers, and
 internally generated values for other types.  The resulting character
 strings are concatenated together to build a symbol whose name is that
 string.

 arg1 may be NIL, in which case a symbol with a null print name is
 returned.

 If the second argument is non-NIL, the resulting atom is interned on
 the oblist; otherwise it is not interned (this is the default
 behavior), meaning that it will not be EQ to any other atom.

 If the third argument is non-NIL, the atom building routine will
 attempt to convert the atom to a numeric type, according to its
 syntax as the READ function would interpret it.  If the third
 argument is NIL, the atom created is always a symbol (this is
 the default behavior).

 Note that when a non-NIL third argument is specified, the following
 holds true:

 (1) If the atom is numeric, the setting of the second argument is
     ignored, since only symbols are ever interned on the oblist.

 (2) If the atom is syntactically non-numeric, a symbol will be created.
     In this case the setting of the second argument is significant.

 (3) List notation (parentheses, dots, etc.) is not valid and will
     be treated as part of a symbol name.

 (4) Floating-point overflow is not detected by the code, and may
     result in a program check (0CC) abend.  Floating-point underflow is
     ignored and may produce a zero result.

Errors signaled:

 arg1 not a list of atoms (nested lists and vectors are not permitted).

Notes:

Examples:

 (ZILIMPL '(A))                ==> A
 (ZILIMPL '(F O O))            ==> FOO
 (ZILIMPL '(FOO BAR))          ==> FOOBAR
 (ZILIMPL '(007 1.0 "foobar")) ==> |71.0foobar| ; A symbol.

 (SETQ A (ZILIMPL '(F O O) NIL))   ==> FOO ; not interned.
 (SETQ B (ZILIMPL '(F O O) T))     ==> FOO ; interned.
 (EQ A 'FOO)                       ==> NIL
 (EQ B 'FOO)                       ==> T

 (ZILIMPL '(0 0 7) NIL NIL)    ==> |007| ; a symbol, not a fixnum.
 (ZILIMPL '(0 0 7) NIL T)      ==> 7     ; a fixnum.

