
Function: MAPL

Syntax:   (MAPL arg1 arg2 ... argn)

 At least 2 arguments must be specified.

 arg1 (required, evaluated) - a symbol or LAMBDA-expression.
 arg2 (optional, evaluated) - a proper list.
 argn (optional, evaluated) - a proper list.

Returns:

 arg2, after applying the function specified by arg1 to the last
 non-null sublist of the shortest of the lists specified by the other
 arguments.

Processing:

 The function specified by arg1 is applied to each of the sublists
 (CDR's) of the lists specified by the other arguments, starting with
 the lists themselves and ending with the last non-NIL sublist.  The
 first or only input list is returned as the value of the MAPL call.

 Processing ends as soon as one of the lists is exhausted
 (i.e. becomes NIL).

 Generally, the function is used for its side effects and not for
 the values returned thereby.

Errors signaled:

 Invalid number of arguments (function and at least 1 list required).

Notes:

 See member $MAP of this documentation for more information on what
 may be coded on a mapping function.

Examples:

 (let ((a nil))
      (list
       (mapl #'(lambda (x) (push (length x) a)) '(a b c d e))
       a))
            ==> ((a b c d e) (1 2 3 4 5))

 (let ((a nil))
      (mapl #'(lambda (x y) (push (+ (car x) (car y)) a))
             '(1 2 3) '(10 20 30))
      a)
            ==> (33 22 11)


;(MAPL #'PRINT '(A B C D E))
;
;prints:
;
;  (A B C D E)
;  (B C D E)
;  (C D E)
;  (D E)
;  (E)
;
;on the standard output file.

