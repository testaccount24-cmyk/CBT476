
Function: VREF

Syntax:   (VREF vector1 index2)

 vector1 (required, evaluated) - a vector-type object.
 index2  (required, evaluated) - a fixnum.

Returns:

 The index2'th element of vector1.

Processing:

 index2 is used as an index into vector1, where the elements of the
 vector are indexed from zero to the length minus 1.

 VSET is used to set values in the vector.

Errors signaled:

 Invalid first argument (not a vector-type object).
 Invalid second argument (not a fixnum).
 Index out of range (negative or greater than the maximum index for
 the vector, which is the length minus 1).

Notes:

 A "vector-type object" is an object composed of contiguous instances
 of other LISP objects.  In ZIL, vectors, structures and funargs
 (interpreted lexical closures) are vector-type objects that satisfy
 the predicate VECP.

Examples:

 (SETQ V (MKVECTOR 5))    ==> #(NIL NIL NIL NIL NIL)
 (VSET V 0 'FOO)          ==> FOO
 (VSET V 1 'BAR)          ==> BAR
 (VSET V 2 'BAZ)          ==> BAZ
 (VSET V 3 'FROB)         ==> FROB
 V                        ==> #(FOO BAR BAZ FROB NIL)
 (VREF V 0)               ==> FOO
 (VREF V 1)               ==> BAR
 (VREF V 4)               ==> NIL
;(VREF V 5) is an error.

; VREF may also be used to extract elements of structures.  However,
; use of the macros defined by DEFSTRUCT is preferred.  To extract
; the type (element 0) of the structure, use TYPEP.

 (VREF (STRUCTURE 'A 'B 'C) 0)   ==> A
 (VREF (STRUCTURE 'A 'B 'C) 1)   ==> B
 (VREF (STRUCTURE 'A 'B 'C) 2)   ==> C

