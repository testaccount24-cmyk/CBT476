
Special Form: EVAL-WHEN

Syntax:   (EVAL-WHEN times &rest forms)

 times (required, not evaluated) - a list of one or more of the
                                 following symbols: COMPILE, LOAD, EVAL
 forms (evaluated) - zero or more LISP forms.

Returns:

 If and when the forms are evaluated, the last of the forms;
 otherwise NIL.

Processing:

 Under the interpreter, the forms are evaluated as an implicit PROGN
 only if EVAL is a member of the times list.
 COMPILE and LOAD, if specified, are ignored by the interpreter.

 The compiler processes EVAL-WHEN forms as follows:

  If COMPILE is a member of the times list, the forms are evaluated
  (as an implicit PROGN) by the compiler itself.

  If LOAD is a member of the times list, the forms are compiled as
  if they had appeared normally in the file.

  EVAL, if specified, is ignored by the compiler.

Errors signaled:

 Missing times list.

Notes:

 Originally under ZIL, compiler directives had to be coded via the %
 function.  A list whose CAR is % caused the CDR of that list to be
 evaluated by the compiler.

 This feature, while still supported for convenience, is now obsolete.
 The Common LISP (EVAL-WHEN (COMPILE) ...forms...)  construct is the
 correct way to specify compiler directives.

 Compiler directives can occur at top level only.

 A common use of EVAL-WHEN is for macro definitions that must be known
 to the compiler and to compile-time macro expanders; for example,
 definitions of SETF methods.  In cases like these, it is best to
 surround such definitions in an (EVAL-WHEN (COMPILE LOAD EVAL) ...)
 to cover all cases, including the running of the source code
 interpretively for testing.

 For more information, see member $COMPILE of this document.

Examples:

 (EVAL-WHEN (COMPILE LOAD EVAL)
   (DEFMACRO FOO (X) (BAR X))
   (DEFUN BAR (X) `(SOME EXPANSION WITH ,X)))

 If you have the following in your source:

   (EVAL-WHEN (COMPILE)
    (PRINC "Hello, I'm compiling your program now!")
    (TERPRI)
   )

 the compiler will print the message:

   Hello, I'm compiling your program now!


