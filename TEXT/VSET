
Function: VSET

Syntax:   (VSET vector1 index2 arg3)

 vector1 (required, evaluated) - a vector-type object.
 index2  (required, evaluated) - a fixnum.
 arg3    (required, evaluated) - any LISP object.

Returns:

 arg3, after setting the index2'th element of vector1 to its value.

Processing:

 index2 is used as an index into vector1, where the elements of the
 vector are indexed from zero to the length minus 1.  arg3 replaces
 the corresponding value in the vector.

 VREF is used to retrieve values from the vector.

Errors signaled:

 Invalid first argument (not a vector-type object).
 Invalid second argument (not a fixnum).
 Index out of range (negative or greater than the maximum index for
 the vector, which is the length minus 1).

Notes:

 SETF can be used with VREF to perform the same function.

 A "vector-type object" is an object composed of contiguous instances
 of other LISP objects.  In ZIL, vectors, structures and funargs
 (interpreted lexical closures) are vector-type objects that satisfy
 the predicate VECP.

Examples:

 (SETQ V (MKVECTOR 5))    ==> #(NIL NIL NIL NIL NIL)
 (VSET V 0 'FOO)          ==> FOO
 (VSET V 1 'BAR)          ==> BAR
 (VSET V 2 'BAZ)          ==> BAZ
 (VSET V 3 'FROB)         ==> FROB
;(VSET V 5 'BLAH) is an error
 V                        ==> #(FOO BAR BAZ FROB NIL)
 (VREF V 0)               ==> FOO
 (VREF V 1)               ==> BAR
 (VREF V 4)               ==> NIL

