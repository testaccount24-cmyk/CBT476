
Function: ZILRDCH

Syntax:   (ZILRDCH &optional arg1 arg2 arg3)

 arg1 (optional, evaluated) - a file name.
 arg2 (optional, evaluated) - any LISP object, but generally T or NIL.
 arg3 (optional, evaluated) - any LISP object, but generally T or NIL.

Returns:

 A symbol whose print name is a character read from the input file
 specified by arg1, or NIL if end-of-file or end-of-line is encountered
 while scanning for a character.

Processing:

 The file specified by arg1 is read from the current character position
 and logical record (the ENDREAD and ZPUTFPI functions can change
 these).  One character is returned and made into a symbol, and the
 current character pointer is updated to point to the next character.

 If arg2 is specified and is non-NIL, the generated symbol is "interned"
 on the object list; otherwise it is not, in which case it will not be
 EQ to any other atom.

 If arg3 is specified and is non-NIL, the character returned from the
 file is translated to upper case before the symbol is built; otherwise
 it is used as is.

 If either end-of-file (i.e. the current character pointer has reached
 the end of the file) or end-of-line (i.e. the current character
 pointer has reached the end of the line) is encountered, NIL is
 returned (the EOF and NEWLINEP functions may be used to determine
 which of these was the case).  In the case of end-of-line, the next
 call to ZILRDCH will return either the first character from the next
 line, or end-of-file (note that the end-of-file condition is always
 preceded by the end-of-line condition unless the file is empty).

 If the file is already in end-of-file status when ZILRDCH is issued,
 an error is signalled.

Errors signaled:

 Invalid input file object (not a symbol 4 characters or less).
 Specified input file is not allocated or could not be opened.
 Read after end of file.

Notes:

 See member $FILE for more information on file names.

 ZILRDCH, READCH, READLINE and TYI are the only functions that can cause
 the "newline" indication to be set in an input file (see NEWLINEP).

 Currently, if ZILRDCH is issued against a file allocated to the
 terminal (including standard input) which has never been accessed by an
 input function before, it will return NIL and NEWLINEP will return
 true.  In other words, the first input from a terminal file is a
 "newline".

 Compare ZILPKCH, which is like ZILRDCH but does not change the current
 character pointer.

Examples (assuming the following line of input from file FOO):

 fffffffffffffffffffffffffffffff...

 (SETQ   AT1 (ZILRDCH 'FOO NIL NIL)) ==> f
 (EQ     AT1 'f)                    ==> NIL
 (EQUALP AT1 'f)                    ==> T

 (SETQ   AT2 (ZILRDCH 'FOO T  NIL)) ==> f
 (EQ     AT2 'f)                    ==> T
 (EQUALP AT2 'f)                    ==> T

 (SETQ   AT3 (ZILRDCH 'FOO NIL T  ) ==> F
 (EQUALP AT3 'F)                    ==> T

