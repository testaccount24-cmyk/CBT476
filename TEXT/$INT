
***********************************************************************
*                                                                     *
*        If you have the required ISPF setup for ZIL (CLIST, HELP,    *
*        PANEL, MSG, SKEL), all you need to do to use ZIL is invoke   *
*        the XZIL clist (from inside or outside of ISPF) to get to    *
*        the ZIL primary option menu.  From there you can invoke      *
*        the interpreter, call a compiled LISP program, or do a       *
*        foreground or background compile.                            *
*                                                                     *
***********************************************************************

To run the ZIL interpreter, you may do either of the following:

  (1) Use ISPF XZIL option 3.

  (2) Use the LISP clist.

*********************************************************************

You may find these LISP functions useful under the interpreter:

  (END)  - terminates the interpreter "cleanly" by telling the
           interpreter to terminate itself.  (END) must be coded by
           itself, with no arguments, and cannot be generated by a
           macro expansion.  Contrast this with (QUIT) and (EXIT),
           which are executable ZIL functions.

  (QUIT) - terminates the interpreter "cleanly" by simulating an
           end-of-file condition on the input file (you can specify
           an optional file name to simulate EOF on some other file,
           but it won't kill the interpreter that way).

  (EXIT) - terminates the interpreter "dirtily" by causing immediate
           exit from LISP code back to the operating system.  An
           optional return code specification on EXIT will set
           the return code for the caller (e.g. (EXIT 12) sets the
           return code to 12).

  (HELP) - displays members of the on-line ZIL documentation
           contained in 'PROGLIB.ZIL.TEXT'.
           (HELP FUNCTIONS) will display a list of available LISP
           functions.

  (MSGLEVEL) - coded as is, displays the current message level.
           Coded as (MSGLEVEL n), where n is a number between 0 and 3,
           controls the display of ZIL messages at the terminal.
           0, the initial default, allows all messages; 1 suppresses
           informational messages, and 2 permits only error messages
           to appear.

  (PP  name) - pretty-prints the function definition of "name" to your
               terminal.  (ZILPP 'name 'file) pretty-prints the
               definition to output file "file".

  (ED 'name) - pretty-prints the function definition of "name" to a
               temporary LISP source dataset and enters ISPF EDIT to
               allow you to edit it.  If there is no function
               definition for "name", you are given a starting file
               in which to create it.  After you save it, the newly
               created definition is automatically reloaded into
               your ZIL environment.

               Note:  ED is available only under ISPF.


*********************************************************************

 Some Helpful Features

 The following symbols are assigned values that are useful during an
 interpretive session:

  *     always contains the last value returned from an evaluation by
        the interpreter top-level.
  **    contains the previous value of *.
  ***   contains the previous value of **.

  +     always contains the last form typed in at top level.
  ++    contains the previous value of +.
  +++   contains the previous value of ++.

  -     contains the form currently being processed by the interpreter.


*********************************************************************

 The "Dribble" Facility

ZIL has a "dribble" facility, which allows you to specify a file (which
can be a data set or a SYSOUT class) into which all terminal input and
output will be copied during a ZIL session.  To use it, simply specify
the DRIBBLE keyword on the LISP CLIST, or fill in the DRIBBLE
specifications on the XZIL option 3 panel.

*********************************************************************

Use the TSO HELP command for more information on the XZIL and LISP
clists.

