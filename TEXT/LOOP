
Macro: LOOP

Syntax:   (LOOP forms)

 forms: see below.

Returns:

 Depends on what the forms are.

Processing:

 This is the generalized looping macro; versions of this are present
 in Maclisp and NIL, but it has not become standardized in Common LISP
 as yet.  Some examples follow below.

 ZIL currently supports the following LOOP keywords:

 FOR clauses including IN, ON, FROM, TO, DOWNTO, BY, =, THEN keywords
 WITH clauses including the = keyword

 DO, INITIALLY, FINALLY

 IF, WHEN, UNLESS (including ELSE clauses)

 WHILE, UNTIL, RETURN

 ALWAYS, NEVER, THEREIS

 COLLECT, NCONC, APPEND (including the INTO subkeyword)

 SUM, COUNT, MAXIMIZE, MINIMIZE (including theINTO subkeyword)

 PUSH (similar to COLLECT but CONSes onto front of list being built)

 .. and -ING forms of the above where appropriate.

 AS is synonymous with FOR.

 If no LOOP keyword is present, DO is assumed where appropriate.

 Destructuring is also supported.

 Type declarations (... FOR X FIXNUM ...) are accepted but ignored.

Errors signaled:

 Syntax errors - invalid, misplaced or unsupported keywords, etc.

Notes:

 For an in-depth discussion of LOOP, refer to one of the following:

  The Revised Maclisp Manual (K. Pitman)
  NIL Reference Manual (Burke, Carrette, Eliot)

 ZIL does not yet support all of the features described therein,
 though most of the Maclisp-documented features are present.

 It is the intention of the ZIL developers to add to the capability
 of the LOOP macro as time goes by.  Right now it is set up for
 minimal support of most outside code.

Examples:

 (LOOP FOR X IN '(A B C) COLLECT (CONS X X))
                          ==> ((A . A) (B . B) (C . C))

 (LOOP FOR I FROM 1 TO 10 NCONC (LIST (+ I 100)))
                          ==> (101 102 103 104 105 106 107 108 109 110)

 (LOOP FOR X IN '(A B C D E F G)
       UNLESS (EQ X 'E) COLLECT X INTO Z
       FINALLY (RETURN (NREVERSE Z)))
                          ==> (G F D C B A)

 (LOOP FOR X ON '(A B C D E F G H) BY #'CDDR
       COLLECT (CAR X)
       UNTIL (EQ (CAR X) 'E))
                          ==> (A C E)

 (LOOP FOR X IN (OBLIST) ALWAYS (ATOM X)) ==> T

 (LOOP FOR I FROM 10 DOWNTO 1 NEVER (> I 10)) ==> T

