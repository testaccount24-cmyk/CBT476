
Function: INVOKE

Syntax:   (INVOKE arg1 &optional arg2)

 arg1 (required, evaluated) - a string (or symbol) between 1 and 8
                              characters in length.
 arg2 (optional, evaluated) - a string between 0 and 100 characters
                              in length.

Returns:

 A fixnum containing the return code from the program named by arg1
 after it is invoked, or NIL if that program abended.

Processing:

 arg1 is assumed to be the name of a valid load module residing in
 a system load library or the link pack area.
 If arg2 is present and not NIL, it must be a string which is
 taken to be the parameter string to be passed to the program.
 If arg2 is omitted or NIL, a null parameter string is used.

 Note that both args are unconditionally translated to UPPER CASE,
 in accordance with OS conventions.

 The contents of the return code (register 15) when the program returns
 control are used to build a fixnum containing the value to be returned
 as the INVOKE function value. This should be 0 if the command completed
 successfully.

 If the program abnormally terminates (ABENDs), a message is displayed
 to that effect and INVOKE returns NIL as the value.

 INVOKE, unlike TSO, will work in batch environments as well as
 foreground.

 You cannot invoke TSO commands with this function, or programs that
 require APF authorization (like IEBCOPY).  (You must use the TSO
 function, with the TSOEXEC command if necessary, if you require
 these features.)

 The success of this function is dependent upon the amount of system
 memory available at the time that the program is attempted to be
 invoked.  If there is insufficient virtual storage, the program
 requested will probably ABEND.

Errors signaled:

 Program name invalid or not found.
 Second arg not a string (it cannot be a symbol, for then NIL would
 be ambiguous as a PARM value).
 Miscellaneous system failures.

Notes:

 Programs which have the same names as compiled ZIL functions or other
 ZIL routines will not work.  The system will attempt to execute the ZIL
 code as a program and unpredictable results will occur.

 The requested program must be either in a system library, the link
 pack area (LPA), or a JOBLIB, STEPLIB or task library; the library
 containing ZIL modules will work (because you may wish to include a
 STEPLIB in batch for both ZIL code and invoked programs), but, as
 stated above, results are definitely not predictable.

Examples:

 (INVOKE 'IEFBR14) ==> 0

 (INVOKE "IEBGENER")   will call the IEBGENER utility and
  (assuming that you have set up the proper allocations previously)
  will return the return code from IEBGENER.

 (INVOKE 'X3NOTIFY "/ABC1234")

