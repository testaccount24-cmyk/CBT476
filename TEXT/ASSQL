
Function: ASSQL

Syntax:   (ASSQL arg1 alist2)

 arg1   (required, evaluated) - any LISP object.
 alist2 (required, evaluated) - a list in association list format
                                (i.e. a list of dotted pairs).

Returns:

 The first dotted pair in alist2 whose CAR is EQL to arg1;
 NIL if no such pair exists.

Processing:

 alist2 (an association list) is searched for an element (dotted pair)
 whose CAR is EQL to arg1.  When the first such pair is found, the
 pointer to it is returned.  The caller of ASSQL may use the CDR of the
 returned pair as the "value" of arg1 as found on the alist2 association
 list, unless NIL is returned, indicating no value found.

 NIL may occur in place of a dotted pair anywhere within alist2; when
 this is the case, it is skipped over and the search continues.

Errors signaled:

 None.

Notes:

 No checking is done as to the validity of the arguments.
 Unpredictable results will occur if the second argument is not NIL or
 a list of dotted pairs.

 Compare ASSQ, which is like ASSQL but uses an EQ test;
 and ASSQUAL, which is like ASSQL but uses an EQUAL test.

Examples:

 (ASSQL 'A NIL)                           ==> NIL
 (ASSQL 'A '((A . 1) (B . 2) (C . 3)))    ==> (A . 1)
 (ASSQL 'D '((A . 1) (B . 2) (C . 3)))    ==> NIL
 (ASSQL 'BAZ '((FOO . BAR) (BAZ . FROB) (BAZ . NICATE)))
                                          ==> (BAZ . FROB)

 ;The following shows that the comparison test is EQL.

 (ASSQL 1.0 '((1.0 . A) (2.0 . B) (3.0 . C)))     ==> (1.0 . A)
 (ASSQL 1.0 '((1 . A) (2 . B) (3 . C)))     ==> NIL
 (ASSQL '(A B) '(((C D) E) ((A B) Z)))      ==> NIL

