
Function: LESSP

Syntax:   (LESSP arg1 arg2)
    or:   (< arg1 &rest args)

 arg1 (required, evaluated) - a number, string or symbol.
 arg2 (required, evaluated) - a number, string or symbol.
 args (optional, evaluated) - a number, string or symbol.

Returns:

 For symbols and strings:

  T if the print name of each arg is alphanumerically less than its
  preceding arg (using the EBCDIC collating sequence), else NIL.

 For numbers:

  T if each arg is numerically less than its preceding arg,
  else NIL.

Processing:

 For LESSP, which takes exactly two args, the following holds:

  If the arguments are EQ, regardless of type, the result is
  always false (i.e. NIL is returned).

  If both arguments are numbers, a numeric comparison is performed.
  If the types differ, the appropriate conversion is performed (see
  member $ARITH for conversion rules) and the numeric compare is done.

  If both arguments are strings or symbols, a character comparison is
  performed on the string text of the atoms, where the string text of
  a symbol is its print name.  Case is significant.

 For <, which takes any number of args, the result is T if there is only
 one arg, or if all the args are monotonically decreasing (adjacent
 pairs are compared via LESSP); otherwise the result is NIL.

Errors signaled:

 Non-atomic argument.
 One argument is a string or symbol and another is a number.

Notes:

Examples:

 (LESSP 'FOO 'FOO)      ==> NIL
 (LESSP 'A 'B)          ==> T
 (LESSP 'AAA 'A)        ==> NIL
 (LESSP 'BAR 'BAZ)      ==> T
 (LESSP "bar" "baz")    ==> T
 (LESSP "BAR" 'BAZ)     ==> T
 (LESSP 'BAR  "BAZ")    ==> T
 (LESSP 2.0 3)          ==> T
 (LESSP 1 1.0)          ==> NIL

 (< 1)                  ==> T
 (< 1 2)                ==> T
 (< 1 2 3)              ==> T
 (< 1 2 3 3)            ==> NIL
 (< 1 2 3 4 5)          ==> T
 (< 1 2 4 3 5)          ==> NIL

