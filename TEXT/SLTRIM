
Function: STRING-LEFT-TRIM

Syntax:   (STRING-LEFT-TRIM bag1 str2)
    or:   (SLTRIM bag1 str2)

 bag1 (required, evaluated) - a string.
 str2 (required, evaluated) - a string.

Returns:

 A string built by removing all characters present in bag1 from the
  beginning of str2; in other words, leading characters are removed.

Processing:

 bag1 is treated as a "character bag", and str2 is scanned from the
 beginning for characters which are part of that bag.  The result
 is a substring of str2 from the first character which is not part
 of that bag.

Errors signaled:

 bag1 not a string.
 arg2 not a string.

Notes:

 As for many functions that take strings as arguments, symbols are
 permitted; their print names are used in that case.  However, this
 function always returns a string.

 Unlike Common LISP, ZIL does not permit a list to be specified
 for bag1.  Since symbols are permitted, NIL is interpreted as a
 "character bag" of the characters N, I and L.

Examples:

 (STRING-LEFT-TRIM "of" "foobar")  ==> "bar"
 (STRING-LEFT-TRIM ""   "foobar")  ==> "foobar"
 (STRING-LEFT-TRIM "xy" "foobar")  ==> "foobar"
 (STRING-LEFT-TRIM "fb" "foobar")  ==> "oobar"
 (STRING-LEFT-TRIM 'FO  'FOOBAR )  ==> "BAR"

