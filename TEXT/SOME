
Function: SOME

Syntax:   (SOME arg1 arg2 ... argn)

 arg1 (required, evaluated) - a function that can be APPLY'ed.
 arg2 (optional, evaluated) - a proper list.
 argn (optional, evaluated) - a proper list.

Returns:

 NIL if all of the values produced by applying the first argument
 function to successive elements (CAR's) of the other argument lists
 are NIL, else the first non-NIL value thus generated.

Processing:

 The function specified by the first argument is applied to each of the
 elements (CAR's) of the lists specified by the other arguments, until
 one of the lists is exhausted or a non-NIL value is produced by this
 application.  When the latter occurs, SOME returns that value.

 If no lists are specified, SOME returns NIL.

Errors signaled:

 None.

Notes:

 Compare EVERY, NOTANY, NOTEVERY, and the mapping functions.

Examples:

 (SOME #'INTEGERP NIL)             ==> NIL
 (SOME #'INTEGERP '(A B C D E))    ==> NIL
 (SOME #'INTEGERP '(1 2 3 4 5))    ==> T
 (SOME #'INTEGERP '(A 2 3 4 5))    ==> T
 (SOME #'INTEGERP '(1 2 3 4 E))    ==> T
 (SOME #'INTEGERP '(A B 3 D E))    ==> T
 (SOME #'EQ '(A B C) '(A B C D))   ==> T
 (SOME #'EQ '(X B C) '(A B C D))   ==> T
 (SOME #'EQ '(X Y Z) '(A B C D))   ==> NIL
 (SOME #'EQ '(A B Z) '(A B C D))   ==> T

 (SOME #'(LAMBDA (X) (IF X 'FOO NIL)) '(NIL A NIL B NIL))  ==> FOO

