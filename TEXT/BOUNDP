
Function: BOUNDP

Syntax:   (BOUNDP arg1)

 arg1 (required, evaluated) - a symbol.

Returns:

 T or NIL, depending of whether the symbol specified by arg1 currently
 has a value (is bound).

Processing:

 The variable specified by arg1 must have a current SPECIAL binding
 (either globally, e.g. via DEFVAR, or dynamically, e.g. via LET).

 If it does, T is returned; otherwise, if it has a valid AUTOVALUE
 property the symbol autoload process is invoked to see if a binding can
 be obtained.  If no binding is available, NIL is returned.

 Lexical bindings are NOT eligible.

 If the symbol is NIL, T or a keyword, BOUNDP may or may not be true,
 depending on the implementation.

 If the argument is not a symbol, a warning message is issued and NIL
 is returned.

Errors signaled:

 None.

Notes:

 Remember that the argument to BOUNDP is evaluated.

 See SETQ and SYMEVAL for more information.

Examples:

 (PROGN
  (SETPLIST 'A NIL)                  ; Remove any funny properties.
  (MAKUNBOUND 'A)
 )                                   ==> A ; Insure A not bound.

 (BOUNDP '*FEATURES*)     ==> T  ; This is always present.
 (BOUNDP 'A)              ==> NIL
 (LET ((A)) (BOUNDP 'A))  ==> NIL
 (LET ((A)) (DECLARE (SPECIAL A))
            (BOUNDP 'A))  ==> T
 (BOUNDP 'A)              ==> NIL
 (DEFVAR A 'B)            ==> A
 (BOUNDP 'A)              ==> T

 (BOUNDP NIL)  ==> NIL ; or T
 (BOUNDP T)    ==> NIL ; or T
 (BOUNDP :FOO) ==> NIL ; or T

