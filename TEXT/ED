
Function: ED

Syntax:   (ED &optional arg1)

 arg1 (optional, evaluated) - a symbol or a string.

Returns:

 (See under PROCESSING for description.)

Processing:

 If arg1 is omitted or NIL, the ISPF editor is entered on the dataset
 created by the (ED 'symbolname) function, which is created as a new
 (empty) dataset if it doesn't already exist.

 If arg1 is a string, it is interpreted as a data set name (similarly to
 the way it is interpreted by OPEN) and the ISPF editor is entered on
 this dataset.  For this case, the return value from ED is arg1.

 If arg1 is a symbol, the interpretive function definition associated
 with the symbol is pretty-printed into a temporary data set, and then
 the ISPF editor is entered on this dataset.  If the dataset is saved,
 the contents are then loaded under the interpreter, and the return
 value is that returned by the LOAD function; if the dataset was not
 saved, NIL is returned and no load takes place.

 If a symbol with no interpretive function definition is specified,
 the ISPF editor is entered on a data set with no LISP code in it
 (only comments).  The user may then enter a new function definition
 and save it for loading into the interpreter.  Although any valid
 LISP forms may be entered, it is generally assumed that the file
 will contain a (re)definition of the function being edited.

 This function is available only if ZIL was entered under ISPF.

Errors signaled:

 Arg1 not a symbol or a string, or a null string, or a string
 longer than 56 characters.

 ISPF dialog services not available; either ZIL is running outside
 of ISPF or it is running under the TSO Authorized Service Facility
 or other environment where ISPF dialog services are temporarily
 unavailable.

 Errors detected by the ISPF EDIT service.

Notes:

 ISPF and ISPF/PDF Version 2 must be installed to use this function.

 ED may be used to do quick editing of function definitions that
 were typed in "on the fly" under ZIL.  To save a permanent copy,
 you can use the CREATE or REPLACE command of the ISPF editor.
 You can use this to create function definitions for functions
 that have not been defined yet, as well as functions that are
 already defined.

 If you were in split screen mode when you started ZIL, you will
 be put back into the same split screen mode when ED enters ISPF.
 Thus, (ED) is convenient when running an interactive ZIL session
 under one screen of ISPF; you can use it just to flip back to
 the other screen periodically, without actually having to edit
 anything.

 The name of the temporary data set is "tsoprefix.SPFTEMPZ.ZILEDIT.LISP"
 and is not changeable (sorry).  The data set will be created as NEW
 if it does not exist in your catalog.  Note that whenever
 (ED 'functionname) is used, this dataset is opened for output and
 rewritten, so the previous contents are always lost.  On the other
 hand, (ED) goes into EDIT on the previous contents of that data set.

 In ZIL 1.2, (ED "data.set.name") returned T if the dataset was saved,
 and NIL if it wasn't.  This was changed so that you could type
 (LOAD *) under the interpreter to load the data set just edited
 if you wanted to.  The ZILEDIT function still returns T or NIL
 depending on whether the dataset was saved.

 At Draper, if ED is invoked from within a LISP program (including
 the interpreter) that was invoked under ISPF via the XINVOKE command,
 ED will fail due to ISPF dialog services not being available.  For
 this reason, the ZIL interpreter is invoked by the ISPF option via
 XCMD (to pick up library allocations).

Examples:

 (ED 'foo)

 enters the ISPF editor on a file containing a pretty-printed
 definition of the function foo.

 (ED)

 reenters the ISPF editor on whatever you had put in that file
 last time.

 (ED "cmd.clist(zlogon)")

 allows you to edit your ZLOGON CLIST while under ZIL.

