        PROC 1  DSNAME +
                FUNCTION PROGRAM MODULE +
                NAME() +
                LOAD() NOLOAD +
                ASM() NOASM +
                PRINT(*) NOPRINT +
                MACROS() +
                ACSIZE() +
                CSSIZE() +
                PDSIZE() +
                VSSIZE() +
                DEBUG NODEBUG +
                TRANSDEBUG NOTRANSNODEBUG +
                SYSPARM (XA) +
                LIBRARY (PROGLIB.ZIL.LOAD) +
                MACLIB  (PROGLIB.ZIL.MACLIB) +
                XTRACE
        /*
        /**********************************************************************
        /*                                                                    *
        /*  ZIL version 1.3 - (c) 1988 Charles Stark Draper Laboratory Inc.   *
        /*                                                                    *
        /**********************************************************************
        /*
        IF &XTRACE ¬= THEN CONTROL LIST SYMLIST CONLIST
        /*
        IF &NOASM = NOASM THEN DO
         SET ASM =
         SET NOLOAD = NOLOAD
        END
        IF &NOLOAD = NOLOAD THEN SET LOAD =
        ELSE IF &STR(&LOAD) = THEN DO
         WRITE ZILCOMP: LOAD(LIBRARY(MEMBER)) MUST BE SPECIFIED.
         EXIT C(16) Q
        END
        /*
        SET KIND = &FUNCTION &PROGRAM &MODULE
        IF &KIND = THEN DO
         WRITE ZILCOMP: COMPILE OF MODULE ASSUMED.
         SET KIND = MODULE
        END
        ELSE IF &KIND ¬= FUNCTION && &KIND ¬= PROGRAM && &KIND ¬= MODULE THEN DO
         WRITE ZILCOMP: CONFLICTING OPERANDS SPECIFIED - &KIND
         EXIT C(12) Q
        END
        /*
        DO WHILE &STR(&NAME) =
         WRITENR ENTER THE NAME OF THE &KIND TO BE COMPILED:
         READ NAME
        END
        /*
        IF &STR(&ACSIZE) ¬= THEN SET ACSIZE = &STR(A=&ACSIZE)
        ELSE SET ACSIZE =
        IF &STR(&CSSIZE) ¬= THEN SET CSSIZE = &STR(C=&CSSIZE)
        ELSE SET CSSIZE =
        IF &STR(&PDSIZE) ¬= THEN SET PDSIZE = &STR(P=&PDSIZE)
        ELSE SET PDSIZE =
        IF &STR(&VSSIZE) ¬= THEN SET VSSIZE = &STR(V=&VSSIZE)
        ELSE SET VSSIZE =
        /*
        IF &XTRACE = THEN CONTROL NOMSG
        FREE FI(ZILI ZILO ZILISRC ZILOCODE ZILICMAC ZILICTRN)
        FREE ATTR(@PRINT @ASM @LOAD @OBJ @ASMLIST)
        CONTROL MSG
        /*
        IF &STR(&ASM) = THEN SET ASM = &STR('&SYSPREF..$ZILTEMP.ASM')
        SET ASMLIST = &STR('&SYSPREF..$ZILTEMP.ASMLIST')
        SET OBJCODE = &STR('&SYSPREF..$ZILTEMP.OBJ')
        /*
        ALLOC FI(ZILISRC) DA(&DSNAME) SHR
        /*
        IF &NOPRINT = NOPRINT THEN DO
         ALLOC FI(ZILO) DUMMY
        END
        ELSE IF &STR(&PRINT) ¬= &STR(*) +
             && &STR(&PRINT) ¬= THEN DO
         CONTROL NOFLUSH
         IF &XTRACE = THEN CONTROL NOMSG
         ALLOC FI(ZILO) DA(&PRINT)
         IF &LASTCC ¬= 0 THEN DO
          CONTROL FLUSH MSG
          ATTR @PRINT RECFM(F B A) LRECL(151) BLKSIZE(6191)
          ALLOC FI(ZILO) DA(&PRINT) T SP(10 10) REL USING(@PRINT)
         END
         CONTROL FLUSH MSG
        END
        ELSE DO
         ALLOC FI(ZILO) DA(*)
        END
        /*
        IF &NOASM = NOASM THEN DO
         ALLOC FI(ZILOCODE) DUMMY
        END
        ELSE DO
         CONTROL NOFLUSH
         IF &XTRACE = THEN CONTROL NOMSG
         ALLOC FI(ZILOCODE) DA(&ASM)
         IF &LASTCC ¬= 0 THEN DO
          CONTROL FLUSH MSG
          ATTR @ASM RECFM(F B) LRECL(80) BLKSIZE(6160)
          ALLOC FI(ZILOCODE) DA(&ASM) T SP(10 10) REL USING(@ASM)
          FREE ATTR(@ASM)
         END
         CONTROL FLUSH MSG
        END
        /*
        SET KINDPARM = &SUBSTR(1,&KIND)
        IF &DEBUG = DEBUG THEN SET DEBUGPARM = Y
        ELSE SET DEBUGPARM = N
        SET PARM = &STR(&KINDPARM&DEBUGPARM&NAME)
        /*
        ALLOC F(ZILI) DA(*) REU
        /*
        IF &STR(&MACROS) ¬= THEN +
         ALLOC F(ZILICMAC) DA(&MACROS) SHR
        ELSE +
         ALLOC F(ZILICMAC) DUMMY
        /*
        IF &TRANSDEBUG&NOTRANSDEBUG = TRANSDEBUG THEN DO
         ALLOC F(ZILOCTRN) SP(100 100) T REL DEL
         SET CTRN = Y
        END
        ELSE DO
         SET CTRN = N
        END
        /*
        CALL '&LIBRARY(ZILCO)' '\&ACSIZE,&CSSIZE,&PDSIZE,&VSSIZE\&PARM'
        SET ZILCOCC = &LASTCC
        IF &ZILCOCC ¬= 0 THEN DO
         IF &NOPRINT = NOPRINT THEN DO
          WRITE ZILCOMP: ZIL COMPILATION FAILED WITH ERROR CODE &ZILCOCC..
          WRITE          RERUN THIS CLIST WITHOUT NOPRINT TO DETERMINE THE ERROR.
         END
         ELSE IF &SUBSTR(1,&PRINT ) = ' THEN DO
          WRITE ZILCOMP: ZIL COMPILATION FAILED WITH ERROR CODE &ZILCOCC..
          WRITE          BROWSE &PRINT TO DETERMINE THE ERROR.
         END
         EXIT C(&ZILCOCC) QUIT
        END
        FREE F(ZILOCODE ZILISRC ZILICMAC ZILI ZILO)
        IF &CTRN = Y THEN DO
         OPENFILE ZILOCTRN
         ERROR GOTO TRNEND
         TRNLOOP:+
         GETFILE ZILOCTRN
         WRITE &ZILOCTRN
         GOTO TRNLOOP
         TRNEND:ERROR OFF
         CLOSFILE ZILOCTRN
         FREE F(ZILOCTRN)
        END
        /*
        IF &NOASM&NOLOAD ¬= THEN EXIT
        /*
        WRITE ZILCOMP: &NAME COMPILED INTO &ASM
        IF &SUBSTR(1,&PRINT ) = ' THEN +
        WRITE         LISTING IN:  &PRINT
        /*
        CONTROL NOFLUSH
        IF &XTRACE = THEN CONTROL NOMSG
        FREE F(SYSIN SYSPUNCH SYSPRINT SYSLIB SYSUT1 SYSUT2 SYSUT3 SYSTERM)
        ALLOC FI(SYSPUNCH) DA(&OBJCODE)
        IF &LASTCC ¬= 0 THEN DO
         CONTROL FLUSH MSG
         ATTR @OBJ RECFM(F B) LRECL(80) BLKSIZE(3200)
         ALLOC FI(SYSPUNCH) DA(&OBJCODE) T SP(10 10) REL USING(@OBJ)
        END
        /*
        CONTROL NOFLUSH
        IF &XTRACE = THEN CONTROL NOMSG
        ALLOC FI(SYSPRINT) DA(&ASMLIST)
        IF &LASTCC ¬= 0 THEN DO
         CONTROL FLUSH MSG
         ATTR @ASMLIST RECFM(F B A) LRECL(121) BLKSIZE(6171)
         ALLOC FI(SYSPRINT) DA(&ASMLIST) T SP(10 10) REL USING(@ASMLIST)
        END
        CONTROL FLUSH MSG
        ALLOC F(SYSIN) DA(&ASM) SHR
        ALLOC F(SYSLIB) DA('SYS1.MACLIB' '&MACLIB') SHR
        ALLOC F(SYSUT1) T SP(50 50) DEL REL
        ALLOC F(SYSUT2) T SP(50 50) DEL REL
        ALLOC F(SYSUT3) T SP(50 50) DEL REL
        ALLOC F(SYSTERM) DA(*)
        /*
        WRITE ASSEMBLY LISTING OUTPUT TO: &ASMLIST
        WRITE ASSEMBLING &NAME INTO &OBJCODE
        CALL 'SYS1.LINKLIB(IFOX00)' +
             'LIST,TERM,ESD,RLD,NOXREF,DECK,NOOBJECT,SYSPARM(&SYSPARM)'
        IF &LASTCC ¬= 0 THEN DO
         WRITE ZILCOMP: ASSEMBLY FAILED - CHECK &ASMLIST FOR ERRORS.
         EXIT C(16) QUIT
        END
        FREE F(SYSIN SYSPUNCH SYSPRINT SYSLIB SYSUT1 SYSUT2 SYSUT3 SYSTERM)
        /*
        IF &NOLOAD = NOLOAD THEN EXIT
        /*
        WRITE LINKING &OBJCODE INTO &LOAD
        IF &STR(&SUBRLIB) = THEN SET LINKLIB =
        ELSE SET LINKLIB = LIB(&SUBRLIB)
        IF &KIND = PROGRAM THEN DO
         LINK &OBJCODE +
              LOAD(&LOAD) +
              &LINKLIB +
              PRINT(*) +
              LIST LET TERM &MAP &TEST
         SET LINKCC = &LASTCC
        END
        ELSE DO
         LINK &OBJCODE +
              LOAD(&LOAD) +
              PRINT(*) +
              LIST LET TERM NCAL &MAP &TEST
         SET LINKCC = &LASTCC
        END
        IF &XTRACE = THEN CONTROL NOMSG
        FREE FI(ZILI ZILO ZILISRC ZILOCODE ZILICMAC ZILICTRN)
        FREE ATTR(@PRINT @ASM @LOAD @OBJ @ASMLIST)
        CONTROL MSG
        IF &LINKCC > 4 THEN EXIT QUIT
        WRITE ZILCOMP: &NAME LOAD MODULE IS IN &LOAD..
        EXIT
