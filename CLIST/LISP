/***********************************************************************
/*                                                                     *
/* ZIL VERSION 1.3 - invoke the ZIL interpreter, without ISPF          *
/*                                                                     *
/***********************************************************************
PROC 0 +
       SUBRLIB() INITFILE() NOINITFILE +
       ACSIZE() CSSIZE() PDSIZE() VSSIZE() +
       DRIBBLE +
       LIBRARY() +
       NEW OLD XTRACE

NGLOBAL RESULT

IF &XTRACE = XTRACE THEN CONTROL CONLIST SYMLIST LIST
CONTROL NOCAPS

IF &NEW&OLD = NEW THEN SET SYS = N
ELSE IF &NEW&OLD = OLD THEN SET SYS = O
ELSE IF &NEW&OLD =     THEN SET SYS =
ELSE DO
 WRITE Cannot specify both NEW and OLD - specify one or neither.
 EXIT C(12) Q
END

/* You may need to do some configuring in this section. */

SET DEFAULTLIBRARY = &STR(PROGLIB.ZIL.&SYS.LOAD)

SET HELDSYSOUTCLASS = H        /* JES held SYSOUT class */

/* If the EXECPGM command from file 183 of the CBT tape is present
/* on your system, set this variable to Y.  Otherwise set it to N.

SET EXECPGM_IS_AVAILABLE = N

/* End of configuring section. */

IF &SYSTSOE GE 2050 THEN SET TSOLIB_IS_AVAILABLE = Y
ELSE SET TSOLIB_IS_AVAILABLE = N

SET SUBMETHOD =
IF &NRSTR(&SUBRLIB) NE THEN DO
 IF      &EXECPGM_IS_AVAILABLE = Y THEN SET SUBMETHOD = EXECPGM
 ELSE IF &TSOLIB_IS_AVAILABLE  = Y THEN DO
  ISPQRY
  IF &LASTCC = 0 THEN DO
   WRITE Error: SUBRLIB is not available from within ISPF.
   WRITE        Please reinvoke this CLIST from TSO READY mode, or
   WRITE        without the SUBRLIB keyword.
   EXIT C(16) Q
  END
  ELSE DO
   SET SUBMETHOD = TSOLIB
  END
 END
 ELSE DO
  WRITE Error: SUBRLIB is not available.
  WRITE        Please reinvoke this CLIST without the SUBRLIB keyword.
  EXIT C(16) Q
 END
END

IF &STR(&LIBRARY) = THEN SET LIBRARY = &STR(&DEFAULTLIBRARY)

SET PRESENT_FILES =
SET MISSING_FILES =
IF &STR(&INITFILE) = THEN SET NOINITFILE = NOINITFILE
IF &NOINITFILE = THEN DO
 ALLOC F(ZILIINIT) DA(&INITFILE) SHR REU
 SET PRESENT_FILES = &PRESENT_FILES ZILIINIT
END
ELSE DO
 SET MISSING_FILES = &MISSING_FILES ZILIINIT
END
IF &DRIBBLE = DRIBBLE THEN DO
 ALLOC F(ZILDRIBL) SYSOUT(&HELDSYSOUTCLASS) HOLD REU
 SET PRESENT_FILES = &PRESENT_FILES ZILDRIBL
END
ELSE DO
 SET MISSING_FILES = &MISSING_FILES ZILDRIBL
END
IF &MISSING_FILES ¬= THEN DO
 IF &XTRACE = THEN CONTROL NOMSG
 FREE F(&MISSING_FILES)
 CONTROL MSG
END

IF &STR(&ACSIZE) ¬= THEN SET ACSIZE = &STR(A=&ACSIZE)
ELSE SET ACSIZE =
IF &STR(&CSSIZE) ¬= THEN SET CSSIZE = &STR(C=&CSSIZE)
ELSE SET CSSIZE =
IF &STR(&PDSIZE) ¬= THEN SET PDSIZE = &STR(P=&PDSIZE)
ELSE SET PDSIZE =
IF &STR(&VSSIZE) ¬= THEN SET VSSIZE = &STR(V=&VSSIZE)
ELSE SET VSSIZE =

SET ZILINPARMS = &NRSTR(\&ACSIZE,&CSSIZE,&PDSIZE,&VSSIZE\&INITFILE)

IF &SUBMETHOD = EXECPGM THEN DO
 ALLOC FI(ZILLIB) DA(&SUBRLIB '&LIBRARY') SHR REU
 EXECPGM ZILIN PARM('&NRSTR(&ZILINPARMS)') TASKLIB(ZILLIB)
 SET CC = &LASTCC
 FREE FI(ZILLIB)
END
ELSE IF &SUBMETHOD = TSOLIB THEN DO
 TSOLIB ACT DATASET(&SUBRLIB '&LIBRARY')
 CALL *(ZILIN) '&NRSTR(&ZILINPARMS)'
 SET CC = &LASTCC
 TSOLIB DEACT
END
ELSE DO
 CALL '&LIBRARY(ZILIN)' '&NRSTR(&ZILINPARMS)'
 SET CC = &LASTCC
END

IF &CC ¬= 0 THEN WRITE *** LISP interpreter exited with code &CC ***
IF &PRESENT_FILES ¬= THEN FREE F(&PRESENT_FILES)

EXIT C(&CC)
