        PROC 0 XTRACE
        /**********************************************************************
        /*                                                                    *
        /* ZIL VERSION 1.3 - SEB1525 - 02/88                                  *
        /*                                                                    *
        /* ISPF ZIL option 5                                                  *
        /*                                                                    *
        /* 06/05/86 - SEB1525 - Support for compiling modules and EDIT.       *
        /* 06/21/88 - SEB1525 - Member list processing added.                 *
        /*                                                                    *
        /**********************************************************************

        NGLOBAL FTOPEN ZPARM
        NGLOBAL ACSIZE CSSIZE PDSIZE VSSIZE TRACE
        NGLOBAL XZILDBG XZILCTRN XZILSYS
        NGLOBAL XZILMAC1 XZILMAC2 XZILMAC3 XZILMAC4
        NGLOBAL XZILSUB1 XZILSUB2 XZILSUB3 XZILSUB4

        IF &XTRACE = XTRACE THEN CONTROL CONLIST SYMLIST LIST

        SET TRACE = &XTRACE
        CONTROL NOFLUSH NOCAPS
        ISPEXEC VGET (+
                      XZILDBG XZILCTRN XZILSYS +
                      XZILMAC1 XZILMAC2 XZILMAC3 XZILMAC4 +
                      XZILSUB1 XZILSUB2 XZILSUB3 XZILSUB4 +
                     ) PROFILE
        LOOP:+
        ISPEXEC CONTROL DISPLAY REFRESH
        ISPEXEC DISPLAY PANEL(XZIL5)
        IF &LASTCC ¬= 0 THEN EXIT
        SET XZZZSRC = &STR(&XZILSRC)
        SET XZZZLNK = &STR(&XZILLNK)
        SYSCALL QUALIFY XZZZSRC
        SYSCALL QUALIFY XZZZLNK
        IF &XZILSEL = E THEN DO
         SYSCALL EDIT ZILMEM('&XZILMEM') ZILSRC('&XZZZSRC')
         GOTO LOOP
        END
        IF &STR(&XZILACSZ) ¬= THEN SET ACSIZE = &STR(A=&XZILACSZ)
        ELSE SET ACSIZE =
        IF &STR(&XZILCSSZ) ¬= THEN SET CSSIZE = &STR(C=&XZILCSSZ)
        ELSE SET CSSIZE =
        IF &STR(&XZILPDSZ) ¬= THEN SET PDSIZE = &STR(P=&XZILPDSZ)
        ELSE SET PDSIZE =
        IF &STR(&XZILVSSZ) ¬= THEN SET VSSIZE = &STR(V=&XZILVSSZ)
        ELSE SET VSSIZE =
        SET ZPARM = &STR(&ACSIZE,&CSSIZE,&PDSIZE,&VSSIZE)
        SET FTOPEN = N

        IF &STR(&XZILSEL) ¬= THEN DO

         SYSCALL COMPILE ZILSEL ('&XZILSEL') +
                         ZILMEM ('&XZILMEM') +
                         ZILNAME('&XZILNAM') +
                         ZILSRC ('&XZZZSRC') +
                         ZILLINK('&XZZZLNK')

        END

        ELSE DO

        /* process member list */

         ISPEXEC CONTROL ERRORS RETURN

         ISPEXEC LMINIT DATAID(DATAID) DATASET('&XZZZSRC')
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMOPEN DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR

         SET MLCURSOR = ZCMD
         SET MLTOP    = &STR(&XZILMEM)

         MLOOP:+
         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(DISPLAY) MEMBER(&XZILMEM) +
                         COMMANDS(ANY) +
                         CURSOR(&MLCURSOR) +
                         TOP(&MLTOP) +
                         PANEL(XZIL5M)
         SELECT &LASTCC
          WHEN (0)
          WHEN (4) GOTO NO_MEMBERS
          WHEN (8) GOTO MFINISH
          OTHERWISE GOTO ERROR
         END

        /**********************************************************************/
        /*                                                                    */
        /* Selection variables returned:                                      */
        /*                                                                    */
        /* ZLMEMBER - name of selected member                                 */
        /* ZCMD     - primary command                                         */
        /* ZLLCMD   - line command used to select the member                  */
        /* ZLUDATA  - user data area on member list                           */
        /*                                                                    */
        /**********************************************************************/

         SET PROCESSED_OK = N

         SET SYSDVAL = &NRSTR(&ZCMD)
         READDVAL ZCMDVERB ZCMDOPERAND
         SELECT (&NRSTR(&ZCMDVERB))
          WHEN ()
          WHEN (E | EDIT) DO
           IF &SYSINDEX(*,&ZCMDOPERAND) ¬= 0 THEN DO
            ISPEXEC SETMSG MSG(ISRM053) /* "*" not valid */
            GOTO MLOOP
           END
           SYSCALL EDIT ZILMEM('&NRSTR(&ZCMDOPERAND)') ZILSRC('&XZZZSRC')
           SET CC = &LASTCC
           IF &CC > 8 THEN SET MLCURSOR = ZCMD
           ELSE DO
            SET ZCMD =
            SET MLTOP = &NRSTR(&ZCMDOPERAND)
            IF &CC = 0 THEN DO
             ISPEXEC LMMDISP DATAID(&DATAID) OPTION(ADD) +
                             MEMBER(&NRSTR(&ZCMDOPERAND)) +
                             ZLUDATA (*ADDED)
             IF &LASTCC > 8 THEN GOTO ERROR
             /* if lastcc = 8 then member already exists, not added */
            END
           END
           GOTO MLOOP
          END
          OTHERWISE DO
           ISPEXEC SETMSG MSG(ISPZ001)
           GOTO MLOOP
          END
         END

         SET MLTOP = &STR(&ZLMEMBER)

         PROCESS_A_MEMBER:+
         SET PROCESSED_OK = N

         SYSCALL BACKSCAN ZLUDATA
         SYSCALL BACKSCAN ZLMEMBER

         IF &SUBSTR(1,&ZLUDATA ) = &STR(*) THEN SET NEWNAME =
         ELSE SET NEWNAME = &STR(&ZLUDATA)

         SELECT &ZLLCMD
          WHEN (F|P|M) DO
                    SYSCALL COMPILE ZILSEL ('&ZLLCMD'  ) +
                                    ZILMEM ('&ZLMEMBER') +
                                    ZILNAME('&NEWNAME' ) +
                                    ZILSRC ('&XZZZSRC' ) +
                                    ZILLINK('&XZZZLNK' )
                    SELECT &LASTCC
                     WHEN (0)    DO
                                  SET ZLUDATA = &STR(*SEL'D)
                                  SET PROCESSED_OK = Y
                                 END
                     OTHERWISE    SET ZLUDATA = &STR(*ALCFAIL)
                    END
                    SET ZLLCMD =
                   END
          WHEN (E) DO
                    SYSCALL EDIT ZILMEM('&ZLMEMBER') ZILSRC('&XZZZSRC')
                    IF &LASTCC = 0 THEN +
                     SET ZLUDATA = &STR(*SAVED)
                    ELSE +
                     SET ZLUDATA =
                    SET ZLLCMD =
                    SET PROCESSED_OK = Y
                   END
          OTHERWISE DO
                     ISPEXEC SETMSG MSG(XZIL019) /* invalid selection code
                     SET MLTOP = &STR(&ZLMEMBER)
                    END
         END

         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(PUT) +
                         MEMBER(&ZLMEMBER) ZLLCMD(&ZLLCMD) ZLUDATA(&ZLUDATA)
         IF &LASTCC > 8 THEN GOTO ERROR

         IF &PROCESSED_OK = Y THEN DO
          ISPEXEC LMMDISP DATAID(&DATAID) OPTION(GET)
          SET CC =  &LASTCC
          IF &CC > 8 THEN GOTO ERROR
          IF &CC = 0 THEN GOTO PROCESS_A_MEMBER
          SET MLCURSOR = ZCMD
         END
         ELSE DO
          SET MLCURSOR = ZLLCMD
         END

         GOTO MLOOP

         NO_MEMBERS: ISPEXEC SETMSG MSG(XZIL018)
         SET CURSOR = XZILMEM
         GOTO LOOP

         MFINISH:+
         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(FREE)
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMCLOSE DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMFREE DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR

        END

        IF &FTOPEN = Y THEN DO
         ISPEXEC VGET ZTEMPF
         ISPEXEC FTCLOSE
         ISPEXEC CONTROL ERRORS RETURN
         ISPEXEC EDIT DATASET('&ZTEMPF')
         IF &LASTCC > 4 THEN ISPEXEC DISPLAY PANEL(ZILTERM)
         ISPEXEC CONTROL ERRORS CANCEL
        END
        GOTO LOOP

        COMPILE: PROC 0 ZILSEL()  ZILMEM()  ZILNAME() +
                        ZILSRC()  ZILLINK()

        IF &STR(&ZILNAME) ¬= THEN SET THENAME = &STR(&ZILNAME)
        ELSE SET THENAME = &STR(&ZILMEM)
        SET XZILPRG = &ZILSEL
        IF &ZILSEL = P THEN DO
         SET XZILNCA =
        END
        ELSE DO
         SET XZILNCA = NCAL
        END
        IF &STR(&XZILSUB1&XZILSUB2&XZILSUB3&XZILSUB4) ¬= THEN DO
         SET XZILCST = Y
        END
        ELSE DO
         SET XZILCST = N
        END
        IF &FTOPEN = N THEN DO
         SET FTOPEN = Y
         ISPEXEC FTOPEN TEMP
         ISPEXEC FTINCL XZIL5J
        END

        ISPEXEC FTINCL XZIL5

        RETURN
        END /* COMPILE */


        EDIT: PROC 0 ZILMEM() ZILSRC()
         ISPEXEC CONTROL ERRORS RETURN
         ISPEXEC EDIT DATASET('&ZILSRC(&ZILMEM)')
         SET CC = &LASTCC
         SELECT &CC
          WHEN (0) SYSCALL SETMSG_XZIL015 &ZILSRC &ZILMEM
          WHEN (4)  /* nothing */
          OTHERWISE ISPEXEC SETMSG MSG(&ZERRMSG)
         END
         ISPEXEC CONTROL ERRORS CANCEL
         RETURN CODE(&CC)
        END /* EDIT */


        QUALIFY: PROC 1 VAR
        SYSREF VAR
        SET L = &LENGTH(&STR(&VAR))
        IF &SUBSTR(1,&VAR ) = ' THEN +
         SET VAR = &SUBSTR(2:&L-1,&VAR)
        ELSE +
         SET VAR = &STR(&SYSPREF..&VAR)
        END /* QUALIFY

        BACKSCAN: PROC 1 WORD
         SYSREF WORD
         SET I = &SYSINDEX( ,&NRSTR(&WORD))
         IF &I = 1 THEN SET WORD =
         ELSE IF &I ¬= 0 THEN SET WORD = &SUBSTR(1:&I-1,&NRSTR(&WORD))
        END /* BACKSCAN

        /* Subprocedure to isolate the XZILMEM variable. */

        SETMSG_XZIL015:PROC 2 XZZZSRC XZILMEM
        ISPEXEC SETMSG MSG(XZIL015)
        RETURN
        END

