        PROC 0 XTRACE
        /**********************************************************************
        /*                                                                    *
        /* ZIL VERSION 1.3 - SEB1525 - 02/88                                  *
        /*                                                                    *
        /* ISPF ZIL option 9 - assemble ZIL assembler language function       *
        /*                                                                    *
        /* Change activity:                                                   *
        /*                                                                    *
        /* 05/25/88 - Member list processing added.                           *
        /* 05/31/88 - "B" selection code added to member list processing.     *
        /* 12/16/88 - Blank now means member list, not assemble.              *
        /* 04/25/90 - Use 'SYS1.MODGEN' instead of 'DST1.AMODGEN'             *
        /*                                                                    *
        /**********************************************************************

        NGLOBAL MACLIB TEMPPFX TEST XREF

        IF &XTRACE = XTRACE THEN DO
         CONTROL CONLIST SYMLIST LIST
         ISPEXEC CONTROL DISPLAY LINE
        END
        CONTROL NOFLUSH NOCAPS
        SET CURSOR = XZASMEM
        ISPEXEC VGET (ZTEMPF ZSCREEN) /* ZTEMPF = some_prefix.SPFTEMPn.CNTL
        SET SESSNO = &SUBSTR(&LENGTH(&STR(&ZTEMPF)),&ZTEMPF)
        IF &SESSNO ¬= L THEN +
         SET TEMPPFX = &STR(&SYSUID..SPFPIE&SESSNO..SPFTEMP&ZSCREEN)
        ELSE +
         SET TEMPPFX = &SUBSTR(1:&LENGTH(&STR(&ZTEMPF))-5,&ZTEMPF)
        LOOP:+
        ISPEXEC CONTROL DISPLAY REFRESH
        ISPEXEC DISPLAY PANEL(XZIL9) CURSOR(&CURSOR)
        IF &LASTCC ¬= 0 THEN EXIT
        IF &XTRACE = XTRACE THEN ISPEXEC CONTROL DISPLAY LINE
        SET XZZZSRC = &STR(&XZASSRC)
        SET XZZZLNK = &STR(&XZASLNK)
        SYSCALL QUALIFY XZZZSRC
        SYSCALL QUALIFY XZZZLNK
        IF &XZASSEL = E THEN DO
         SYSCALL EDIT ASSMEM('&XZASMEM') ASSSRC('&XZZZSRC')
         GOTO LOOP
        END

        SELECT &XZASTST
         WHEN (Y)   SET TEST = TEST
         OTHERWISE  SET TEST = NOTEST
        END
        SELECT &XZASXRF
         WHEN (F)   SET XREF = XREF(FULL)
         WHEN (S)   SET XREF = XREF(SHORT)
         OTHERWISE  SET XREF = NOXREF
        END

        SET MACLIB =  'PROGLIB.ZIL.&XZILSYS.MACLIB'

        /**********************************************************************/
        /*                                                                    */
        /* If the selection is blank                                          */
        /* or the member name is blank or a pattern, generate a member list.  */
        /*                                                                    */
        /**********************************************************************/

        /* (&STR(&XZASMEM) ¬= &STR() && &SYSINDEX(*,&XZASMEM) = 0) THEN DO

        IF &XZASSEL = A THEN DO

         SYSCALL ASSEMBLE ASSMEM ('&XZASMEM') +
                          ASSNAME('&XZASNAM') +
                          ASSSRC ('&XZZZSRC') +
                          ASSLINK('&XZZZLNK') +
                          ASSBAL ('&XZASBAL') +
                          ASSBLL ('&XZASBLL') +
                          ASSMAL ('&XZASMAL') +
                          ASSPARM('&XZASPRM')
         SELECT (&LASTCC)
          WHEN (0)
          WHEN (4)  DO
                     SET CURSOR = XZASMEM
                    END
          WHEN (1)  DO
                     SET CURSOR = XZASLNK
                    END
          OTHERWISE DO
                     SET CURSOR = XZASSRC
                   END
         END

        END

        ELSE DO

        /* process member list */

         ISPEXEC CONTROL ERRORS RETURN

         ISPEXEC LMINIT DATAID(DATAID) DATASET('&XZZZSRC')
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMOPEN DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR

         SET MLCURSOR = ZCMD
         SET MLTOP    = &STR(&XZASMEM)

         MLOOP:+
         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(DISPLAY) MEMBER(&XZASMEM) +
                         COMMANDS(ANY) +
                         CURSOR(&MLCURSOR) +
                         TOP(&MLTOP) +
                         PANEL(XZIL9M)
         SELECT &LASTCC
          WHEN (0)
          WHEN (4) GOTO NO_MEMBERS
          WHEN (8) GOTO MFINISH
          OTHERWISE GOTO ERROR
         END

        /**********************************************************************/
        /*                                                                    */
        /* Selection variables returned:                                      */
        /*                                                                    */
        /* ZLMEMBER - name of selected member                                 */
        /* ZCMD     - primary command                                         */
        /* ZLLCMD   - line command used to select the member                  */
        /* ZLUDATA  - user data area on member list                           */
        /*                                                                    */
        /**********************************************************************/

         SET PROCESSED_OK = N

         SET SYSDVAL = &NRSTR(&ZCMD)
         READDVAL ZCMDVERB ZCMDOPERAND
         SELECT (&NRSTR(&ZCMDVERB))
          WHEN ()
          WHEN (E | EDIT) DO
           IF &SYSINDEX(*,&ZCMDOPERAND) ¬= 0 THEN DO
            ISPEXEC SETMSG MSG(ISRM053) /* "*" not valid */
            GOTO MLOOP
           END
           SYSCALL EDIT ASSMEM('&NRSTR(&ZCMDOPERAND)') ASSSRC('&XZZZSRC')
           SET CC = &LASTCC
           IF &CC > 8 THEN SET MLCURSOR = ZCMD
           ELSE DO
            SET ZCMD =
            SET MLTOP = &NRSTR(&ZCMDOPERAND)
            IF &CC = 0 THEN DO
             ISPEXEC LMMDISP DATAID(&DATAID) OPTION(ADD) +
                             MEMBER(&NRSTR(&ZCMDOPERAND)) +
                             ZLUDATA (*ADDED)
             IF &LASTCC > 8 THEN GOTO ERROR
             /* if lastcc = 8 then member already exists, not added */
            END
           END
           GOTO MLOOP
          END
          OTHERWISE DO
           ISPEXEC SETMSG MSG(ISPZ001)
           GOTO MLOOP
          END
         END

         SET MLTOP = &STR(&ZLMEMBER)

         PROCESS_A_MEMBER:+
         SET PROCESSED_OK = N

         SYSCALL BACKSCAN ZLUDATA
         SYSCALL BACKSCAN ZLMEMBER

         IF &SUBSTR(1,&ZLUDATA ) = &STR(*) THEN SET NEWNAME =
         ELSE SET NEWNAME = &STR(&ZLUDATA)

         SELECT &ZLLCMD
          WHEN (A) DO
                    SYSCALL ASSEMBLE ASSMEM ('&ZLMEMBER') +
                                     ASSNAME('&NEWNAME' ) +
                                     ASSSRC ('&XZZZSRC' ) +
                                     ASSLINK('&XZZZLNK' ) +
                                     ASSBAL ('&XZASBAL' ) +
                                     ASSBLL ('&XZASBLL' ) +
                                     ASSMAL ('&XZASMAL' ) +
                                     ASSPARM('&XZASPRM' )
                    SELECT &LASTCC
                     WHEN (0)    DO
                                  SET ZLUDATA = &STR(*ASMLNKD)
                                  SET PROCESSED_OK = Y
                                 END
                     WHEN (1000)  SET ZLUDATA = &STR(*ASMFAIL)
                     WHEN (2000)  SET ZLUDATA = &STR(*LNKFAIL)
                     OTHERWISE    SET ZLUDATA = &STR(*ALCFAIL)
                    END
                    SET ZLLCMD =
                   END
          WHEN (E) DO
                    SYSCALL EDIT ASSMEM('&ZLMEMBER') ASSSRC('&XZZZSRC')
                    IF &LASTCC = 0 THEN +
                     SET ZLUDATA = &STR(*SAVED)
                    ELSE +
                     SET ZLUDATA =
                    SET ZLLCMD =
                    SET PROCESSED_OK = Y
                   END
          WHEN (B) DO
                    SYSCALL BROWSE   ASSMEM ('&ZLMEMBER') +
                                     ASSNAME('&NEWNAME' ) +
                                     ASSMAL ('&XZASMAL' )
                    IF &LASTCC = 0 THEN DO
                     SET PROCESSED_OK = Y
                     SET ZLUDATA =
                     SET ZLLCMD =
                    END
                   END
          OTHERWISE DO
                     ISPEXEC SETMSG MSG(XZIL017) /* invalid selection code
                     SET MLTOP = &STR(&ZLMEMBER)
                    END
         END

         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(PUT) +
                         MEMBER(&ZLMEMBER) ZLLCMD(&ZLLCMD) ZLUDATA(&ZLUDATA)
         IF &LASTCC > 8 THEN GOTO ERROR

         IF &PROCESSED_OK = Y THEN DO
          ISPEXEC LMMDISP DATAID(&DATAID) OPTION(GET)
          SET CC =  &LASTCC
          IF &CC > 8 THEN GOTO ERROR
          IF &CC = 0 THEN GOTO PROCESS_A_MEMBER
          SET MLCURSOR = ZCMD
         END
         ELSE DO
          SET MLCURSOR = ZLLCMD
         END

         GOTO MLOOP

         NO_MEMBERS: ISPEXEC SETMSG MSG(XZIL018)
         SET CURSOR = XZASMEM
         GOTO LOOP

         MFINISH:+
         ISPEXEC LMMDISP DATAID(&DATAID) OPTION(FREE)
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMCLOSE DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR
         ISPEXEC LMFREE DATAID(&DATAID)
         IF &LASTCC >= 8 THEN GOTO ERROR
        END

        GOTO LOOP

        ERROR:ISPEXEC CONTROL ERRORS CANCEL
        ISPEXEC DISPLAY PANEL(ZILTERM)
        GOTO LOOP

        ASSEMBLE: PROC 0 ASSMEM() ASSNAME() ASSSRC() ASSLINK() +
                         ASSBAL() ASSBLL()  ASSMAL() ASSPARM()

        SET ASSEMBLED = 0
        SET LINKEDITED = 0
        SET ASSEMBLY_ERROR = 0
        SET LINKEDIT_ERROR = 0
        IF &STR(&ASSNAME) ¬= THEN SET THENAME = &STR(&ASSNAME)
        ELSE SET THENAME = &STR(&ASSMEM)
        %XZCHECK '&ASSSRC(&ASSMEM)' SETMSG
        SET CHKCC = &LASTCC
        IF &CHKCC ¬= 0 THEN DO
         RETURN CODE(&CHKCC)
        END
        %XZCHECK '&ASSLINK(&THENAME)' SETMSG
        SELECT &LASTCC
         WHEN (0) DO
                  END
         WHEN (4) DO
                   ISPEXEC SETMSG MSG(XZIL014)  /* the only way to "SETNOMSG"
                  END
         OTHERWISE DO
          RETURN CODE(1)
         END
        END
        ISPEXEC CONTROL DISPLAY LINE START(1)
        SET ASMCODE = &STR('&ASSSRC(&ASSMEM)')
        SET OBJCODE = &STR('&TEMPPFX..OBJ')
        SET LNKLIST = &STR('&TEMPPFX..LNKLIST')
        IF &ASSMAL = Y THEN +
         SET ASMLIST = &STR('&SYSPREF..&THENAME..ASMLIST')
        ELSE +
         SET ASMLIST = &STR('&TEMPPFX..ASMLIST')
        IF &ASSBAL = Y THEN DO
         IF &SYSDSN(&ASMLIST) ¬= OK THEN %XZMAKE DS &ASMLIST ASMLIST
        END
        IF &SYSDSN(&OBJCODE) ¬= OK THEN %XZMAKE DS &OBJCODE OBJ
        ALLOC F(IEVIN)  SHR REU DA(&ASMCODE)
        ALLOC F(IEVLIN)     REU DA(&OBJCODE)              DSORG(PS)
        IF &ASSBAL = Y THEN DO
         ALLOC F(IEVPRINT)  REU DA(&ASMLIST)              DSORG(PS)
        END
        ELSE DO
         ALLOC F(IEVPRINT)  REU DUMMY
        END
        ALLOC F(IEVLIB) SHR REU DA('SYS1.MACLIB' 'SYS1.MODGEN' &MACLIB)
        ALLOC F(IEVUT1)     REU T SP(50 50) DEL REL
        ALLOC F(IEVTERM)    REU DA(*)
        WRITE Assembly object output to: &OBJCODE
        IF &ASSBAL = Y THEN DO
         WRITE Assembly print output to: &ASMLIST
        END
        WRITE Assembly in progress for &THENAME
        XINV IEV90 'LIST,TERM,ESD,NORLD,OBJECT,NODECK,NORENT,&XREF,&TEST,+
                    SYSPARM(&NRSTR(&ASSPARM))' +
             NOFILE +
             SYSIN(IEVIN) SYSLIN(IEVLIN) SYSPRINT(IEVPRINT) SYSLIB(IEVLIB) +
             SYSTERM(IEVTERM) SYSUT1(IEVUT1)
        SET XZILCC = &LASTCC
        FREE F(IEVIN IEVLIN IEVPRINT IEVLIB IEVUT1 IEVTERM)
        SET ASSEMBLED = 1
        IF &XZILCC > 0 THEN DO
         SET ASSEMBLY_ERROR = 1
         ISPEXEC SETMSG MSG(XZIL009)
         GOTO BROLIST
        END
        SELECT &STR(&THENAME)
         WHEN (ZIFINIT) DO
          SET NCAL =
          SET LINKLIB = LIB('SYS1.VSF2FORT')
         END
         WHEN (ZILSUBS) DO
          SET NCAL =
          SET LINKLIB = LIB('&ASSLINK')
         END
         OTHERWISE DO
          SET NCAL = NCAL
          SET LINKLIB =
         END
        END
        IF &ASSBLL = Y THEN DO
         IF &SYSDSN(&LNKLIST) ¬= OK THEN %XZMAKE DS &LNKLIST LINKLIST
         WRITE Linkage editor print output to: &LNKLIST
         SET LINKPRINT = &STR(PRINT(&LNKLIST))
        END
        ELSE DO
         SET LINKPRINT = NOPRINT
        END
        WRITE Linkedit in progress for &THENAME
        LINK &OBJCODE +
           LOAD('&ASSLINK(&THENAME)') +
           &LINKPRINT +
           &LINKLIB +
           LIST MAP LET TERM &NCAL &TEST
        SET XZILCC = &LASTCC
        SET LINKEDITED = 1
        IF &XZILCC > 4 THEN DO
         WRITE Possible linkedit error, RC=&XZILCC
         SET ASSEMBLY_ERROR = 1
         SET LINKEDIT_ERROR = 1
         ISPEXEC SETMSG MSG(XZIL000)
        END
        IF &XZILCC < 12 THEN +
         WRITE Load module is in: '&ASSLINK(&THENAME)'.
        BROLIST:+
        ISPEXEC CONTROL ERRORS RETURN
        IF &ASSEMBLED = 1 THEN DO
         IF &ASSBAL = Y /* | &ASSEMBLY_ERROR = 1 */ THEN DO
          ISPEXEC BROWSE DATASET(&ASMLIST)
          IF &LASTCC > 8 THEN ISPEXEC DISPLAY PANEL(ZILTERM)
         END
        END
        IF &LINKEDITED = 1 THEN DO
         IF &ASSBLL = Y /* | &LINKEDIT_ERROR = 1 */ THEN DO
          ISPEXEC BROWSE DATASET(&LNKLIST)
          IF &LASTCC > 8 THEN ISPEXEC DISPLAY PANEL(ZILTERM)
         END
        END
        ISPEXEC CONTROL ERRORS CANCEL
        IF      &ASSEMBLY_ERROR = 1 THEN RETURN CODE(1000)
        ELSE IF &LINKEDIT_ERROR = 1 THEN RETURN CODE(2000)
        ELSE RETURN CODE(0)
        END /* ASSEMBLE */

        EDIT: PROC 0 ASSMEM() ASSSRC()
         ISPEXEC CONTROL ERRORS RETURN
         ISPEXEC EDIT DATASET('&ASSSRC(&ASSMEM)')
         SET CC = &LASTCC
         SELECT &CC
          WHEN (0) SYSCALL SETMSG_XZIL015 &ASSSRC &ASSMEM
          WHEN (4)  /* nothing */
          OTHERWISE ISPEXEC SETMSG MSG(&ZERRMSG)
         END
         ISPEXEC CONTROL ERRORS CANCEL
         RETURN CODE(&CC)
        END /* EDIT */

        BROWSE: PROC 0 ASSMEM() ASSNAME() ASSMAL()
         IF &STR(&ASSNAME) ¬= THEN SET THENAME = &STR(&ASSNAME)
         ELSE SET THENAME = &STR(&ASSMEM)
         IF &ASSMAL = Y THEN +
          SET ASMLIST = &STR('&SYSPREF..&THENAME..ASMLIST')
         ELSE +
          SET ASMLIST = &STR('&TEMPPFX..ASMLIST')
         ISPEXEC CONTROL ERRORS RETURN
         ISPEXEC BROWSE DATASET(&ASMLIST)
         SET CC = &LASTCC
         IF &CC > 8 THEN ISPEXEC SETMSG MSG(&ZERRMSG)
         ELSE ISPEXEC SETMSG MSG(XZIL014)  /* the only way to "SETNOMSG"
         ISPEXEC CONTROL ERRORS CANCEL
         RETURN CODE(&CC)
        END /* BROWSE */

        QUALIFY: PROC 1 VAR
         SYSREF VAR
         SET L = &LENGTH(&STR(&VAR))
         IF &SUBSTR(1,&VAR ) = ' THEN +
          SET VAR = &SUBSTR(2:&L-1,&VAR)
         ELSE +
          SET VAR = &STR(&SYSPREF..&VAR)
        END /* QUALIFY

        BACKSCAN: PROC 1 WORD
         SYSREF WORD
         SET I = &SYSINDEX( ,&NRSTR(&WORD))
         IF &I = 1 THEN SET WORD =
         ELSE IF &I ¬= 0 THEN SET WORD = &SUBSTR(1:&I-1,&NRSTR(&WORD))
        END /* BACKSCAN

        /* Subprocedure to isolate the XZILMEM variable. */

        SETMSG_XZIL015:PROC 2 XZZZSRC XZILMEM
        ISPEXEC SETMSG MSG(XZIL015)
        RETURN
        END

